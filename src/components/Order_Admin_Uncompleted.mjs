// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Dialog from "./common/Dialog.mjs";
import * as Locale from "../utils/Locale.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";

function formatDate(d) {
  return Locale.DateTime.formatFromUTC(new Date(d), "yyyy/MM/dd HH:mm");
}

function Order_Admin_Uncompleted$Item$Table(Props) {
  var order = Props.order;
  var match = React.useState(function () {
        return /* Hide */1;
      });
  var setShowDetail = match[1];
  var match$1 = order.data;
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "table-cell py-2 align-top"
                }, React.createElement("span", {
                      className: "block mb-1"
                    }, order.orderNo), React.createElement("span", {
                      className: "block text-gray-400 mb-1"
                    }, formatDate(order.orderDate))), React.createElement("div", {
                  className: "table-cell p-2 align-top"
                }, React.createElement("span", {
                      className: "block text-gray-400"
                    }, order.name)), React.createElement("div", {
                  className: "table-cell p-2 align-top"
                }, React.createElement("span", {
                      className: "whitespace-nowrap"
                    }, order.email), React.createElement("span", {
                      className: "whitespace-nowrap"
                    }, order.phone)), React.createElement("div", {
                  className: "table-cell p-2 align-top"
                }, React.createElement("span", {
                      className: "block"
                    }, String(order.currentDeposit)), React.createElement("button", {
                      className: "block bg-gray-100 text-gray-500 py-1 px-2 rounded-lg mt-2 whitespace-nowrap",
                      disabled: match$1 === undefined,
                      type: "button",
                      onClick: (function (param) {
                          setShowDetail(function (param) {
                                return /* Show */0;
                              });
                        })
                    }, "조회하기")), React.createElement("div", {
                  className: "table-cell p-2 align-top"
                }, React.createElement("span", {
                      className: "block"
                    }, Belt_Option.mapWithDefault(order.userDeposit, "0", (function (prim) {
                            return String(prim);
                          }))), React.createElement("button", {
                      className: "block bg-gray-100 text-gray-500 py-1 px-2 rounded-lg mt-2 whitespace-nowrap",
                      type: "button"
                    }, "다운로드")), React.createElement("div", {
                  className: "table-cell p-2 align-top"
                }, React.createElement("span", {
                      className: "block w-32 overflow-hidden overflow-ellipsis"
                    }, Belt_Option.getWithDefault(order.errorCode, ""))), React.createElement(Dialog.make, {
                  isShow: match[0],
                  children: React.createElement("div", {
                        className: "bg-white transform transition-all rounded-xl py-10 px-7"
                      }, React.createElement("h3", {
                            className: "text-2xl font-bold text-left"
                          }, "" + order.name + "님의 주문 내역"), React.createElement("div", {
                            className: "flex justify-end text-gray-500 mt-4"
                          }, "총 잔액: " + String(order.currentDeposit) + ""), React.createElement("div", {
                            className: "block overflow-y-auto overscroll-contain max-h-50"
                          }, React.createElement("div", {
                                className: "table mt-4 text-sm"
                              }, React.createElement("div", {
                                    className: "table-row bg-gray-100"
                                  }, React.createElement("div", {
                                        className: "table-cell p-4 align-middle text-gray-500"
                                      }, "주문번호·일자·바이어명"), React.createElement("div", {
                                        className: "table-cell p-4 align-middle text-gray-500"
                                      }, "주문상품"), React.createElement("div", {
                                        className: "table-cell p-4 align-middle text-gray-500"
                                      }, React.createElement("span", {
                                            className: "block"
                                          }, "상품금액"), React.createElement("span", {
                                            className: "block"
                                          }, "잔여수량"))), Belt_Option.mapWithDefault(order.data, null, (function (details) {
                                      return Garter_Array.map(details, (function (detail) {
                                                    return React.createElement("div", {
                                                                className: "table-row text-left"
                                                              }, React.createElement("div", {
                                                                    className: "table-cell p-3 border-b"
                                                                  }, React.createElement("span", {
                                                                        className: "block"
                                                                      }, order.orderNo), React.createElement("span", {
                                                                        className: "block mt-1 text-gray-500"
                                                                      }, formatDate(order.orderDate)), React.createElement("span", {
                                                                        className: "block mt-1 text-gray-500"
                                                                      }, order.name)), React.createElement("div", {
                                                                    className: "table-cell p-3 border-b"
                                                                  }, React.createElement("span", {
                                                                        className: "block mt-1 text-gray-500"
                                                                      }, detail.productSku), React.createElement("span", {
                                                                        className: "block mt-1"
                                                                      }, detail.productName), React.createElement("span", {
                                                                        className: "block mt-1 text-gray-500"
                                                                      }, Belt_Option.getWithDefault(detail.productOptionName, ""))), React.createElement("div", {
                                                                    className: "table-cell p-3 border-b"
                                                                  }, React.createElement("span", {
                                                                        className: "block mt-1"
                                                                      }, "" + Locale.Float.show(undefined, detail.productPrice, 0) + "원"), React.createElement("span", {
                                                                        className: "block mt-1"
                                                                      }, detail.quantity)));
                                                  }));
                                    })))), React.createElement("button", {
                            className: "mt-8 p-4 w-full sm:w-2/3 lg:w-1/2 bg-gray-200 rounded-xl hover:bg-green-gl-dark font-bold",
                            onClick: (function (param) {
                                setShowDetail(function (param) {
                                      return /* Hide */1;
                                    });
                              })
                          }, "확인"))
                }));
}

var Table = {
  make: Order_Admin_Uncompleted$Item$Table
};

var Item = {
  Table: Table
};

function Order_Admin_Uncompleted(Props) {
  var order = Props.order;
  return React.createElement("li", {
              className: "table-row text-gray-700"
            }, React.createElement(Order_Admin_Uncompleted$Item$Table, {
                  order: order
                }));
}

var make = Order_Admin_Uncompleted;

export {
  formatDate ,
  Item ,
  make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Helper from "../utils/Helper.mjs";
import * as Locale from "../utils/Locale.mjs";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import Format from "date-fns/format";
import * as Shipment_Detail_Button_Seller from "./Shipment_Detail_Button_Seller.mjs";

function formatDate(d) {
  return Format(new Date(d), "yyyy-MM-dd");
}

function displayKind(kind) {
  switch (kind) {
    case /* ONLINE */0 :
        return "온라인 택배";
    case /* WHOLESALE */1 :
        return "도매출하";
    case /* OFFLINE */2 :
        return "오프라인";
    
  }
}

function Shipment_Seller$Item$Table(Props) {
  var shipment = Props.shipment;
  var match = shipment.marketType;
  return React.createElement(React.Fragment, undefined, React.createElement("li", {
                  className: "hidden lg:grid lg:grid-cols-8-seller text-gray-700"
                }, React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, React.createElement("div", undefined, Format(new Date(shipment.date), "yyyy-MM-dd"))), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, React.createElement("div", undefined, React.createElement("span", {
                              className: "px-2 py-0.5 rounded bg-green-gl-light text-green-gl"
                            }, displayKind(shipment.marketType)))), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, React.createElement("div", undefined, shipment.crop), React.createElement("div", {
                          className: "text-gray-gl"
                        }, shipment.cultivar)), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, React.createElement("div", undefined, Belt_Option.getWithDefault(Helper.$$Option.map2(shipment.weight, shipment.weightUnit, (function (w, wu) {
                                    return String(w) + Belt_Option.getWithDefault(Js_json.decodeString(CustomHooks.Products.weightUnit_encode(wu)), "g");
                                  })), "")), React.createElement("div", {
                          className: "text-gray-gl"
                        }, Belt_Option.getWithDefault(shipment.packageType, ""))), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, React.createElement("div", undefined, Belt_Option.getWithDefault(shipment.grade, ""))), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center ml-4"
                    }, String(shipment.totalQuantity)), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, Locale.Float.show(undefined, shipment.totalPrice, 0) + "원"), React.createElement("div", {
                      className: "h-full flex flex-col px-4 py-3 whitespace-nowrap justify-center"
                    }, match !== 1 ? null : React.createElement(Shipment_Detail_Button_Seller.make, {
                            date: Format(new Date(shipment.date), "yyyy-MM-dd"),
                            sku: shipment.sku
                          }))));
}

var Table = {
  make: Shipment_Seller$Item$Table
};

function Shipment_Seller$Item$Card(Props) {
  var shipment = Props.shipment;
  return React.createElement(React.Fragment, undefined, React.createElement("li", {
                  className: "py-7 px-5 lg:hidden text-black-gl"
                }, React.createElement("section", {
                      className: "flex items-start justify-between text-base"
                    }, React.createElement("div", {
                          className: "font-bold mr-1"
                        }, Format(new Date(shipment.date), "yyyy-MM-dd")), React.createElement("div", {
                          className: "px-2 py-0.5 rounded bg-green-gl-light text-green-gl"
                        }, displayKind(shipment.marketType))), React.createElement("section", {
                      className: "divide-y divide-gray-100"
                    }, React.createElement("div", {
                          className: "py-3"
                        }, React.createElement("div", {
                              className: "flex"
                            }, React.createElement("span", {
                                  className: "w-20 text-gray-gl"
                                }, "작물·품종"), React.createElement("span", {
                                  className: "ml-2"
                                }, shipment.crop + "·" + shipment.cultivar)), React.createElement("div", {
                              className: "flex mt-2"
                            }, React.createElement("span", {
                                  className: "w-20 text-gray-gl"
                                }, "거래중량단위·포장규격"), React.createElement("span", {
                                  className: "ml-2"
                                }, Belt_Option.mapWithDefault(shipment.weight, "", (function (prim) {
                                        return String(prim);
                                      })) + "·" + Belt_Option.getWithDefault(shipment.packageType, ""))), React.createElement("div", {
                              className: "flex mt-2"
                            }, React.createElement("span", {
                                  className: "w-20 text-gray-gl"
                                }, "등급"), React.createElement("span", {
                                  className: "ml-2"
                                }, Belt_Option.getWithDefault(shipment.grade, "")))), React.createElement("div", {
                          className: "py-3"
                        }, React.createElement("div", {
                              className: "flex"
                            }, React.createElement("span", {
                                  className: "w-20 text-gray-gl"
                                }, "총 수량"), React.createElement("span", {
                                  className: "ml-2"
                                }, String(shipment.totalQuantity))), React.createElement("div", {
                              className: "flex mt-2"
                            }, React.createElement("span", {
                                  className: "w-20 text-gray-gl"
                                }, "총 금액"), React.createElement("span", {
                                  className: "ml-2"
                                }, Locale.Float.show(undefined, shipment.totalPrice, 0) + "원"))))));
}

var Card = {
  make: Shipment_Seller$Item$Card
};

var Item = {
  Table: Table,
  Card: Card
};

function Shipment_Seller(Props) {
  var shipment = Props.shipment;
  return React.createElement(React.Fragment, undefined, React.createElement(Shipment_Seller$Item$Table, {
                  shipment: shipment
                }), React.createElement(Shipment_Seller$Item$Card, {
                  shipment: shipment
                }));
}

var make = Shipment_Seller;

export {
  formatDate ,
  displayKind ,
  Item ,
  make ,
  
}
/* react Not a pure module */

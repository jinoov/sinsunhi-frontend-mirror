// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Constants from "../constants/Constants.mjs";
import * as ErrorPanel from "./common/ErrorPanel.mjs";
import * as Pagination from "./common/Pagination.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as EmptyOrders from "./common/EmptyOrders.mjs";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as Settlement_Admin from "./Settlement_Admin.mjs";
import * as ReactRadioGroup from "@radix-ui/react-radio-group";

function Settlements_List_Admin$Header(Props) {
  return React.createElement("div", {
              className: "grid grid-cols-6-admin-settlement bg-gray-100 text-gray-500 h-12"
            }, React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, ""), React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "생산자번호·명"), React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "정산주기"), React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "송장등록기준·가송장제외"), React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "배송완료기준"), React.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "세액"));
}

var Header = {
  make: Settlements_List_Admin$Header
};

function Settlements_List_Admin$Loading(Props) {
  return React.createElement("div", {
              className: "w-full overflow-x-scroll"
            }, React.createElement("div", {
                  className: "min-w-max text-sm divide-y divide-gray-100"
                }, React.createElement(Settlements_List_Admin$Header, {}), React.createElement("ol", {
                      className: "divide-y divide-gray-100 lg:list-height-admin-buyer lg:overflow-y-scroll"
                    }, Garter_Array.map(Garter_Array.make(5, 0), (function (param) {
                            return React.createElement(Settlement_Admin.Item.Table.Loading.make, {});
                          })))));
}

var Loading = {
  make: Settlements_List_Admin$Loading
};

function Settlements_List_Admin(Props) {
  var status = Props.status;
  var producerCodeToDownload = Props.producerCodeToDownload;
  var onCheckSettlement = Props.onCheckSettlement;
  if (typeof status === "number") {
    return React.createElement(Settlements_List_Admin$Loading, {});
  }
  if (status.TAG !== /* Loaded */0) {
    return React.createElement(ErrorPanel.make, {
                error: status._0,
                renderOnRetry: React.createElement(Settlements_List_Admin$Loading, {})
              });
  }
  var settlements$p = CustomHooks.Settlements.settlements_decode(status._0);
  var tmp;
  if (settlements$p.TAG === /* Ok */0) {
    var settlements$p$1 = settlements$p._0;
    tmp = React.createElement("ol", {
          className: "lg:list-height-admin-buyer lg:overflow-y-scroll"
        }, settlements$p$1.data.length !== 0 ? React.createElement(ReactRadioGroup.Root, {
                children: Garter_Array.map(settlements$p$1.data, (function (settlement) {
                        return React.createElement(Settlement_Admin.make, {
                                    settlement: settlement,
                                    key: settlement.producerCode
                                  });
                      })),
                value: Belt_Option.getWithDefault(producerCodeToDownload, ""),
                onValueChange: onCheckSettlement,
                name: "producer-code",
                className: "divide-y divide-gray-100"
              }) : React.createElement(EmptyOrders.make, {}));
  } else {
    console.log(settlements$p._0);
    tmp = null;
  }
  var tmp$1;
  if (typeof status === "number" || status.TAG !== /* Loaded */0) {
    tmp$1 = null;
  } else {
    var settlements$p$2 = CustomHooks.Settlements.settlements_decode(status._0);
    if (settlements$p$2.TAG === /* Ok */0) {
      var settlements$p$3 = settlements$p$2._0;
      tmp$1 = React.createElement("div", {
            className: "flex justify-center pt-5"
          }, React.createElement(Pagination.make, {
                pageDisplySize: Constants.pageDisplySize,
                itemPerPage: settlements$p$3.limit,
                total: settlements$p$3.count
              }));
    } else {
      tmp$1 = null;
    }
  }
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full overflow-x-scroll"
                }, React.createElement("div", {
                      className: "min-w-max text-sm divide-y divide-gray-100"
                    }, React.createElement(Settlements_List_Admin$Header, {}), tmp)), tmp$1);
}

var make = Settlements_List_Admin;

export {
  Header ,
  Loading ,
  make ,
  
}
/* react Not a pure module */

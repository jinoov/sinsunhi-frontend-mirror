// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as React from "react";
import * as Helper from "../utils/Helper.mjs";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as FetchHelper from "../utils/FetchHelper.mjs";
import Async from "react-select/async";

function decodeSearchType(type_) {
  if (type_ === "Crop") {
    return "item";
  } else if (type_ === "Cultivar") {
    return "kind";
  } else {
    return "item-kind";
  }
}

function Search_Crop_Cultivar(Props) {
  var type_ = Props.type_;
  var value = Props.value;
  var onChange = Props.onChange;
  var handleLoadOptions = function (inputValue) {
    return Js_promise.then_((function (result) {
                  var result$p = Belt_Result.map(CustomHooks.CropCategory.response_decode(result), (function (response$p) {
                          return Belt_Array.map(response$p.data, (function (category) {
                                        return /* Selected */{
                                                value: String(category.id),
                                                label: "" + category.crop + "(" + category.cultivar + ")"
                                              };
                                      }));
                        }));
                  if (result$p.TAG !== /* Ok */0) {
                    return Promise.reject(Js_exn.raiseError("작물/품종 검색 에러(디코딩 오류)"));
                  }
                  var categories = result$p._0;
                  if (categories.length !== 0) {
                    return Promise.resolve(categories);
                  } else {
                    return Promise.reject(Js_exn.raiseError("작물/품종 검색 결과 없음"));
                  }
                }), FetchHelper.fetchWithRetry(FetchHelper.getWithToken, "" + Env.restApiUrl + "/category/search?type=" + decodeSearchType(type_) + "&query=" + inputValue + "", "", 3));
  };
  return React.createElement(Async, {
              value: value,
              cacheOptions: false,
              defaultOptions: false,
              loadOptions: Helper.Debounce.make1(handleLoadOptions, 500),
              onChange: onChange,
              placeholder: type_ === "Crop" ? "작물명으로 찾기" : (
                  type_ === "Cultivar" ? "품종명으로 찾기" : "작물-품종명으로 찾기"
                ),
              noOptionsMessage: (function (param) {
                  return "검색 결과가 없습니다.";
                }),
              isClearable: true,
              styles: {
                menu: (function (provide, param) {
                    return Object.assign(Object.assign({}, provide), {
                                position: "inherit"
                              });
                  }),
                control: (function (provide, param) {
                    return Object.assign(Object.assign({}, provide), {
                                "min-height": "unset",
                                height: "2.25rem"
                              });
                  })
              }
            });
}

var make = Search_Crop_Cultivar;

export {
  decodeSearchType ,
  make ,
}
/* Env Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as IconArrow from "./svgs/IconArrow.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ShopProductListItem_Buyer from "./ShopProductListItem_Buyer.mjs";
import * as ShopMainSpecialShowcaseListBuyerQuery_graphql from "../__generated__/ShopMainSpecialShowcaseListBuyerQuery_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(ShopMainSpecialShowcaseListBuyerQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(ShopMainSpecialShowcaseListBuyerQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, ShopMainSpecialShowcaseListBuyerQuery_graphql.node, ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, ShopMainSpecialShowcaseListBuyerQuery_graphql.node, ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(ShopMainSpecialShowcaseListBuyerQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(ShopMainSpecialShowcaseListBuyerQuery_graphql.node, ShopMainSpecialShowcaseListBuyerQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query_displayCategoryProductsSort_decode = ShopMainSpecialShowcaseListBuyerQuery_graphql.Utils.displayCategoryProductsSort_decode;

var Query_displayCategoryProductsSort_fromString = ShopMainSpecialShowcaseListBuyerQuery_graphql.Utils.displayCategoryProductsSort_fromString;

var Query = {
  displayCategoryProductsSort_decode: Query_displayCategoryProductsSort_decode,
  displayCategoryProductsSort_fromString: Query_displayCategoryProductsSort_fromString,
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function ShopMainSpecialShowcaseList_Buyer$PC$Placeholder(Props) {
  return React.createElement("div", undefined, Belt_Array.map(Belt_Array.range(1, 10), (function (categoryIdx) {
                    var containerStyle = categoryIdx === 1 ? "w-full bg-[#F9F9F9] py-16" : "w-full bg-white py-16";
                    return React.createElement("section", {
                                key: "showcase-skeleton-" + String(categoryIdx) + "",
                                className: containerStyle
                              }, React.createElement("div", {
                                    className: "w-[1280px] mx-auto px-5"
                                  }, React.createElement("div", {
                                        className: "w-[155px] h-[38px] animate-pulse bg-gray-150 rounded-lg"
                                      }), React.createElement("ol", {
                                        className: "mt-12 grid grid-cols-4 gap-x-10 gap-y-16"
                                      }, Belt_Array.map(Belt_Array.range(1, 8), (function (idx) {
                                              return React.createElement(ShopProductListItem_Buyer.PC.Placeholder.make, {
                                                          key: "category-" + String(categoryIdx) + "-product-skeleton-" + String(idx) + ""
                                                        });
                                            })))));
                  })));
}

var Placeholder = {
  make: ShopMainSpecialShowcaseList_Buyer$PC$Placeholder
};

function ShopMainSpecialShowcaseList_Buyer$PC(Props) {
  var router = Router.useRouter();
  var variables = {
    first: 8,
    onlyBuyable: true,
    onlyDisplayable: true,
    sort: "UPDATED_DESC"
  };
  var match = use(variables, /* StoreAndNetwork */2, undefined, undefined, undefined);
  return Belt_Array.mapWithIndex(match.specialDisplayCategories, (function (idx, param) {
                var match = param.products;
                var edges = match.edges;
                var id = param.id;
                var containerStyle = idx === 0 ? "w-full bg-[#F9F9F9] py-16 mb-[144px] text-gray-800" : "w-full mb-[144px] bg-white text-gray-800";
                if (edges.length !== 0) {
                  return React.createElement("section", {
                              key: "main-special-category-" + id + "-pc",
                              className: containerStyle
                            }, React.createElement("div", {
                                  className: "w-[1280px] mx-auto px-5"
                                }, React.createElement("h1", {
                                      className: "text-2xl font-bold"
                                    }, param.name), React.createElement("ol", {
                                      className: "mt-12 grid grid-cols-4 gap-x-10 gap-y-16"
                                    }, Belt_Array.map(edges, (function (param) {
                                            return React.createElement(React.Suspense, {
                                                        children: React.createElement(ShopProductListItem_Buyer.PC.make, {
                                                              query: param.node.fragmentRefs
                                                            }),
                                                        fallback: React.createElement(ShopProductListItem_Buyer.PC.Placeholder.make, {}),
                                                        key: "main-special-category-" + id + "-list-item-" + param.cursor + "-pc"
                                                      });
                                          }))), match.pageInfo.hasNextPage ? React.createElement("div", {
                                        className: "mt-12 flex items-center justify-center"
                                      }, React.createElement("button", {
                                            className: "px-6 py-3 bg-gray-100 rounded-full text-sm flex items-center",
                                            onClick: (function (param) {
                                                return ReactEvents.interceptingHandler((function (param) {
                                                              router.push("/categories/" + id + "");
                                                            }), param);
                                              })
                                          }, "전체보기", React.createElement(IconArrow.make, {
                                                height: "16",
                                                width: "16",
                                                stroke: "#262626",
                                                className: "ml-1"
                                              }))) : null));
                } else {
                  return null;
                }
              }));
}

var PC = {
  Placeholder: Placeholder,
  make: ShopMainSpecialShowcaseList_Buyer$PC
};

function ShopMainSpecialShowcaseList_Buyer$MO$Placeholder(Props) {
  return React.createElement("div", undefined, Belt_Array.map(Belt_Array.range(1, 10), (function (categoryIdx) {
                    return React.createElement("section", {
                                key: "showcase-skeleton-" + String(categoryIdx) + "",
                                className: "w-full px-5 mt-12"
                              }, React.createElement("div", {
                                    className: "w-full"
                                  }, React.createElement("div", {
                                        className: "w-[107px] h-[26px] animate-pulse bg-gray-150 rounded-lg"
                                      }), React.createElement("ol", {
                                        className: "mt-4 grid grid-cols-2 gap-x-4 gap-y-8"
                                      }, Belt_Array.map(Belt_Array.range(1, 6), (function (idx) {
                                              return React.createElement(ShopProductListItem_Buyer.MO.Placeholder.make, {
                                                          key: "category-" + String(categoryIdx) + "-product-skeleton-" + String(idx) + ""
                                                        });
                                            })))));
                  })));
}

var Placeholder$1 = {
  make: ShopMainSpecialShowcaseList_Buyer$MO$Placeholder
};

function ShopMainSpecialShowcaseList_Buyer$MO(Props) {
  var router = Router.useRouter();
  var variables = {
    first: 8,
    onlyBuyable: true,
    onlyDisplayable: true,
    sort: "UPDATED_DESC"
  };
  var match = use(variables, /* StoreAndNetwork */2, undefined, undefined, undefined);
  return Belt_Array.map(match.specialDisplayCategories, (function (param) {
                var match = param.products;
                var edges = match.edges;
                var id = param.id;
                if (edges.length !== 0) {
                  return React.createElement("section", {
                              key: "main-special-category-" + id + "-mobile",
                              className: "w-full px-5 mt-12"
                            }, React.createElement("div", {
                                  className: "w-full"
                                }, React.createElement("h1", {
                                      className: "text-lg font-bold"
                                    }, param.name), React.createElement("ol", {
                                      className: "mt-4 grid grid-cols-2 gap-x-4 gap-y-8"
                                    }, Belt_Array.map(edges, (function (param) {
                                            return React.createElement(React.Suspense, {
                                                        children: React.createElement(ShopProductListItem_Buyer.MO.make, {
                                                              query: param.node.fragmentRefs
                                                            }),
                                                        fallback: React.createElement(ShopProductListItem_Buyer.MO.Placeholder.make, {}),
                                                        key: "main-special-category-" + id + "-list-item-" + param.cursor + "-mobile"
                                                      });
                                          }))), match.pageInfo.hasNextPage ? React.createElement("div", {
                                        className: "mt-8 flex items-center justify-center"
                                      }, React.createElement("button", {
                                            className: "px-[18px] py-[10px] bg-gray-100 rounded-full text-sm flex items-center",
                                            onClick: (function (param) {
                                                return ReactEvents.interceptingHandler((function (param) {
                                                              router.push("/categories/" + id + "");
                                                            }), param);
                                              })
                                          }, "전체보기", React.createElement(IconArrow.make, {
                                                height: "16",
                                                width: "16",
                                                stroke: "#262626",
                                                className: "ml-1"
                                              }))) : null));
                } else {
                  return null;
                }
              }));
}

var MO = {
  Placeholder: Placeholder$1,
  make: ShopMainSpecialShowcaseList_Buyer$MO
};

export {
  Query ,
  PC ,
  MO ,
}
/* react Not a pure module */

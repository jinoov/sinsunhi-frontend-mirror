// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as React from "react";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconArrowSelect from "./svgs/IconArrowSelect.mjs";
import Format from "date-fns/format";
import SubDays from "date-fns/subDays";
import * as ChannelTalkHelper from "../utils/ChannelTalkHelper.mjs";
import * as ReactDropdownMenu from "@radix-ui/react-dropdown-menu";

function Header$User(Props) {
  var kind = Props.kind;
  var router = Router.useRouter();
  var user = CustomHooks.Auth.use(undefined);
  var logOut = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  CustomHooks.Auth.logOut(undefined);
                  ChannelTalkHelper.logout(undefined);
                  var role = Belt_Option.map(CustomHooks.Auth.toOption(user), (function (user$p) {
                          return user$p.role;
                        }));
                  if (role === undefined) {
                    return ;
                  }
                  switch (role) {
                    case /* Seller */0 :
                        router.push("/seller/signin");
                        return ;
                    case /* Buyer */1 :
                        router.push("/buyer/signin");
                        return ;
                    case /* Admin */2 :
                        router.push("/admin/signin");
                        return ;
                    
                  }
                }), param);
  };
  return React.createElement("div", {
              className: "relative flex items-center sm:h-16",
              id: "gnb-user"
            }, React.createElement(ReactDropdownMenu.Root, {
                  children: null
                }, React.createElement(ReactDropdownMenu.Trigger, {
                      children: null,
                      className: "focus:outline-none"
                    }, React.createElement("div", {
                          className: "hidden sm:flex sm:h-16 sm:items-center underline"
                        }, React.createElement("span", undefined, Belt_Option.getWithDefault(Belt_Option.flatMap(CustomHooks.Auth.toOption(user), (function (user$p) {
                                        if (kind !== 0) {
                                          return user$p.email;
                                        } else {
                                          return user$p.name;
                                        }
                                      })), "")), React.createElement("span", {
                              className: "relative ml-1"
                            }, React.createElement(IconArrowSelect.make, {
                                  height: "28",
                                  width: "28",
                                  fill: "#121212"
                                }))), React.createElement("div", {
                          className: "flex items-center h-16 sm:hidden"
                        }, React.createElement("span", {
                              className: "flex w-8 h-8 rounded-full bg-gray-100 justify-center items-center"
                            }, Belt_Option.getWithDefault(Belt_Option.map(Belt_Option.map(Belt_Option.flatMap(CustomHooks.Auth.toOption(user), (function (user$p) {
                                                if (kind !== 0) {
                                                  return user$p.email;
                                                } else {
                                                  return user$p.name;
                                                }
                                              })), (function (param) {
                                            return param.slice(0, 1);
                                          })), (function (prim) {
                                        return prim.toUpperCase();
                                      })), "")))), React.createElement(ReactDropdownMenu.Content, {
                      children: null,
                      align: "end",
                      className: "dropdown-content bg-white shadow-gl p-2"
                    }, React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("span", {
                                className: "block py-3 px-8 whitespace-nowrap cursor-default",
                                onClick: logOut
                              }, "로그아웃"),
                          className: "focus:outline-none hover:bg-div-shape-L1 rounded-lg"
                        }), React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("a", {
                                className: "cursor-default",
                                href: Env.kakaotalkChannel,
                                target: "_blank"
                              }, React.createElement("span", {
                                    className: "block py-3 px-8 whitespace-nowrap hover:bg-div-shape-L1 rounded-lg"
                                  }, "고객센터")),
                          className: "focus:outline-none"
                        }))));
}

var User = {
  make: Header$User
};

function Header$Seller(Props) {
  var router = Router.useRouter();
  var tabActive = "block py-2 shadow-inner-b-4 shadow-green sm:h-16 sm:flex sm:items-center whitespace-nowrap";
  var tabInactive = "block py-2 shadow-green sm:h-16 sm:flex sm:items-center text-gray-400 whitespace-nowrap";
  var secondPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 1);
  var tab = Belt_Option.getWithDefault(Belt_Option.map(secondPathname, (function (p) {
              switch (p) {
                case "download-center" :
                    return "downloadCenter";
                case "orders" :
                    return "list";
                case "shipments" :
                    return "shipments";
                case "upload" :
                    return "upload";
                default:
                  return "list";
              }
            })), "list");
  return React.createElement("nav", undefined, React.createElement("ol", {
                  className: "px-4 shadow-inner-b-1 shadow-gray sm:flex sm:items-center sm:justify-between sm:pl-10 sm:pr-4 md:px-20"
                }, React.createElement("div", {
                      className: "flex flex-nowrap items-center"
                    }, React.createElement(Link, {
                          href: "/seller",
                          children: React.createElement("li", {
                                className: "flex-1 py-2"
                              }, React.createElement("img", {
                                    className: "w-[86px] h-[22px] md:w-[100px] md:h-[25px]",
                                    alt: "신선하이 로고",
                                    src: "/assets/sinsunhi-logo.svg"
                                  }))
                        }), React.createElement("li", {
                          className: "flex-1 flex justify-end sm:hidden"
                        }, React.createElement(Header$User, {
                              kind: /* Seller */0
                            }))), React.createElement("div", {
                      className: "flex flex-row overflow-x-scroll scrollbar-hide"
                    }, React.createElement(Link, {
                          href: "/seller/shipments?from=" + Format(SubDays(new Date(), 7), "yyyy-MM-dd") + "&to=" + Format(new Date(), "yyyy-MM-dd"),
                          passHref: true,
                          children: React.createElement("a", {
                                className: "text-lg font-bold text-green-gl px-2 cursor-pointer min-w-max"
                              }, React.createElement("span", {
                                    className: tab === "shipments" ? tabActive : tabInactive,
                                    id: "button"
                                  }, "출하내역"))
                        }), React.createElement(Link, {
                          href: "/seller/orders?status=CREATE&sort=created",
                          passHref: true,
                          children: React.createElement("a", {
                                className: "text-lg font-bold text-green-gl px-2 cursor-pointer min-w-max"
                              }, React.createElement("span", {
                                    className: tab === "upload" || tab === "downloadCenter" || tab === "shipments" ? tabInactive : tabActive,
                                    id: "button"
                                  }, "주문내역"))
                        }), React.createElement(Link, {
                          href: "/seller/upload",
                          passHref: true,
                          children: React.createElement("a", {
                                className: "text-lg font-bold text-green-gl px-2 cursor-pointer min-w-max"
                              }, React.createElement("span", {
                                    className: tab === "upload" ? tabActive : tabInactive,
                                    id: "button"
                                  }, "송장번호 대량 입력"))
                        }), React.createElement(Link, {
                          href: "/seller/download-center",
                          passHref: true,
                          children: React.createElement("a", {
                                className: "text-lg font-bold text-green-gl px-2 cursor-pointer min-w-max"
                              }, React.createElement("span", {
                                    className: tab === "downloadCenter" ? tabActive : tabInactive,
                                    id: "button"
                                  }, "다운로드 센터"))
                        })), React.createElement("li", {
                      className: "hidden sm:flex"
                    }, React.createElement(Header$User, {
                          kind: /* Seller */0
                        }))));
}

var Seller = {
  make: Header$Seller
};

function Header$Admin(Props) {
  return React.createElement("nav", undefined, React.createElement("ol", {
                  className: "px-4 shadow-inner-b-1 shadow-gray flex justify-between items-center h-16 sm:px-10 md:px-20"
                }, React.createElement("li", undefined, React.createElement("img", {
                          className: "w-[86px] h-[22px] md:w-[100px] md:h-[25px]",
                          alt: "신선하이 로고",
                          src: "/assets/sinsunhi-logo.svg"
                        })), React.createElement("li", undefined, React.createElement(Header$User, {
                          kind: /* Admin */2
                        }))));
}

var Admin = {
  make: Header$Admin
};

export {
  User ,
  Seller ,
  Admin ,
  
}
/* Env Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as Spice from "@greenlabs/ppx-spice/src/rescript/Spice.mjs";
import * as React from "react";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Belt_Result from "rescript/lib/es6/belt_Result.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as IconArrowSelect from "./svgs/IconArrowSelect.mjs";

function t_encode(v) {
  if (v) {
    return "RFQ_LIVESTOCK";
  } else {
    return "TRADEMATCH_AQUATIC";
  }
}

function t_decode(v) {
  var str = Js_json.classify(v);
  if (typeof str === "number") {
    return Spice.error(undefined, "Not a JSONString", v);
  }
  if (str.TAG !== /* JSONString */0) {
    return Spice.error(undefined, "Not a JSONString", v);
  }
  var str$1 = str._0;
  if ("TRADEMATCH_AQUATIC" === str$1) {
    return {
            TAG: /* Ok */0,
            _0: /* TRADEMATCH_AQUATIC */0
          };
  } else if ("RFQ_LIVESTOCK" === str$1) {
    return {
            TAG: /* Ok */0,
            _0: /* RFQ_LIVESTOCK */1
          };
  } else {
    return Spice.error(undefined, "Not matched", v);
  }
}

function makeLabel(v) {
  if (v) {
    return "축산견적";
  } else {
    return "수산견적";
  }
}

function stringify(v) {
  if (v === "RFQ_LIVESTOCK") {
    return "RFQ_LIVESTOCK";
  } else if (v === "TRADEMATCH_AQUATIC") {
    return "TRADEMATCH_AQUATIC";
  } else {
    return "";
  }
}

var QuotationType = {
  t_encode: t_encode,
  t_decode: t_decode,
  makeLabel: makeLabel,
  stringify: stringify
};

function Select_Product_QuotationType_Admin(Props) {
  var status = Props.status;
  var onChange = Props.onChange;
  var forwardRef = Props.forwardRef;
  var disabled = Props.disabled;
  var label = Belt_Option.getWithDefault(Belt_Option.map(status, makeLabel), "견적 유형 선택");
  var value = Belt_Option.getWithDefault(Belt_Option.flatMap(status, (function (v) {
              return Js_json.decodeString(v ? "RFQ_LIVESTOCK" : "TRADEMATCH_AQUATIC");
            })), "");
  var handleChange = function (e) {
    Belt_Result.map(t_decode(e.target.value), onChange);
  };
  var defaultStyle = "flex px-3 py-2 border items-center border-border-default-L1 rounded-lg h-9 text-enabled-L1 focus:outline";
  var tmp = {
    ref: forwardRef,
    className: "block w-full h-full absolute top-0 opacity-0",
    value: value,
    onChange: handleChange
  };
  if (disabled !== undefined) {
    tmp.disabled = Caml_option.valFromOption(disabled);
  }
  return React.createElement("span", undefined, React.createElement("label", {
                  className: "block relative"
                }, React.createElement("span", {
                      className: Belt_Option.mapWithDefault(disabled, Cx.cx([
                                defaultStyle,
                                "bg-white"
                              ]), (function (d) {
                              if (d) {
                                return Cx.cx([
                                            defaultStyle,
                                            "bg-disabled-L3 text-gray-400"
                                          ]);
                              } else {
                                return Cx.cx([
                                            defaultStyle,
                                            "bg-white"
                                          ]);
                              }
                            }))
                    }, label), React.createElement("span", {
                      className: "absolute top-1.5 right-2"
                    }, React.createElement(IconArrowSelect.make, {
                          height: "24",
                          width: "24",
                          fill: "#121212"
                        })), React.createElement("select", tmp, React.createElement("option", {
                          hidden: value !== "",
                          disabled: true,
                          value: ""
                        }, "견적 유형 선택"), Belt_Array.map([
                          /* TRADEMATCH_AQUATIC */0,
                          /* RFQ_LIVESTOCK */1
                        ], (function (v) {
                            var value = Belt_Option.getWithDefault(Js_json.decodeString(v ? "RFQ_LIVESTOCK" : "TRADEMATCH_AQUATIC"), "");
                            return React.createElement("option", {
                                        key: value,
                                        value: value
                                      }, v ? "축산견적" : "수산견적");
                          })))));
}

var make = Select_Product_QuotationType_Admin;

export {
  QuotationType ,
  make ,
}
/* react Not a pure module */

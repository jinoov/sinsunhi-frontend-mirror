// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as IconHome from "./svgs/IconHome.mjs";
import * as Redirect from "./Redirect.mjs";
import * as IconArrow from "./svgs/IconArrow.mjs";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconHamburger from "./svgs/IconHamburger.mjs";
import * as IconArrowSelect from "./svgs/IconArrowSelect.mjs";
import * as ChannelTalkHelper from "../utils/ChannelTalkHelper.mjs";
import * as GnbBannerList_Buyer from "./GnbBannerList_Buyer.mjs";
import * as ShopSearchInput_Buyer from "./ShopSearchInput_Buyer.mjs";
import * as ShopCategorySelect_Buyer from "./ShopCategorySelect_Buyer.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";
import * as ReactDropdownMenu from "@radix-ui/react-dropdown-menu";

function Header_Buyer$Mobile$LoggedInUserMenu(Props) {
  var router = Router.useRouter();
  var match = React.useState(function () {
        return false;
      });
  var setOpen = match[1];
  var makeOnClick = function (action) {
    return function (param) {
      return ReactEvents.interceptingHandler((function (param) {
                    setOpen(function (param) {
                          return false;
                        });
                    return Curry._1(action, undefined);
                  }), param);
    };
  };
  var logOutAction = function (param) {
    CustomHooks.Auth.logOut(undefined);
    ChannelTalkHelper.logout(undefined);
    return Redirect.setHref("/buyer");
  };
  var itemStyle = "cursor-pointer w-full h-full py-3 px-4 whitespace-nowrap flex items-center justify-center";
  return React.createElement(ReactDropdownMenu.Root, {
              children: null,
              open: match[0],
              onOpenChange: (function (to_) {
                  return setOpen(function (param) {
                              return to_;
                            });
                })
            }, React.createElement(ReactDropdownMenu.Trigger, {
                  children: React.createElement("img", {
                        className: "w-7 h-7 object-cover",
                        alt: "user-icon",
                        src: "/icons/user-gray-circle-3x.png"
                      }),
                  className: "focus:outline-none"
                }), React.createElement(ReactDropdownMenu.Content, {
                  children: null,
                  align: "start",
                  className: "dropdown-content w-[145px] bg-white rounded-lg drop-shadow-lg divide-y text-base text-gray-800",
                  sideOffset: 12
                }, React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("https://drive.google.com/drive/u/0/folders/1DbaGUxpkYnJMrl4RPKRzpCqTfTUH7bYN");
                                  
                                })
                          }, React.createElement("span", undefined, "판매자료 다운로드")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("/buyer/upload");
                                  
                                })
                          }, React.createElement("span", undefined, "주문서 업로드")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("/buyer/orders");
                                  
                                })
                          }, React.createElement("span", undefined, "주문 내역")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("/buyer/transactions");
                                  
                                })
                          }, React.createElement("span", undefined, "결제 내역")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("/buyer/download-center");
                                  
                                })
                          }, React.createElement("span", undefined, "다운로드 센터")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("https://shinsunmarket.co.kr/532");
                                  
                                })
                          }, React.createElement("span", undefined, "고객지원")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(function (param) {
                                  router.push("/buyer/products/advanced-search");
                                  
                                })
                          }, React.createElement("span", undefined, "단품 확인")),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Item, {
                      children: React.createElement("div", {
                            className: itemStyle,
                            onClick: makeOnClick(logOutAction)
                          }, React.createElement("span", undefined, "로그아웃")),
                      className: "focus:outline-none"
                    })));
}

var LoggedInUserMenu = {
  make: Header_Buyer$Mobile$LoggedInUserMenu
};

function Header_Buyer$Mobile$Normal(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              onClick: (function (param) {
                                  router.back();
                                  
                                })
                            }, React.createElement(IconArrow.make, {
                                  height: "24",
                                  width: "24",
                                  fill: "#262626",
                                  className: "rotate-180"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement("button", {
                              onClick: (function (param) {
                                  router.push("/buyer");
                                  
                                })
                            }, React.createElement(IconHome.make, {
                                  width: "24",
                                  height: "24",
                                  fill: "#262626"
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Normal = {
  make: Header_Buyer$Mobile$Normal
};

function Header_Buyer$Mobile$NoBack(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("div", {
                              className: "w-[24px]"
                            }), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement("button", {
                              onClick: (function (param) {
                                  router.push("/buyer");
                                  
                                })
                            }, React.createElement(IconHome.make, {
                                  width: "24",
                                  height: "24",
                                  fill: "#262626"
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var NoBack = {
  make: Header_Buyer$Mobile$NoBack
};

function Header_Buyer$Mobile$GnbHome(Props) {
  var router = Router.useRouter();
  var match = React.useState(function () {
        return false;
      });
  var setCsr = match[1];
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  React.useEffect((function () {
          setCsr(function (param) {
                return true;
              });
          
        }), []);
  var redirectUrl = new URLSearchParams(Js_dict.fromArray([[
                "redirect",
                router.asPath
              ]])).toString();
  return React.createElement("div", {
              className: "w-full bg-white"
            }, React.createElement("header", {
                  className: "w-full max-w-3xl mx-auto h-14 flex items-center px-3 bg-white"
                }, React.createElement("div", {
                      className: "flex flex-1"
                    }, match[0] ? React.createElement(RescriptReactErrorBoundary.make, {
                            children: React.createElement(React.Suspense, {
                                  children: React.createElement(ShopCategorySelect_Buyer.Mobile.make, {}),
                                  fallback: null
                                }),
                            fallback: (function (param) {
                                return null;
                              })
                          }) : React.createElement(IconHamburger.make, {
                            width: "28",
                            height: "28",
                            fill: "#12B564"
                          })), React.createElement("img", {
                      className: "w-[88px] h-7 object-contain",
                      alt: "sinsunhi-logo-header-mobile",
                      src: "/assets/sinsunhi-logo.svg"
                    }), React.createElement("div", {
                      className: "flex flex-1 justify-end"
                    }, typeof user === "number" ? (
                        user !== 0 ? React.createElement(Link, {
                                href: "/buyer/signin?" + redirectUrl,
                                children: React.createElement("a", {
                                      className: "px-3 py-[6px] bg-green-50 flex items-center justify-center rounded-full text-[15px] text-green-500"
                                    }, "로그인")
                              }) : React.createElement("div", {
                                className: "w-20 h-6 bg-gray-150 animate-pulse rounded-lg"
                              })
                      ) : React.createElement(Header_Buyer$Mobile$LoggedInUserMenu, {}))));
}

var GnbHome = {
  make: Header_Buyer$Mobile$GnbHome
};

function Header_Buyer$Mobile$Search(Props) {
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("div", {
                      className: "w-full max-w-3xl mx-auto h-14 py-2 px-3 bg-white flex items-center"
                    }, React.createElement("button", {
                          className: "mr-1",
                          onClick: (function (param) {
                              router.back();
                              
                            })
                        }, React.createElement(IconArrow.make, {
                              height: "24",
                              width: "24",
                              fill: "#262626",
                              className: "rotate-180"
                            })), React.createElement(ShopSearchInput_Buyer.MO.make, {}))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Search = {
  make: Header_Buyer$Mobile$Search
};

function Header_Buyer$Mobile(Props) {
  var router = Router.useRouter();
  var secondPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 1);
  var thirdPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 2);
  if (secondPathname === undefined) {
    return React.createElement(Header_Buyer$Mobile$GnbHome, {});
  }
  switch (secondPathname) {
    case "download-center" :
        return React.createElement(Header_Buyer$Mobile$Normal, {
                    title: "다운로드 센터"
                  });
    case "orders" :
        return React.createElement(Header_Buyer$Mobile$Normal, {
                    title: "주문 내역"
                  });
    case "products" :
        if (thirdPathname !== undefined) {
          switch (thirdPathname) {
            case "advanced-search" :
                return React.createElement(Header_Buyer$Mobile$Normal, {
                            title: "상품 검색"
                          });
            case "all" :
                return React.createElement(Header_Buyer$Mobile$Normal, {
                            title: "전체 상품"
                          });
            default:
              return React.createElement(Header_Buyer$Mobile$Normal, {
                          title: "상품 상세"
                        });
          }
        } else {
          var categoryName = Belt_Option.mapWithDefault(Js_dict.get(router.query, "category-name"), "", (function (prim) {
                  return decodeURIComponent(prim);
                }));
          return React.createElement(Header_Buyer$Mobile$Normal, {
                      title: categoryName
                    });
        }
    case "search" :
        return React.createElement(Header_Buyer$Mobile$Search, {});
    case "signin" :
        if (thirdPathname !== undefined) {
          if (thirdPathname === "find-id-password") {
            return React.createElement(Header_Buyer$Mobile$Normal, {
                        title: ""
                      });
          } else {
            return React.createElement(Header_Buyer$Mobile$Normal, {
                        title: "로그인"
                      });
          }
        } else {
          return React.createElement(Header_Buyer$Mobile$Normal, {
                      title: "로그인"
                    });
        }
    case "signup" :
        return React.createElement(Header_Buyer$Mobile$Normal, {
                    title: "회원가입"
                  });
    case "transactions" :
        return React.createElement(Header_Buyer$Mobile$Normal, {
                    title: "결제 내역"
                  });
    case "upload" :
        return React.createElement(Header_Buyer$Mobile$Normal, {
                    title: "주문서 업로드"
                  });
    case "web-order" :
        if (thirdPathname !== undefined) {
          if (thirdPathname === "complete") {
            return React.createElement(Header_Buyer$Mobile$NoBack, {
                        title: "주문 완료"
                      });
          } else {
            return React.createElement(Header_Buyer$Mobile$Normal, {
                        title: "주문·결제"
                      });
          }
        } else {
          return React.createElement(Header_Buyer$Mobile$Normal, {
                      title: "주문·결제"
                    });
        }
    default:
      return React.createElement(Header_Buyer$Mobile$Normal, {
                  title: ""
                });
  }
}

var Mobile = {
  LoggedInUserMenu: LoggedInUserMenu,
  Normal: Normal,
  NoBack: NoBack,
  GnbHome: GnbHome,
  Search: Search,
  make: Header_Buyer$Mobile
};

function Header_Buyer$PC$LoggedInUserMenu(Props) {
  var user = Props.user;
  var router = Router.useRouter();
  var logOut = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  CustomHooks.Auth.logOut(undefined);
                  ChannelTalkHelper.logout(undefined);
                  return Redirect.setHref("/buyer");
                }), param);
  };
  var itemStyle = "cursor-pointer w-full h-full py-3 px-8 whitespace-nowrap flex items-center justify-center";
  return React.createElement("div", {
              className: "relative flex items-center h-16",
              id: "gnb-user"
            }, React.createElement(ReactDropdownMenu.Root, {
                  children: null
                }, React.createElement(ReactDropdownMenu.Trigger, {
                      children: React.createElement("div", {
                            className: "flex items-center"
                          }, React.createElement("span", {
                                className: "text-base text-gray-800"
                              }, Belt_Option.getWithDefault(user.email, "")), React.createElement("span", {
                                className: "relative ml-1"
                              }, React.createElement(IconArrowSelect.make, {
                                    height: "22",
                                    width: "22",
                                    fill: "#262626"
                                  }))),
                      className: "focus:outline-none"
                    }), React.createElement(ReactDropdownMenu.Content, {
                      children: null,
                      align: "end",
                      className: "dropdown-content w-[140px] bg-white rounded-lg shadow-md divide-y text-gray-800"
                    }, React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("div", {
                                className: itemStyle,
                                onClick: (function (param) {
                                    return ReactEvents.interceptingHandler((function (param) {
                                                  router.push("/buyer/orders");
                                                  
                                                }), param);
                                  })
                              }, React.createElement("span", undefined, "주문 내역")),
                          className: "focus:outline-none"
                        }), React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("div", {
                                className: itemStyle,
                                onClick: (function (param) {
                                    return ReactEvents.interceptingHandler((function (param) {
                                                  router.push("/buyer/transactions");
                                                  
                                                }), param);
                                  })
                              }, React.createElement("span", undefined, "결제 내역")),
                          className: "focus:outline-none"
                        }), React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("div", {
                                className: itemStyle,
                                onClick: (function (param) {
                                    return ReactEvents.interceptingHandler((function (param) {
                                                  router.push("/buyer/download-center");
                                                  
                                                }), param);
                                  })
                              }, React.createElement("span", undefined, "다운로드 센터")),
                          className: "focus:outline-none"
                        }), React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("div", {
                                className: itemStyle,
                                onClick: (function (param) {
                                    return ReactEvents.interceptingHandler((function (param) {
                                                  router.push("/buyer/products/advanced-search");
                                                  
                                                }), param);
                                  })
                              }, React.createElement("span", undefined, "단품 확인")),
                          className: "focus:outline-none"
                        }), React.createElement(ReactDropdownMenu.Item, {
                          children: React.createElement("div", {
                                className: itemStyle,
                                onClick: logOut
                              }, React.createElement("span", undefined, "로그아웃")),
                          className: "focus:outline-none"
                        }))));
}

var LoggedInUserMenu$1 = {
  make: Header_Buyer$PC$LoggedInUserMenu
};

function Header_Buyer$PC$NotLoggedInUserMenu(Props) {
  var router = Router.useRouter();
  var redirectUrl = new URLSearchParams(Js_dict.fromArray([[
                "redirect",
                router.asPath
              ]])).toString();
  var buttonStyle = "ml-2 py-3 px-4 bg-green-50 flex items-center justify-center rounded-full text-sm text-green-500 cursor-pointer";
  return React.createElement("div", {
              className: "flex items-center justify-center"
            }, React.createElement(Link, {
                  href: "/buyer/signin?" + redirectUrl,
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "로그인")
                }), React.createElement(Link, {
                  href: "/buyer/signup",
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "회원가입")
                }));
}

var NotLoggedInUserMenu = {
  make: Header_Buyer$PC$NotLoggedInUserMenu
};

function Header_Buyer$PC(Props) {
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match = typeof user === "number" ? [
      "/buyer/signin",
      "_self"
    ] : [
      "https://drive.google.com/drive/u/0/folders/1DbaGUxpkYnJMrl4RPKRzpCqTfTUH7bYN",
      "_blank"
    ];
  return React.createElement(React.Fragment, undefined, React.createElement("header", {
                  className: "w-full fixed top-0 bg-white z-10"
                }, React.createElement("div", {
                      className: "w-full flex justify-between items-center py-4 px-10"
                    }, React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement(Link, {
                              href: "/buyer",
                              children: React.createElement("a", undefined, React.createElement("img", {
                                        className: "w-[120px] h-10 object-contain",
                                        alt: "sinsunhi-logo-header-pc",
                                        src: "/assets/sinsunhi-logo.svg"
                                      }))
                            }), React.createElement("div", {
                              className: "ml-12"
                            }, React.createElement(ShopSearchInput_Buyer.make, {}))), React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement("span", {
                              className: "flex"
                            }, typeof user === "number" ? (
                                user !== 0 ? React.createElement(Header_Buyer$PC$NotLoggedInUserMenu, {}) : React.createElement("div", {
                                        className: "w-40 h-6 bg-gray-150 animate-pulse rounded-lg"
                                      })
                              ) : React.createElement(Header_Buyer$PC$LoggedInUserMenu, {
                                    user: user._0
                                  })))), React.createElement("nav", {
                      className: "flex items-center justify-between pr-10 pl-2 border-y"
                    }, React.createElement("div", {
                          className: "flex items-center divide-x"
                        }, React.createElement(RescriptReactErrorBoundary.make, {
                              children: React.createElement(React.Suspense, {
                                    children: React.createElement(ShopCategorySelect_Buyer.PC.make, {}),
                                    fallback: null
                                  }),
                              fallback: (function (param) {
                                  return null;
                                })
                            }), React.createElement(RescriptReactErrorBoundary.make, {
                              children: React.createElement(React.Suspense, {
                                    children: React.createElement(GnbBannerList_Buyer.make, {}),
                                    fallback: null
                                  }),
                              fallback: (function (param) {
                                  return null;
                                })
                            })), React.createElement("div", {
                          className: "flex items-center text-base text-gray-800"
                        }, React.createElement(Link, {
                              href: match[0],
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: match[1]
                                  }, "판매자료 다운로드")
                            }), React.createElement(Link, {
                              href: "/buyer/upload",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer"
                                  }, "주문서 업로드")
                            }), React.createElement(Link, {
                              href: "https://shinsunmarket.co.kr/532",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: "_blank"
                                  }, "고객지원")
                            })))), React.createElement("div", {
                  className: "w-full h-[154px]"
                }));
}

var PC = {
  LoggedInUserMenu: LoggedInUserMenu$1,
  NotLoggedInUserMenu: NotLoggedInUserMenu,
  make: Header_Buyer$PC
};

export {
  Mobile ,
  PC ,
  
}
/* react Not a pure module */

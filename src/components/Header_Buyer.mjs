// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as IconArrow from "./svgs/IconArrow.mjs";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as CartLinkIcon from "./common/CartLinkIcon.mjs";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconHamburger from "./svgs/IconHamburger.mjs";
import * as AppLink_Header from "./AppLink_Header.mjs";
import * as PDP_Header_Buyer from "../pages/buyer/pdp/PDP_Header_Buyer.mjs";
import * as PLP_Header_Buyer from "../pages/buyer/plp/PLP_Header_Buyer.mjs";
import * as GnbBannerList_Buyer from "./GnbBannerList_Buyer.mjs";
import * as ShopSearchInput_Buyer from "./ShopSearchInput_Buyer.mjs";
import * as ShopCategorySelect_Buyer from "./ShopCategorySelect_Buyer.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";
import HomeSvg from "../../public/assets/home.svg";

var homeIcon = HomeSvg;

function Header_Buyer$Mobile$LoggedInUserMenu(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement(CartLinkIcon.make, {}), React.createElement(Link, {
                  href: "/buyer/me",
                  children: React.createElement("a", undefined, React.createElement("img", {
                            className: "w-7 h-7 object-cover ml-2",
                            alt: "user-icon",
                            src: "/icons/user-gray-circle-3x.png"
                          }))
                }));
}

var LoggedInUserMenu = {
  make: Header_Buyer$Mobile$LoggedInUserMenu
};

function Header_Buyer$Mobile$Normal(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              type: "button",
                              onClick: (function (param) {
                                  router.back();
                                })
                            }, React.createElement("img", {
                                  className: "w-6 h-6 rotate-180",
                                  src: "/assets/arrow-right.svg"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement("button", {
                              className: "w-6 h-[30px]",
                              type: "button",
                              onClick: (function (param) {
                                  router.push("/buyer");
                                })
                            }, React.createElement("img", {
                                  src: homeIcon
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Normal = {
  make: Header_Buyer$Mobile$Normal
};

function Header_Buyer$Mobile$BackAndCart(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              type: "button",
                              onClick: (function (param) {
                                  router.back();
                                })
                            }, React.createElement("img", {
                                  className: "w-6 h-6 rotate-180",
                                  src: "/assets/arrow-right.svg"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement(CartLinkIcon.make, {})))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var BackAndCart = {
  make: Header_Buyer$Mobile$BackAndCart
};

function Header_Buyer$Mobile$NoBack(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("div", {
                              className: "w-[24px]"
                            }), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement("button", {
                              type: "button",
                              onClick: (function (param) {
                                  router.push("/buyer");
                                })
                            }, React.createElement("img", {
                                  src: homeIcon
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var NoBack = {
  make: Header_Buyer$Mobile$NoBack
};

function Header_Buyer$Mobile$NoHome(Props) {
  var title = Props.title;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              type: "button",
                              onClick: (function (param) {
                                  router.back();
                                })
                            }, React.createElement(IconArrow.make, {
                                  height: "24",
                                  width: "24",
                                  fill: "#262626",
                                  className: "rotate-180"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, title)), React.createElement("div", {
                              className: "w-6"
                            })))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var NoHome = {
  make: Header_Buyer$Mobile$NoHome
};

function Header_Buyer$Mobile$GnbHome(Props) {
  var gnbBanners = Props.gnbBanners;
  var displayCategories = Props.displayCategories;
  var router = Router.useRouter();
  var match = React.useState(function () {
        return false;
      });
  var setCsr = match[1];
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  React.useEffect((function () {
          setCsr(function (param) {
                return true;
              });
        }), []);
  var redirect = Js_dict.get(router.query, "redirect");
  var redirectUrl;
  if (redirect !== undefined) {
    redirectUrl = new URLSearchParams(Js_dict.fromArray([[
                  "redirect",
                  redirect
                ]])).toString();
  } else {
    var isSignInOrUp = router.asPath.includes("signin") || router.asPath.includes("signup");
    redirectUrl = isSignInOrUp ? "" : new URLSearchParams(Js_dict.fromArray([[
                    "redirect",
                    router.asPath
                  ]])).toString();
  }
  return React.createElement("div", {
              className: "w-full bg-white"
            }, React.createElement("header", {
                  className: "w-full max-w-3xl mx-auto h-14 flex items-center px-3 bg-white"
                }, React.createElement("div", {
                      className: "flex flex-1"
                    }, match[0] ? React.createElement(RescriptReactErrorBoundary.make, {
                            children: React.createElement(React.Suspense, {
                                  children: gnbBanners !== undefined && displayCategories !== undefined ? React.createElement(ShopCategorySelect_Buyer.Mobile.make, {
                                          gnbBanners: gnbBanners,
                                          displayCategories: displayCategories
                                        }) : null,
                                  fallback: null
                                }),
                            fallback: (function (param) {
                                return null;
                              })
                          }) : React.createElement(IconHamburger.make, {
                            width: "24",
                            height: "24",
                            fill: "#12B564"
                          })), React.createElement("img", {
                      className: "w-[88px] h-7 object-contain",
                      alt: "sinsunhi-logo-header-mobile",
                      src: "/assets/sinsunhi-logo.svg"
                    }), React.createElement("div", {
                      className: "flex flex-1 justify-end"
                    }, typeof user === "number" ? (
                        user !== 0 ? React.createElement("div", {
                                className: "flex items-center gap-2"
                              }, React.createElement(CartLinkIcon.make, {}), React.createElement(Link, {
                                    href: "/buyer/signin?" + redirectUrl + "",
                                    children: React.createElement("a", {
                                          className: "px-3 py-[6px] bg-green-50 flex items-center justify-center rounded-full text-[15px] text-green-500"
                                        }, "로그인")
                                  })) : React.createElement("div", {
                                className: "w-20 h-6 bg-gray-150 animate-pulse rounded-lg"
                              })
                      ) : React.createElement(Header_Buyer$Mobile$LoggedInUserMenu, {}))));
}

var GnbHome = {
  make: Header_Buyer$Mobile$GnbHome
};

function Header_Buyer$Mobile$Search(Props) {
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("div", {
                      className: "w-full max-w-3xl mx-auto h-14 py-2 px-3 bg-white flex items-center gap-2"
                    }, React.createElement("button", {
                          type: "button",
                          onClick: (function (param) {
                              router.back();
                            })
                        }, React.createElement("img", {
                              className: "w-6 h-6 rotate-180",
                              src: "/assets/arrow-right.svg"
                            })), React.createElement(ShopSearchInput_Buyer.MO.make, {}), React.createElement(CartLinkIcon.make, {}))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Search = {
  make: Header_Buyer$Mobile$Search
};

function Header_Buyer$Mobile(Props) {
  var router = Router.useRouter();
  var secondPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 1);
  var thirdPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 2);
  var tmp;
  if (secondPathname !== undefined) {
    switch (secondPathname) {
      case "cart" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "장바구니"
              });
          break;
      case "delivery" :
          tmp = thirdPathname !== undefined ? React.createElement(Header_Buyer$Mobile$BackAndCart, {
                  title: "신선배송"
                }) : React.createElement(Header_Buyer$Mobile$BackAndCart, {
                  title: "신선배송"
                });
          break;
      case "download-center" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "다운로드 센터"
              });
          break;
      case "matching" :
          tmp = thirdPathname !== undefined ? React.createElement(Header_Buyer$Mobile$Normal, {
                  title: "신선매칭"
                }) : React.createElement(Header_Buyer$Mobile$NoHome, {
                  title: "신선매칭"
                });
          break;
      case "me" :
          if (thirdPathname !== undefined) {
            switch (thirdPathname) {
              case "account" :
                  tmp = React.createElement(Header_Buyer$Mobile$NoHome, {
                        title: "계정정보"
                      });
                  break;
              case "profile" :
                  tmp = React.createElement(Header_Buyer$Mobile$NoHome, {
                        title: "프로필정보"
                      });
                  break;
              default:
                tmp = React.createElement(Header_Buyer$Mobile$NoHome, {
                      title: "마이페이지"
                    });
            }
          } else {
            tmp = React.createElement(Header_Buyer$Mobile$NoHome, {
                  title: "마이페이지"
                });
          }
          break;
      case "orders" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "주문 내역"
              });
          break;
      case "products" :
          if (thirdPathname !== undefined) {
            switch (thirdPathname) {
              case "advanced-search" :
                  tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                        title: "상품 검색"
                      });
                  break;
              case "all" :
                  tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                        title: "전체 상품"
                      });
                  break;
              default:
                tmp = React.createElement(PDP_Header_Buyer.make, {});
            }
          } else {
            tmp = React.createElement(PLP_Header_Buyer.make, {});
          }
          break;
      case "search" :
          tmp = React.createElement(Header_Buyer$Mobile$Search, {});
          break;
      case "signin" :
          tmp = thirdPathname !== undefined ? (
              thirdPathname === "find-id-password" ? React.createElement(Header_Buyer$Mobile$Normal, {
                      title: ""
                    }) : React.createElement(Header_Buyer$Mobile$Normal, {
                      title: "로그인"
                    })
            ) : React.createElement(Header_Buyer$Mobile$Normal, {
                  title: "로그인"
                });
          break;
      case "signup" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "회원가입"
              });
          break;
      case "transactions" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "결제 내역"
              });
          break;
      case "upload" :
          tmp = React.createElement(Header_Buyer$Mobile$Normal, {
                title: "주문서 업로드"
              });
          break;
      case "web-order" :
          tmp = thirdPathname !== undefined ? (
              thirdPathname === "complete" ? React.createElement(Header_Buyer$Mobile$NoBack, {
                      title: "주문 완료"
                    }) : React.createElement(Header_Buyer$Mobile$Normal, {
                      title: "주문·결제"
                    })
            ) : React.createElement(Header_Buyer$Mobile$Normal, {
                  title: "주문·결제"
                });
          break;
      default:
        tmp = React.createElement(Header_Buyer$Mobile$Normal, {
              title: ""
            });
    }
  } else {
    tmp = React.createElement(Header_Buyer$Mobile$GnbHome, {});
  }
  return React.createElement(React.Fragment, undefined, React.createElement(AppLink_Header.make, {}), tmp);
}

var Mobile = {
  LoggedInUserMenu: LoggedInUserMenu,
  Normal: Normal,
  BackAndCart: BackAndCart,
  NoBack: NoBack,
  NoHome: NoHome,
  GnbHome: GnbHome,
  Search: Search,
  make: Header_Buyer$Mobile
};

function Header_Buyer$PC_Old$LoggedInUserMenu(Props) {
  var user = Props.user;
  return React.createElement("div", {
              className: "relative flex items-center h-16",
              id: "gnb-user"
            }, React.createElement(Link, {
                  href: "/buyer/me",
                  children: React.createElement("a", undefined, React.createElement("span", {
                            className: "text-base text-gray-800"
                          }, Belt_Option.getWithDefault(user.email, "")))
                }));
}

var LoggedInUserMenu$1 = {
  make: Header_Buyer$PC_Old$LoggedInUserMenu
};

function Header_Buyer$PC_Old$NotLoggedInUserMenu(Props) {
  var router = Router.useRouter();
  var redirect = Js_dict.get(router.query, "redirect");
  var redirectUrl;
  if (redirect !== undefined) {
    redirectUrl = new URLSearchParams(Js_dict.fromArray([[
                  "redirect",
                  redirect
                ]])).toString();
  } else {
    var isSignInOrUp = router.asPath.includes("signin") || router.asPath.includes("signup");
    redirectUrl = isSignInOrUp ? "" : new URLSearchParams(Js_dict.fromArray([[
                    "redirect",
                    router.asPath
                  ]])).toString();
  }
  var buttonStyle = "ml-2 py-2 px-4 bg-green-50 flex items-center justify-center rounded-full text-sm text-green-500 cursor-pointer";
  return React.createElement("div", {
              className: "flex items-center justify-center h-16"
            }, React.createElement(Link, {
                  href: "/buyer/signin?" + redirectUrl + "",
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "로그인")
                }), React.createElement(Link, {
                  href: "/buyer/signup?" + redirectUrl + "",
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "회원가입")
                }));
}

var NotLoggedInUserMenu = {
  make: Header_Buyer$PC_Old$NotLoggedInUserMenu
};

function Header_Buyer$PC_Old$GnbBanners(Props) {
  var match = GnbBannerList_Buyer.Query.use(undefined, undefined, undefined, undefined, undefined);
  return React.createElement(GnbBannerList_Buyer.make, {
              gnbBanners: match.gnbBanners
            });
}

var GnbBanners = {
  make: Header_Buyer$PC_Old$GnbBanners
};

function Header_Buyer$PC_Old$Categories(Props) {
  var match = ShopCategorySelect_Buyer.Query.use({
        onlyDisplayable: true,
        parentId: undefined,
        types: ["NORMAL"]
      }, undefined, undefined, undefined, undefined);
  return React.createElement(ShopCategorySelect_Buyer.PC.make, {
              displayCategories: match.displayCategories
            });
}

var Categories = {
  make: Header_Buyer$PC_Old$Categories
};

function Header_Buyer$PC_Old(Props) {
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var isCsr = CustomHooks.useCsr(undefined);
  var match = typeof user === "number" ? [
      "/buyer/signin",
      "_self"
    ] : [
      "https://drive.google.com/drive/u/0/folders/1DbaGUxpkYnJMrl4RPKRzpCqTfTUH7bYN",
      "_blank"
    ];
  return React.createElement(React.Fragment, undefined, React.createElement(AppLink_Header.make, {}), React.createElement("header", {
                  className: "w-full fixed top-0 bg-white z-10"
                }, React.createElement("div", {
                      className: "w-full flex justify-between items-center py-4 px-10"
                    }, React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement(Link, {
                              href: "/",
                              children: React.createElement("a", undefined, React.createElement("img", {
                                        className: "w-[120px] h-10 object-contain",
                                        alt: "sinsunhi-logo-header-pc",
                                        src: "/assets/sinsunhi-logo.svg"
                                      }))
                            }), React.createElement("div", {
                              className: "ml-12"
                            }, React.createElement(ShopSearchInput_Buyer.make, {}))), React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement("span", undefined, typeof user === "number" ? (
                                user !== 0 ? React.createElement("div", {
                                        className: "flex items-center gap-2"
                                      }, React.createElement(CartLinkIcon.make, {}), React.createElement(Header_Buyer$PC_Old$NotLoggedInUserMenu, {})) : React.createElement("div", {
                                        className: "h-16 flex items-center"
                                      }, React.createElement("div", {
                                            className: "w-40 h-6 bg-gray-150 animate-pulse rounded-lg"
                                          }))
                              ) : React.createElement("div", {
                                    className: "flex items-center gap-5"
                                  }, React.createElement(CartLinkIcon.make, {}), React.createElement(Header_Buyer$PC_Old$LoggedInUserMenu, {
                                        user: user._0
                                      }))))), React.createElement("nav", {
                      className: "flex items-center justify-between pr-10 pl-2 border-y"
                    }, React.createElement("div", {
                          className: "h-14 flex items-center divide-x"
                        }, React.createElement(RescriptReactErrorBoundary.make, {
                              children: React.createElement(React.Suspense, {
                                    children: isCsr ? React.createElement(Header_Buyer$PC_Old$Categories, {}) : null,
                                    fallback: null
                                  }),
                              fallback: (function (param) {
                                  return null;
                                })
                            }), React.createElement(RescriptReactErrorBoundary.make, {
                              children: React.createElement(React.Suspense, {
                                    children: isCsr ? React.createElement(Header_Buyer$PC_Old$GnbBanners, {}) : null,
                                    fallback: null
                                  }),
                              fallback: (function (param) {
                                  return null;
                                })
                            })), React.createElement("div", {
                          className: "flex items-center text-base text-gray-800"
                        }, React.createElement(Link, {
                              href: match[0],
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: match[1]
                                  }, "판매자료 다운로드")
                            }), React.createElement(Link, {
                              href: "/buyer/upload",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer"
                                  }, "주문서 업로드")
                            }), React.createElement(Link, {
                              href: "https://shinsunmarket.co.kr/532",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: "_blank"
                                  }, "고객지원")
                            })))), React.createElement("div", {
                  className: "w-full h-[154px]"
                }));
}

var PC_Old = {
  LoggedInUserMenu: LoggedInUserMenu$1,
  NotLoggedInUserMenu: NotLoggedInUserMenu,
  GnbBanners: GnbBanners,
  Categories: Categories,
  make: Header_Buyer$PC_Old
};

function Header_Buyer$PC$LoggedInUserMenu(Props) {
  var user = Props.user;
  return React.createElement("div", {
              className: "relative flex items-center h-16",
              id: "gnb-user"
            }, React.createElement(Link, {
                  href: "/buyer/me",
                  children: React.createElement("a", undefined, React.createElement("span", {
                            className: "text-base text-gray-800"
                          }, Belt_Option.getWithDefault(user.email, "")))
                }));
}

var LoggedInUserMenu$2 = {
  make: Header_Buyer$PC$LoggedInUserMenu
};

function Header_Buyer$PC$NotLoggedInUserMenu(Props) {
  var router = Router.useRouter();
  var redirect = Js_dict.get(router.query, "redirect");
  var redirectUrl;
  if (redirect !== undefined) {
    redirectUrl = new URLSearchParams(Js_dict.fromArray([[
                  "redirect",
                  redirect
                ]])).toString();
  } else {
    var isSignInOrUp = router.asPath.includes("signin") || router.asPath.includes("signup");
    redirectUrl = isSignInOrUp ? "" : new URLSearchParams(Js_dict.fromArray([[
                    "redirect",
                    router.asPath
                  ]])).toString();
  }
  var buttonStyle = "ml-2 py-2 px-4 bg-green-50 flex items-center justify-center rounded-full text-sm text-green-500 cursor-pointer";
  return React.createElement("div", {
              className: "flex items-center justify-center h-16"
            }, React.createElement(Link, {
                  href: "/buyer/signin?" + redirectUrl + "",
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "로그인")
                }), React.createElement(Link, {
                  href: "/buyer/signup?" + redirectUrl + "",
                  children: React.createElement("a", {
                        className: buttonStyle
                      }, "회원가입")
                }));
}

var NotLoggedInUserMenu$1 = {
  make: Header_Buyer$PC$NotLoggedInUserMenu
};

function Header_Buyer$PC(Props) {
  var gnbBanners = Props.gnbBanners;
  var displayCategories = Props.displayCategories;
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match = typeof user === "number" ? [
      "/buyer/signin",
      "_self"
    ] : [
      "https://drive.google.com/drive/u/0/folders/1DbaGUxpkYnJMrl4RPKRzpCqTfTUH7bYN",
      "_blank"
    ];
  return React.createElement(React.Fragment, undefined, React.createElement(AppLink_Header.make, {}), React.createElement("header", {
                  className: "w-full sticky top-0 bg-white z-10"
                }, React.createElement("div", {
                      className: "w-full flex justify-between items-center py-4 px-10"
                    }, React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement(Link, {
                              href: "/",
                              children: React.createElement("a", undefined, React.createElement("img", {
                                        className: "w-[120px] h-10 object-contain",
                                        alt: "sinsunhi-logo-header-pc",
                                        src: "/assets/sinsunhi-logo.svg"
                                      }))
                            }), React.createElement("div", {
                              className: "ml-12"
                            }, React.createElement(ShopSearchInput_Buyer.make, {}))), React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement("span", undefined, typeof user === "number" ? (
                                user !== 0 ? React.createElement("div", {
                                        className: "flex items-center gap-2"
                                      }, React.createElement(CartLinkIcon.make, {}), React.createElement(Header_Buyer$PC$NotLoggedInUserMenu, {})) : React.createElement("div", {
                                        className: "h-16 flex items-center"
                                      }, React.createElement("div", {
                                            className: "w-40 h-6 bg-gray-150 animate-pulse rounded-lg"
                                          }))
                              ) : React.createElement("div", {
                                    className: "flex items-center gap-5"
                                  }, React.createElement(CartLinkIcon.make, {}), React.createElement(Header_Buyer$PC$LoggedInUserMenu, {
                                        user: user._0
                                      }))))), React.createElement("nav", {
                      className: "flex items-center justify-between pr-10 pl-2 border-y"
                    }, React.createElement("div", {
                          className: "h-14 flex items-center divide-x"
                        }, React.createElement(ShopCategorySelect_Buyer.PC.make, {
                              displayCategories: displayCategories
                            }), React.createElement(RescriptReactErrorBoundary.make, {
                              children: React.createElement(React.Suspense, {
                                    children: React.createElement(GnbBannerList_Buyer.make, {
                                          gnbBanners: gnbBanners
                                        }),
                                    fallback: null
                                  }),
                              fallback: (function (param) {
                                  return null;
                                })
                            })), React.createElement("div", {
                          className: "flex items-center text-base text-gray-800"
                        }, React.createElement(Link, {
                              href: match[0],
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: match[1]
                                  }, "판매자료 다운로드")
                            }), React.createElement(Link, {
                              href: "/buyer/upload",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer"
                                  }, "주문서 업로드")
                            }), React.createElement(Link, {
                              href: "https://shinsunmarket.co.kr/532",
                              children: React.createElement("a", {
                                    className: "ml-4 cursor-pointer",
                                    target: "_blank"
                                  }, "고객지원")
                            })))));
}

var PC = {
  LoggedInUserMenu: LoggedInUserMenu$2,
  NotLoggedInUserMenu: NotLoggedInUserMenu$1,
  make: Header_Buyer$PC
};

export {
  homeIcon ,
  Mobile ,
  PC_Old ,
  PC ,
}
/* homeIcon Not a pure module */

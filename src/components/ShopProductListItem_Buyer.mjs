// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as $$Image from "./common/Image.mjs";
import * as React from "react";
import * as Locale from "../utils/Locale.mjs";
import * as Skeleton from "./Skeleton.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ShopProductListItemBuyerFragment_graphql from "../__generated__/ShopProductListItemBuyerFragment_graphql.mjs";
import * as ShopProductListItemBuyerNormalFragment_graphql from "../__generated__/ShopProductListItemBuyerNormalFragment_graphql.mjs";
import * as ShopProductListItemBuyerQuotedFragment_graphql from "../__generated__/ShopProductListItemBuyerQuotedFragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(ShopProductListItemBuyerFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopProductListItemBuyerFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(ShopProductListItemBuyerFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return ShopProductListItemBuyerFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Root_productType_decode = ShopProductListItemBuyerFragment_graphql.Utils.productType_decode;

var Root_productType_fromString = ShopProductListItemBuyerFragment_graphql.Utils.productType_fromString;

var Root = {
  productType_decode: Root_productType_decode,
  productType_fromString: Root_productType_fromString,
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function use$1(fRef) {
  var data = Hooks.useFragment(ShopProductListItemBuyerNormalFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopProductListItemBuyerNormalFragment_graphql.Internal.convertFragment, data);
}

function useOpt$1(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(ShopProductListItemBuyerNormalFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return ShopProductListItemBuyerNormalFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Normal_productStatus_decode = ShopProductListItemBuyerNormalFragment_graphql.Utils.productStatus_decode;

var Normal_productStatus_fromString = ShopProductListItemBuyerNormalFragment_graphql.Utils.productStatus_fromString;

var Normal = {
  productStatus_decode: Normal_productStatus_decode,
  productStatus_fromString: Normal_productStatus_fromString,
  Types: undefined,
  use: use$1,
  useOpt: useOpt$1
};

function use$2(fRef) {
  var data = Hooks.useFragment(ShopProductListItemBuyerQuotedFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopProductListItemBuyerQuotedFragment_graphql.Internal.convertFragment, data);
}

function useOpt$2(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(ShopProductListItemBuyerQuotedFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return ShopProductListItemBuyerQuotedFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Quoted = {
  Types: undefined,
  use: use$2,
  useOpt: useOpt$2
};

var Fragments = {
  Root: Root,
  Normal: Normal,
  Quoted: Quoted
};

function ShopProductListItem_Buyer$NormalProduct$PC(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match = use$1(query);
  var id = match.id;
  var isSoldout = match.status === "SOLDOUT";
  var priceLabel = Belt_Option.mapWithDefault(match.price, "", (function (price$p) {
          return Locale.Float.show(undefined, price$p, 0) + "원";
        }));
  var onClick = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  router.push("/buyer/products/" + id);
                  
                }), param);
  };
  var tmp;
  if (typeof user === "number") {
    tmp = user !== 0 ? React.createElement("span", {
            className: "mt-2 font-bold text-lg text-green-500"
          }, "공급가 회원공개") : React.createElement(Skeleton.Box.make, {});
  } else {
    var textColor = isSoldout ? " text-gray-400" : " text-text-L1";
    tmp = React.createElement("span", {
          className: "mt-2 font-bold text-lg" + textColor
        }, priceLabel);
  }
  return React.createElement("div", {
              className: "w-[280px] h-[376px] cursor-pointer",
              onClick: onClick
            }, React.createElement("div", {
                  className: "w-[280px] aspect-square rounded-xl overflow-hidden relative"
                }, React.createElement($$Image.make, {
                      src: match.image.thumb800x800,
                      placeholder: $$Image.Placeholder.sm,
                      className: "w-full h-full object-cover",
                      alt: "product-" + id
                    }), React.createElement("div", {
                      className: "w-full h-full absolute top-0 left-0 bg-black/[.03] rounded-2xl"
                    }), isSoldout ? React.createElement(React.Fragment, undefined, React.createElement("div", {
                            className: "w-full h-full absolute top-0 left-0 bg-white opacity-40 rounded-xl"
                          }), React.createElement("div", {
                            className: "absolute bottom-0 w-full h-10 bg-gray-600 flex items-center justify-center opacity-90"
                          }, React.createElement("span", {
                                className: "text-white text-xl font-bold"
                              }, "품절"))) : null), React.createElement("div", {
                  className: "flex flex-col mt-4"
                }, React.createElement("span", {
                      className: "text-gray-800 line-clamp-2"
                    }, match.displayName), tmp));
}

var PC = {
  make: ShopProductListItem_Buyer$NormalProduct$PC
};

function ShopProductListItem_Buyer$NormalProduct$MO(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match = use$1(query);
  var id = match.id;
  var isSoldout = match.status === "SOLDOUT";
  var priceLabel = Belt_Option.mapWithDefault(match.price, "", (function (price$p) {
          return Locale.Float.show(undefined, price$p, 0) + "원";
        }));
  var onClick = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  router.push("/buyer/products/" + id);
                  
                }), param);
  };
  var tmp;
  if (typeof user === "number") {
    tmp = user !== 0 ? React.createElement("span", {
            className: "mt-1 font-bold text-green-500"
          }, "공급가 회원공개") : React.createElement(Skeleton.Box.make, {});
  } else {
    var textColor = isSoldout ? " text-gray-400" : " text-text-L1";
    tmp = React.createElement("span", {
          className: "mt-1 font-bold" + textColor
        }, priceLabel);
  }
  return React.createElement("div", {
              className: "cursor-pointer",
              onClick: onClick
            }, React.createElement("div", {
                  className: "rounded-xl overflow-hidden relative aspect-square"
                }, React.createElement($$Image.make, {
                      src: match.image.thumb800x800,
                      placeholder: $$Image.Placeholder.sm,
                      className: "w-full h-full object-cover",
                      alt: "product-" + id
                    }), React.createElement("div", {
                      className: "w-full h-full absolute top-0 left-0 bg-black/[.03] rounded-xl"
                    }), isSoldout ? React.createElement(React.Fragment, undefined, React.createElement("div", {
                            className: "w-full h-full absolute top-0 left-0 bg-white opacity-40 rounded-xl"
                          }), React.createElement("div", {
                            className: "absolute bottom-0 w-full h-8 bg-gray-600 flex items-center justify-center opacity-90"
                          }, React.createElement("span", {
                                className: "text-white font-bold"
                              }, "품절"))) : null), React.createElement("div", {
                  className: "flex flex-col mt-3"
                }, React.createElement("span", {
                      className: "text-gray-800 line-clamp-2 text-sm"
                    }, match.displayName), tmp));
}

var MO = {
  make: ShopProductListItem_Buyer$NormalProduct$MO
};

var NormalProduct = {
  PC: PC,
  MO: MO
};

function ShopProductListItem_Buyer$QuotedProduct$PC(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var match = use$2(query);
  var id = match.id;
  var onClick = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  router.push("/buyer/products/" + id);
                  
                }), param);
  };
  return React.createElement("div", {
              className: "w-[280px] h-[376px] cursor-pointer",
              onClick: onClick
            }, React.createElement("div", {
                  className: "w-[280px] aspect-square rounded-xl overflow-hidden relative"
                }, React.createElement($$Image.make, {
                      src: match.image.thumb800x800,
                      placeholder: $$Image.Placeholder.sm,
                      className: "w-full h-full object-cover",
                      alt: "product-" + id
                    }), React.createElement("div", {
                      className: "w-full h-full absolute top-0 left-0 bg-black/[.03] rounded-2xl"
                    })), React.createElement("div", {
                  className: "flex flex-col mt-4"
                }, React.createElement("span", {
                      className: "text-gray-800 line-clamp-2"
                    }, match.displayName), React.createElement("span", {
                      className: "mt-2 font-bold text-lg text-blue-500"
                    }, "최저가 견적받기")));
}

var PC$1 = {
  make: ShopProductListItem_Buyer$QuotedProduct$PC
};

function ShopProductListItem_Buyer$QuotedProduct$MO(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var match = use$2(query);
  var id = match.id;
  var onClick = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  router.push("/buyer/products/" + id);
                  
                }), param);
  };
  return React.createElement("div", {
              className: "cursor-pointer",
              onClick: onClick
            }, React.createElement("div", {
                  className: "rounded-xl overflow-hidden relative aspect-square"
                }, React.createElement($$Image.make, {
                      src: match.image.thumb800x800,
                      placeholder: $$Image.Placeholder.sm,
                      className: "w-full h-full object-cover",
                      alt: "product-" + id
                    }), React.createElement("div", {
                      className: "w-full h-full absolute top-0 left-0 bg-black/[.03] rounded-xl"
                    })), React.createElement("div", {
                  className: "flex flex-col mt-3"
                }, React.createElement("span", {
                      className: "text-gray-800 line-clamp-2 text-sm"
                    }, match.displayName), React.createElement("span", {
                      className: "mt-1 font-bold text-blue-500"
                    }, "최저가 견적받기")));
}

var MO$1 = {
  make: ShopProductListItem_Buyer$QuotedProduct$MO
};

var QuotedProduct = {
  PC: PC$1,
  MO: MO$1
};

function ShopProductListItem_Buyer$PC$Placeholder(Props) {
  return React.createElement("div", {
              className: "w-[280px] h-[376px]"
            }, React.createElement("div", {
                  className: "w-[280px] h-[280px] animate-pulse rounded-xl bg-gray-100"
                }), React.createElement("div", {
                  className: "mt-3 w-[244px] h-[24px] animate-pulse rounded-sm bg-gray-100"
                }), React.createElement("div", {
                  className: "mt-2 w-[88px] h-[24px] animate-pulse rounded-sm bg-gray-100"
                }));
}

var Placeholder = {
  make: ShopProductListItem_Buyer$PC$Placeholder
};

function ShopProductListItem_Buyer$PC(Props) {
  var query = Props.query;
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  var type_ = match.type_;
  if (type_ === "QUOTABLE" || type_ === "NORMAL") {
    return React.createElement(ShopProductListItem_Buyer$NormalProduct$PC, {
                query: fragmentRefs
              });
  } else if (type_ === "QUOTED") {
    return React.createElement(ShopProductListItem_Buyer$QuotedProduct$PC, {
                query: fragmentRefs
              });
  } else {
    return null;
  }
}

var PC$2 = {
  Placeholder: Placeholder,
  make: ShopProductListItem_Buyer$PC
};

function ShopProductListItem_Buyer$MO$Placeholder(Props) {
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "w-full aspect-square animate-pulse rounded-xl bg-gray-100"
                }), React.createElement("div", {
                  className: "mt-3 w-[132px] h-5 animate-pulse rounded-sm bg-gray-100"
                }), React.createElement("div", {
                  className: "mt-1 w-[68px] h-[22px] animate-pulse rounded-sm bg-gray-100"
                }));
}

var Placeholder$1 = {
  make: ShopProductListItem_Buyer$MO$Placeholder
};

function ShopProductListItem_Buyer$MO(Props) {
  var query = Props.query;
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  var type_ = match.type_;
  if (type_ === "QUOTABLE" || type_ === "NORMAL") {
    return React.createElement(ShopProductListItem_Buyer$NormalProduct$MO, {
                query: fragmentRefs
              });
  } else if (type_ === "QUOTED") {
    return React.createElement(ShopProductListItem_Buyer$QuotedProduct$MO, {
                query: fragmentRefs
              });
  } else {
    return null;
  }
}

var MO$2 = {
  Placeholder: Placeholder$1,
  make: ShopProductListItem_Buyer$MO
};

export {
  Fragments ,
  NormalProduct ,
  QuotedProduct ,
  PC$2 as PC,
  MO$2 as MO,
  
}
/* Image Not a pure module */

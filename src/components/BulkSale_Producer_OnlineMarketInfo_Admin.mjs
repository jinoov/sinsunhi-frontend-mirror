// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as BulkSale_Producer_OnlineMarketInfo_Button_Admin from "./BulkSale_Producer_OnlineMarketInfo_Button_Admin.mjs";
import * as BulkSale_Producer_RawOnlineMarketInfo_Button_Admin from "./BulkSale_Producer_RawOnlineMarketInfo_Button_Admin.mjs";
import * as BulkSaleProducerOnlineMarketInfoAdminFragment_graphql from "../__generated__/BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.mjs";
import * as BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql from "../__generated__/BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql.mjs";

function internal_makeRefetchableFnOpts(fetchPolicy, onComplete, param) {
  var tmp = {};
  var tmp$1 = RescriptRelay.mapFetchPolicy(fetchPolicy);
  if (tmp$1 !== undefined) {
    tmp.fetchPolicy = Caml_option.valFromOption(tmp$1);
  }
  var tmp$2 = RescriptRelay_Internal.internal_nullableToOptionalExnHandler(onComplete);
  if (tmp$2 !== undefined) {
    tmp.onComplete = Caml_option.valFromOption(tmp$2);
  }
  return tmp;
}

function useRefetchable(fRef) {
  var match = Hooks.useRefetchableFragment(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.node, fRef);
  var refetchFn = match[1];
  var data = RescriptRelay_Internal.internal_useConvertedValue(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Internal.convertFragment, match[0]);
  return [
          data,
          React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return Curry._2(refetchFn, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [refetchFn])
        ];
}

function use(fRef) {
  var data = Hooks.useFragment(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

function usePagination(fr) {
  var p = Hooks.usePaginationFragment(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.node, fr);
  var data = RescriptRelay_Internal.internal_useConvertedValue(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          isLoadingNext: p.isLoadingNext,
          isLoadingPrevious: p.isLoadingPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

function useBlockingPagination(fRef) {
  var p = Hooks.useBlockingPaginationFragment(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.node, fRef);
  var data = RescriptRelay_Internal.internal_useConvertedValue(BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

var makeRefetchVariables = BulkSaleProducerOnlineMarketInfoAdminRefetchQuery_graphql.Types.makeRefetchVariables;

var Fragment_onlineMarket_decode = BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Utils.onlineMarket_decode;

var Fragment_onlineMarket_fromString = BulkSaleProducerOnlineMarketInfoAdminFragment_graphql.Utils.onlineMarket_fromString;

var Fragment = {
  onlineMarket_decode: Fragment_onlineMarket_decode,
  onlineMarket_fromString: Fragment_onlineMarket_fromString,
  Types: undefined,
  internal_makeRefetchableFnOpts: internal_makeRefetchableFnOpts,
  useRefetchable: useRefetchable,
  use: use,
  useOpt: useOpt,
  usePagination: usePagination,
  useBlockingPagination: useBlockingPagination,
  makeRefetchVariables: makeRefetchVariables
};

function BulkSale_Producer_OnlineMarketInfo_Admin(Props) {
  var query = Props.query;
  var applicationId = Props.applicationId;
  var onlineMarkets = use(query);
  return React.createElement(React.Fragment, undefined, React.createElement(BulkSale_Producer_RawOnlineMarketInfo_Button_Admin.make, {
                  onlineMarkets: onlineMarkets
                }), React.createElement(BulkSale_Producer_OnlineMarketInfo_Button_Admin.make, {
                  onlineMarkets: onlineMarkets,
                  applicationId: applicationId
                }));
}

var make = BulkSale_Producer_OnlineMarketInfo_Admin;

export {
  Fragment ,
  make ,
  
}
/* react Not a pure module */

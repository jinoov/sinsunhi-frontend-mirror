// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Badge from "./Badge.mjs";
import * as React from "react";
import * as Locale from "../utils/Locale.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function formatDateTime(d) {
  return Locale.DateTime.formatFromUTC(new Date(d), "yyyy/MM/dd HH:mm");
}

function formatDate(d) {
  return Locale.DateTime.formatFromUTC(new Date(d), "yyyy/MM/dd");
}

function formatTime(d) {
  return Locale.DateTime.formatFromUTC(new Date(d), "HH:mm");
}

function Settlement_Buyer$Item$Table(Props) {
  var settlement = Props.settlement;
  return React.createElement("li", {
              className: "hidden lg:grid lg:grid-cols-9-gl-buyer text-gray-700"
            }, React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block text-gray-400 mb-1"
                    }, formatDateTime(settlement.orderDate)), React.createElement("span", {
                      className: "block"
                    }, React.createElement(Badge.make, {
                          status: settlement.status
                        }))), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block text-gray-400"
                    }, String(settlement.productId)), React.createElement("span", {
                      className: "block"
                    }, settlement.productName), React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(settlement.productOptionName, ""))), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "whitespace-nowrap"
                    }, "" + Locale.Float.show(undefined, settlement.productPrice, 0) + "원")), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block"
                    }, String(settlement.quantity))), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, "!!!"), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(settlement.receiverName, "-")), React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(settlement.receiverPhone, "-")), React.createElement("span", {
                      className: "block text-gray-500"
                    }, Belt_Option.getWithDefault(settlement.receiverAddress, "-")), React.createElement("span", {
                      className: "block text-gray-500"
                    }, Belt_Option.getWithDefault(settlement.receiverZipcode, "-"))), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(settlement.ordererName, "")), React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(settlement.ordererPhone, ""))), React.createElement("div", {
                  className: "h-full flex flex-col px-4 py-2"
                }, React.createElement("span", {
                      className: "block"
                    }, Belt_Option.getWithDefault(Belt_Option.map(settlement.deliveryDate, formatDateTime), "-"))));
}

var Table = {
  make: Settlement_Buyer$Item$Table
};

function Settlement_Buyer$Item$Card(Props) {
  var settlement = Props.settlement;
  return React.createElement("li", {
              className: "py-7 px-5 lg:mb-4 lg:hidden text-black-gl"
            }, React.createElement("section", {
                  className: "flex justify-between items-start"
                }, React.createElement("div", undefined, React.createElement("div", {
                          className: "flex"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "주문번호")), React.createElement("div", {
                          className: "flex mt-2"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "일자"), React.createElement("span", {
                              className: "ml-2"
                            }, formatDateTime(settlement.orderDate)))), React.createElement(Badge.make, {
                      status: settlement.status
                    })), React.createElement("div", {
                  className: "divide-y divide-gray-100"
                }, React.createElement("section", {
                      className: "py-3"
                    }, React.createElement("div", {
                          className: "flex"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "주문상품"), React.createElement("div", {
                              className: "ml-2 "
                            }, React.createElement("span", {
                                  className: "block"
                                }, String(settlement.productId)), React.createElement("span", {
                                  className: "block mt-1"
                                }, settlement.productName), React.createElement("span", {
                                  className: "block mt-1"
                                }, Belt_Option.getWithDefault(settlement.productOptionName, "")))), React.createElement("div", {
                          className: "flex mt-4 "
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "상품금액"), React.createElement("span", {
                              className: "ml-2 "
                            }, "" + Locale.Float.show(undefined, settlement.productPrice, 0) + "원")), React.createElement("div", {
                          className: "flex mt-4"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "수량"), React.createElement("span", {
                              className: "ml-2"
                            }, String(settlement.quantity)))), React.createElement("section", {
                      className: "py-3"
                    }, React.createElement("div", {
                          className: "flex justify-between"
                        }, "!!!"), React.createElement("div", {
                          className: "flex mt-4"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "배송정보"), React.createElement("div", {
                              className: "flex-1 pl-2"
                            }, React.createElement("span", {
                                  className: "block"
                                }, "" + Belt_Option.getWithDefault(settlement.receiverName, "-") + " " + Belt_Option.getWithDefault(settlement.receiverPhone, "-") + ""), React.createElement("span", {
                                  className: "block mt-1"
                                }, Belt_Option.getWithDefault(settlement.receiverAddress, "-")), React.createElement("span", {
                                  className: "block mt-1"
                                }, Belt_Option.getWithDefault(settlement.receiverZipcode, "-")))), React.createElement("div", {
                          className: "flex mt-4"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "주문자명"), React.createElement("div", {
                              className: "ml-2 "
                            }, React.createElement("span", {
                                  className: "block"
                                }, Belt_Option.getWithDefault(settlement.ordererName, "-")))), React.createElement("div", {
                          className: "flex mt-2"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "연락처"), React.createElement("div", {
                              className: "ml-2"
                            }, React.createElement("span", {
                                  className: "block"
                                }, Belt_Option.getWithDefault(settlement.ordererPhone, "-"))))), React.createElement("section", {
                      className: "py-3"
                    }, React.createElement("div", {
                          className: "flex"
                        }, React.createElement("span", {
                              className: "w-20 text-gray-gl"
                            }, "출고일"), React.createElement("span", {
                              className: "ml-2"
                            }, Belt_Option.getWithDefault(Belt_Option.map(settlement.deliveryDate, formatDateTime), "-"))))));
}

var Card = {
  make: Settlement_Buyer$Item$Card
};

var Item = {
  Table: Table,
  Card: Card
};

function Settlement_Buyer(Props) {
  var settlement = Props.settlement;
  return React.createElement(React.Fragment, undefined, React.createElement(Settlement_Buyer$Item$Table, {
                  settlement: settlement
                }), React.createElement(Settlement_Buyer$Item$Card, {
                  settlement: settlement
                }));
}

var make = Settlement_Buyer;

export {
  formatDateTime ,
  formatDate ,
  formatTime ,
  Item ,
  make ,
}
/* Badge Not a pure module */

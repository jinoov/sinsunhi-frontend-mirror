// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Image from "./common/Image.mjs";
import * as React from "react";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ShopMainCategoryListBuyerQuery_graphql from "../__generated__/ShopMainCategoryListBuyerQuery_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(ShopMainCategoryListBuyerQuery_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopMainCategoryListBuyerQuery_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(ShopMainCategoryListBuyerQuery_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return ShopMainCategoryListBuyerQuery_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function ShopMain_CategoryList_Buyer$PC$Placeholder(Props) {
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "h-9 w-[138px] rounded-lg bg-gray-150 animate-pulse ml-5"
                }), React.createElement("ol", {
                  className: "flex items-center mt-6"
                }, Belt_Array.map(Belt_Array.range(1, 8), (function (idx) {
                        return React.createElement("div", {
                                    key: "category-skeleton-" + String(idx),
                                    className: "mx-6 w-[112px] max-w-[112px] flex flex-col items-center"
                                  }, React.createElement("div", {
                                        className: "w-[112px] h-[112px] rounded-lg animate-pulse bg-gray-150"
                                      }), React.createElement("div", {
                                        className: "mt-2 w-16 h-6 rounded-lg animate-pulse bg-gray-150"
                                      }));
                      }))));
}

var Placeholder = {
  make: ShopMain_CategoryList_Buyer$PC$Placeholder
};

function ShopMain_CategoryList_Buyer$PC(Props) {
  var query = Props.query;
  var match = use(query);
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("span", {
                  className: "text-2xl text-gray-800 font-bold ml-5"
                }, "전체 카테고리"), React.createElement("ol", {
                  className: "mt-6 w-full flex items-center"
                }, React.createElement("li", {
                      className: "mx-6 w-[112px] max-w-[112px]"
                    }, React.createElement(Link, {
                          href: "/buyer/products/all",
                          children: React.createElement("a", undefined, React.createElement("img", {
                                    className: "w-28 h-28",
                                    alt: "display-category-all",
                                    src: "https://public.sinsunhi.com/images/20220512/category_all.png"
                                  }), React.createElement("p", {
                                    className: "w-[112px] text-gray-800 font-bold text-center"
                                  }, "전체 상품"))
                        })), Belt_Array.map(match.mainDisplayCategories, (function (param) {
                        var name = param.name;
                        var id = param.id;
                        var key = "display-category-" + id + "-pc";
                        var src = Belt_Option.mapWithDefault(param.image, $$Image.Placeholder.sm, (function (image$p) {
                                return image$p.original;
                              }));
                        var queryStr = new URLSearchParams([
                                [
                                  "category-id",
                                  id
                                ],
                                [
                                  "category-name",
                                  encodeURIComponent(name)
                                ]
                              ]).toString();
                        return React.createElement("li", {
                                    key: key,
                                    className: "mx-6 w-[112px]"
                                  }, React.createElement(Link, {
                                        href: "/buyer/products?" + queryStr,
                                        children: React.createElement("a", undefined, React.createElement("div", {
                                                  className: "w-28 aspect-square rounded-lg overflow-hidden"
                                                }, React.createElement($$Image.make, {
                                                      src: src,
                                                      placeholder: $$Image.Placeholder.sm,
                                                      className: "w-full h-full object-cover",
                                                      alt: key
                                                    })), React.createElement("p", {
                                                  className: "text-gray-800 font-bold text-center"
                                                }, name))
                                      }));
                      }))));
}

var PC = {
  Placeholder: Placeholder,
  make: ShopMain_CategoryList_Buyer$PC
};

function ShopMain_CategoryList_Buyer$MO$Placeholder(Props) {
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("div", {
                  className: "ml-5 h-5 w-[90px] rounded-lg bg-gray-150 animate-pulse"
                }), React.createElement("ol", {
                  className: "mt-6 w-full grid grid-cols-4 gap-y-3"
                }, Belt_Array.map(Belt_Array.range(1, 8), (function (idx) {
                        return React.createElement("li", {
                                    key: "category-skeleton-" + String(idx),
                                    className: "w-full flex items-center justify-center"
                                  }, React.createElement("div", {
                                        className: "w-[90px] flex flex-col items-center"
                                      }, React.createElement("div", {
                                            className: "w-14 aspect-square rounded-lg animate-pulse bg-gray-150"
                                          }), React.createElement("div", {
                                            className: "mt-1 w-16 h-5 rounded-md animate-pulse bg-gray-150"
                                          })));
                      }))));
}

var Placeholder$1 = {
  make: ShopMain_CategoryList_Buyer$MO$Placeholder
};

function ShopMain_CategoryList_Buyer$MO(Props) {
  var query = Props.query;
  var match = use(query);
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("span", {
                  className: "ml-5 text-lg text-gray-800 font-bold"
                }, "전체 카테고리"), React.createElement("ol", {
                  className: "mt-6 w-full grid grid-cols-4 gap-y-3"
                }, React.createElement("li", {
                      className: "w-full flex items-center justify-center"
                    }, React.createElement(Link, {
                          href: "/buyer/products/all",
                          children: React.createElement("a", undefined, React.createElement("div", {
                                    className: "w-[90px] flex flex-col items-center justify-center"
                                  }, React.createElement("img", {
                                        className: "w-14 aspect-square object-cover",
                                        alt: "display-category-all",
                                        src: "https://public.sinsunhi.com/images/20220512/category_all.png"
                                      }), React.createElement("p", {
                                        className: "text-gray-800 text-sm"
                                      }, "전체 상품")))
                        })), Belt_Array.map(match.mainDisplayCategories, (function (param) {
                        var name = param.name;
                        var id = param.id;
                        var key = "display-category-" + id + "-mobile";
                        var src = Belt_Option.mapWithDefault(param.image, $$Image.Placeholder.sm, (function (image$p) {
                                return image$p.original;
                              }));
                        var queryStr = new URLSearchParams([
                                [
                                  "category-id",
                                  id
                                ],
                                [
                                  "category-name",
                                  encodeURIComponent(name)
                                ]
                              ]).toString();
                        return React.createElement("li", {
                                    key: key,
                                    className: "w-full flex items-center justify-center"
                                  }, React.createElement(Link, {
                                        href: "/buyer/products?" + queryStr,
                                        children: React.createElement("a", undefined, React.createElement("div", {
                                                  className: "w-[90px] flex flex-col items-center justify-center"
                                                }, React.createElement("div", {
                                                      className: "w-14 aspect-square rounded-lg overflow-hidden"
                                                    }, React.createElement($$Image.make, {
                                                          src: src,
                                                          placeholder: $$Image.Placeholder.sm,
                                                          className: "w-full h-full object-cover",
                                                          alt: key
                                                        })), React.createElement("p", {
                                                      className: "text-gray-800 text-sm"
                                                    }, name)))
                                      }));
                      }))));
}

var MO = {
  Placeholder: Placeholder$1,
  make: ShopMain_CategoryList_Buyer$MO
};

export {
  Fragment ,
  PC ,
  MO ,
  
}
/* Image Not a pure module */

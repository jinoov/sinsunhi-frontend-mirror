// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as $$Image from "./common/Image.mjs";
import * as React from "react";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactRelay from "react-relay";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ShopMainCategoryListBuyerQuery_graphql from "../__generated__/ShopMainCategoryListBuyerQuery_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(ShopMainCategoryListBuyerQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(ShopMainCategoryListBuyerQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(ShopMainCategoryListBuyerQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(ShopMainCategoryListBuyerQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, ShopMainCategoryListBuyerQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, ShopMainCategoryListBuyerQuery_graphql.node, ShopMainCategoryListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: ShopMainCategoryListBuyerQuery_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, ShopMainCategoryListBuyerQuery_graphql.node, ShopMainCategoryListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(ShopMainCategoryListBuyerQuery_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(ShopMainCategoryListBuyerQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopMainCategoryListBuyerQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(ShopMainCategoryListBuyerQuery_graphql.node, ShopMainCategoryListBuyerQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query = {
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function ShopMain_CategoryList_Buyer$PC$Placeholder(props) {
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "h-9 w-[138px] rounded-lg bg-gray-150 animate-pulse ml-5"
                }), React.createElement("ol", {
                  className: "flex items-center mt-6"
                }, Belt_Array.map(Belt_Array.range(1, 8), (function (idx) {
                        return React.createElement("div", {
                                    key: "category-skeleton-" + String(idx) + "",
                                    className: "mx-6 w-[112px] max-w-[112px] flex flex-col items-center"
                                  }, React.createElement("div", {
                                        className: "w-[112px] h-[112px] rounded-lg animate-pulse bg-gray-150"
                                      }), React.createElement("div", {
                                        className: "mt-2 w-16 h-6 rounded-lg animate-pulse bg-gray-150"
                                      }));
                      }))));
}

var Placeholder = {
  make: ShopMain_CategoryList_Buyer$PC$Placeholder
};

function ShopMain_CategoryList_Buyer$PC(props) {
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("span", {
                  className: "text-2xl text-gray-800 font-bold ml-5"
                }, "전체 카테고리"), React.createElement("ol", {
                  className: "mt-6 w-full flex items-center"
                }, Belt_Array.map(props.categories, (function (param) {
                        var id = param.id;
                        var key = "display-category-" + id + "-pc";
                        var src = Belt_Option.mapWithDefault(param.image, $$Image.Placeholder.getSrc(/* Sm */0), (function (image$p) {
                                return image$p.original;
                              }));
                        return React.createElement("li", {
                                    key: key,
                                    className: "mx-6 w-[112px]"
                                  }, React.createElement(Link, {
                                        href: "/categories/" + id + "",
                                        children: React.createElement("a", undefined, React.createElement("div", {
                                                  className: "w-28 aspect-square rounded-lg overflow-hidden"
                                                }, React.createElement($$Image.make, {
                                                      src: src,
                                                      placeholder: /* Sm */0,
                                                      alt: key,
                                                      className: "w-full h-full object-cover"
                                                    })), React.createElement("p", {
                                                  className: "text-gray-800 font-bold text-center"
                                                }, param.name))
                                      }));
                      })), React.createElement("li", {
                      className: "mx-6 w-[112px] max-w-[112px]"
                    }, React.createElement(Link, {
                          href: "/products",
                          children: React.createElement("a", undefined, React.createElement("img", {
                                    className: "w-28 h-28",
                                    alt: "display-category-all",
                                    src: "https://public.sinsunhi.com/images/20220512/category_all.png"
                                  }), React.createElement("p", {
                                    className: "w-[112px] text-gray-800 font-bold text-center"
                                  }, "전체 상품"))
                        }))));
}

var PC = {
  Placeholder: Placeholder,
  make: ShopMain_CategoryList_Buyer$PC
};

function ShopMain_CategoryList_Buyer$MO$Placeholder(props) {
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("div", {
                  className: "ml-5 h-5 w-[90px] rounded-lg bg-gray-150 animate-pulse"
                }), React.createElement("ol", {
                  className: "mt-6 w-full grid grid-cols-4 gap-y-3"
                }, Belt_Array.map(Belt_Array.range(1, 8), (function (idx) {
                        return React.createElement("li", {
                                    key: "category-skeleton-" + String(idx) + "",
                                    className: "w-full flex items-center justify-center"
                                  }, React.createElement("div", {
                                        className: "w-[90px] flex flex-col items-center"
                                      }, React.createElement("div", {
                                            className: "w-14 aspect-square rounded-lg animate-pulse bg-gray-150"
                                          }), React.createElement("div", {
                                            className: "mt-1 w-16 h-5 rounded-md animate-pulse bg-gray-150"
                                          })));
                      }))));
}

var Placeholder$1 = {
  make: ShopMain_CategoryList_Buyer$MO$Placeholder
};

function ShopMain_CategoryList_Buyer$MO(props) {
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement("span", {
                  className: "ml-5 text-lg text-gray-800 font-bold"
                }, "전체 카테고리"), React.createElement("ol", {
                  className: "mt-6 w-full grid grid-cols-4 gap-y-3"
                }, React.createElement("li", {
                      className: "w-full flex items-center justify-center"
                    }, React.createElement(Link, {
                          href: "/products",
                          children: React.createElement("a", undefined, React.createElement("div", {
                                    className: "w-[90px] flex flex-col items-center justify-center"
                                  }, React.createElement("img", {
                                        className: "w-14 aspect-square object-cover",
                                        alt: "display-category-all",
                                        src: "https://public.sinsunhi.com/images/20220512/category_all.png"
                                      }), React.createElement("p", {
                                        className: "text-gray-800 text-sm"
                                      }, "전체 상품")))
                        })), Belt_Array.map(props.categories, (function (param) {
                        var id = param.id;
                        var key = "display-category-" + id + "-mobile";
                        return React.createElement("li", {
                                    key: key,
                                    className: "w-full flex items-center justify-center"
                                  }, React.createElement(Link, {
                                        href: "/categories/" + id + "",
                                        children: React.createElement("a", undefined, React.createElement("div", {
                                                  className: "w-[90px] flex flex-col items-center justify-center"
                                                }, React.createElement("div", {
                                                      className: "w-14 aspect-square rounded-lg overflow-hidden"
                                                    }, React.createElement($$Image.make, {
                                                          src: Belt_Option.map(param.image, (function (param) {
                                                                  return param.original;
                                                                })),
                                                          placeholder: /* Sm */0,
                                                          alt: key,
                                                          className: "w-full h-full object-cover"
                                                        })), React.createElement("p", {
                                                      className: "text-gray-800 text-sm"
                                                    }, param.name)))
                                      }));
                      }))));
}

var MO = {
  Placeholder: Placeholder$1,
  make: ShopMain_CategoryList_Buyer$MO
};

export {
  Query ,
  PC ,
  MO ,
}
/* Image Not a pure module */

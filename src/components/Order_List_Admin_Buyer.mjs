// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "@rescript/react/src/React.mjs";
import * as React$1 from "react";
import * as Checkbox from "./common/Checkbox.mjs";
import * as Constants from "../constants/Constants.mjs";
import * as ErrorPanel from "./common/ErrorPanel.mjs";
import * as Pagination from "./common/Pagination.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as EmptyOrders from "./common/EmptyOrders.mjs";
import * as Order_Admin from "./Order_Admin.mjs";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";

function Order_List_Admin_Buyer$Header(props) {
  return React$1.createElement("div", {
              className: "grid grid-cols-10-gl-admin bg-gray-100 text-gray-500 h-12"
            }, React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, React$1.createElement(Checkbox.make, {
                      id: "check-all",
                      checked: props.checked,
                      onChange: props.onChange,
                      disabled: props.disabled
                    })), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "주문번호·일자"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "바이어·생산자"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "주문상품"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "상품금액·결제수단"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "수량"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "운송장번호"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "배송정보"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap"
                }, "주문자명·연락처"), React$1.createElement("div", {
                  className: "h-full px-4 flex items-center whitespace-nowrap text-center"
                }, "출고일"));
}

var Header = {
  make: Order_List_Admin_Buyer$Header
};

function Order_List_Admin_Buyer$Loading(props) {
  return React$1.createElement("div", {
              className: "w-full overflow-x-scroll"
            }, React$1.createElement("div", {
                  className: "min-w-max text-sm divide-y divide-gray-100"
                }, React$1.createElement(Order_List_Admin_Buyer$Header, {}), React$1.createElement("ol", {
                      className: "divide-y divide-gray-100 lg:list-height-admin-buyer lg:overflow-y-scroll"
                    }, Garter_Array.map(Garter_Array.make(5, 0), (function (param) {
                            return React$1.createElement(Order_Admin.Item.Table.Loading.make, {});
                          })))));
}

var Loading = {
  make: Order_List_Admin_Buyer$Loading
};

function Order_List_Admin_Buyer(props) {
  var onClickCancel = props.onClickCancel;
  var onCheckOrder = props.onCheckOrder;
  var check = props.check;
  var status = props.status;
  if (typeof status === "number") {
    return React$1.createElement(Order_List_Admin_Buyer$Loading, {});
  }
  if (status.TAG !== /* Loaded */0) {
    return React$1.createElement(ErrorPanel.make, {
                error: status._0,
                renderOnRetry: Caml_option.some(React$1.createElement(Order_List_Admin_Buyer$Loading, {}))
              });
  }
  var orders = status._0;
  var orders$p = CustomHooks.OrdersAdmin.orders_decode(orders);
  var countOfOrdersToCheck;
  countOfOrdersToCheck = orders$p.TAG === /* Ok */0 ? Garter_Array.keep(orders$p._0.data, Order_Admin.isCheckableOrder).length : 0;
  var isCheckAll = countOfOrdersToCheck !== 0 && countOfOrdersToCheck === props.countOfChecked;
  var isDisabledCheckAll;
  if (typeof status === "number" || status.TAG !== /* Loaded */0) {
    isDisabledCheckAll = true;
  } else {
    var orders$p$1 = CustomHooks.OrdersAdmin.orders_decode(status._0);
    isDisabledCheckAll = orders$p$1.TAG === /* Ok */0 ? Garter_Array.keep(orders$p$1._0.data, Order_Admin.isCheckableOrder).length === 0 : true;
  }
  var orders$p$2 = CustomHooks.OrdersAdmin.orders_decode(orders);
  var tmp;
  if (orders$p$2.TAG === /* Ok */0) {
    var orders$p$3 = orders$p$2._0;
    tmp = React$1.createElement("ol", {
          className: "divide-y divide-gray-100 lg:list-height-admin-buyer lg:overflow-y-scroll"
        }, orders$p$3.data.length !== 0 ? Garter_Array.map(orders$p$3.data, (function (order) {
                  return React.createElementWithKey(Order_Admin.make, {
                              order: order,
                              check: check,
                              onCheckOrder: onCheckOrder,
                              onClickCancel: onClickCancel
                            }, order.orderProductNo);
                })) : React$1.createElement(EmptyOrders.make, {}));
  } else {
    console.log(orders$p$2._0);
    tmp = null;
  }
  var tmp$1;
  if (typeof status === "number" || status.TAG !== /* Loaded */0) {
    tmp$1 = null;
  } else {
    var orders$p$4 = CustomHooks.Orders.orders_decode(status._0);
    if (orders$p$4.TAG === /* Ok */0) {
      var orders$p$5 = orders$p$4._0;
      tmp$1 = React$1.createElement("div", {
            className: "flex justify-center pt-5"
          }, null, React$1.createElement(Pagination.make, {
                pageDisplySize: Constants.pageDisplySize,
                itemPerPage: orders$p$5.limit,
                total: orders$p$5.count
              }));
    } else {
      tmp$1 = null;
    }
  }
  return React$1.createElement(React$1.Fragment, undefined, React$1.createElement("div", {
                  className: "w-full overflow-x-scroll"
                }, React$1.createElement("div", {
                      className: "min-w-max text-sm divide-y divide-gray-100"
                    }, React$1.createElement(Order_List_Admin_Buyer$Header, {
                          checked: isCheckAll,
                          onChange: props.onCheckAll,
                          disabled: isDisabledCheckAll
                        }), tmp)), tmp$1);
}

var make = Order_List_Admin_Buyer;

export {
  Header ,
  Loading ,
  make ,
}
/* React Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Paperform from "./common/Paperform.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";

function dropByK(dict, k) {
  return Js_dict.fromArray(Garter_Array.keep(Js_dict.entries(dict), (function (param) {
                    return param[0] !== k;
                  })));
}

function SignUp_Buyer_Survey(Props) {
  var router = Router.useRouter();
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match = React.useState(function () {
        return false;
      });
  var setShow = match[1];
  var userPrefill;
  if (typeof user === "number") {
    userPrefill = undefined;
  } else {
    var user$p = user._0;
    var match$1 = user$p.email;
    var match$2 = user$p.phone;
    userPrefill = match$1 !== undefined ? (
        match$2 !== undefined ? "crtk4=" + match$1 + "&d810t=" + match$2 + "" : "crtk4=" + match$1 + ""
      ) : (
        match$2 !== undefined ? "d810t=" + match$2 + "" : undefined
      );
  }
  React.useEffect((function () {
          if (Belt_Option.isSome(Js_dict.get(router.query, "welcome"))) {
            var prim1_pathname = router.pathname;
            var prim1_query = dropByK(router.query, "welcome");
            var prim1 = {
              pathname: prim1_pathname,
              query: prim1_query
            };
            router.replace(prim1);
            setShow(function (param) {
                  return true;
                });
          }
          
        }), [router.query]);
  if (match[0] && typeof user !== "number") {
    return React.createElement(Paperform.make, {
                paperFormId: Env.buyerSignupSurveyKey,
                prefill: userPrefill
              });
  } else {
    return null;
  }
}

var make = SignUp_Buyer_Survey;

export {
  dropByK ,
  make ,
}
/* Env Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as Product_Detail_Description_Admin from "./Product_Detail_Description_Admin.mjs";
import * as UpdateProductDetailDescriptionAdmin_graphql from "../__generated__/UpdateProductDetailDescriptionAdmin_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(UpdateProductDetailDescriptionAdmin_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(UpdateProductDetailDescriptionAdmin_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(UpdateProductDetailDescriptionAdmin_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return UpdateProductDetailDescriptionAdmin_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment_productStatus_decode = UpdateProductDetailDescriptionAdmin_graphql.Utils.productStatus_decode;

var Fragment_productStatus_fromString = UpdateProductDetailDescriptionAdmin_graphql.Utils.productStatus_fromString;

var Fragment = {
  productStatus_decode: Fragment_productStatus_decode,
  productStatus_fromString: Fragment_productStatus_fromString,
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function queryImageToFormImage(image) {
  return {
          original: image.original,
          thumb1000x1000: image.thumb1000x1000,
          thumb100x100: image.thumb100x100,
          thumb1920x1920: image.thumb1920x1920,
          thumb400x400: image.thumb400x400,
          thumb800x800: image.thumb800x800
        };
}

function UpdateProduct_Detail_Description_Admin(Props) {
  var query = Props.query;
  var data = use(query);
  var allFieldsDisabled = data.status === "NOSALE";
  var tmp = {
    defaultNotice: Belt_Option.getWithDefault(data.notice, ""),
    defaultDescription: data.description,
    defaultThumbnail: queryImageToFormImage(data.image),
    defaultSalesDocument: Belt_Option.getWithDefault(data.salesDocument, ""),
    allFieldsDisabled: allFieldsDisabled
  };
  if (data.noticeStartAt !== undefined) {
    tmp.defaultNoticeStratAt = Caml_option.valFromOption(data.noticeStartAt);
  }
  if (data.noticeEndAt !== undefined) {
    tmp.defaultNoticeEndAt = Caml_option.valFromOption(data.noticeEndAt);
  }
  return React.createElement(Product_Detail_Description_Admin.make, tmp);
}

var make = UpdateProduct_Detail_Description_Admin;

export {
  Fragment ,
  queryImageToFormImage ,
  make ,
  
}
/* react Not a pure module */

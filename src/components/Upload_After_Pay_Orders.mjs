// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Dialog from "./common/Dialog.mjs";
import * as Checkbox from "./common/Checkbox.mjs";
import * as ReactUtil from "../utils/ReactUtil.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconCloseInput from "./svgs/IconCloseInput.mjs";
import * as UploadFileToS3PresignedUrl from "../utils/UploadFileToS3PresignedUrl.mjs";

function Upload_After_Pay_Orders(Props) {
  var onSuccess = Props.onSuccess;
  var onFailure = Props.onFailure;
  var startIndex = Props.startIndex;
  var agreements = CustomHooks.AfterPayAgreement.use(undefined);
  var canUpload;
  canUpload = typeof agreements === "number" || agreements.TAG !== /* Loaded */0 ? false : agreements._0.terms.length !== 0;
  var match = React.useState(function () {
        
      });
  var setFiles = match[1];
  var file = Belt_Option.flatMap(match[0], Garter_Array.first);
  var match$1 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowDelete = match$1[1];
  var match$2 = React.useState(function () {
        return false;
      });
  var setAgree = match$2[1];
  var didAgree = match$2[0];
  var match$3 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowFileRequired = match$3[1];
  var handleOnChangeFiles = function (e) {
    var values = e.target.files;
    setFiles(function (param) {
          return values;
        });
  };
  var handleResetFile = function (param) {
    var inputFile = document.getElementById("input-file");
    Belt_Option.map((inputFile == null) ? undefined : Caml_option.some(inputFile), (function (inputFile$p) {
            inputFile$p.value = "";
          }));
    setFiles(function (param) {
          
        });
  };
  var disabled = !(didAgree && Belt_Option.isSome(file));
  return React.createElement(React.Fragment, undefined, React.createElement("section", {
                  className: "py-5"
                }, React.createElement("h3", {
                      className: "font-bold text-lg w-full sm:w-9/12 pt-5 pb-1"
                    }, "나중결제로 주문할 주문서를 업로드해주세요"), React.createElement("div", {
                      className: "text-sm text-gray-600 pb-10"
                    }, "*나중결제 가능 금액 이하로 주문서 총 발주금액을 조정해주세요", React.createElement("br", undefined), "*초과시, 주문 실패"), React.createElement("div", {
                      className: "flex justify-between"
                    }, React.createElement("h4", {
                          className: "font-semibold"
                        }, "" + String(startIndex) + ". 주문서 선택", React.createElement("span", {
                              className: "block text-gray-400 text-sm"
                            }, "*.xls, xlsx 확장자만 업로드 가능")), React.createElement("label", {
                          className: "p-3 w-28 text-white text-center whitespace-nowrap font-bold rounded-xl cursor-pointer focus:outline-none focus-within:bg-green-gl-dark focus-within:outline-none" + (
                            canUpload ? " bg-green-gl hover:bg-green-gl-dark" : " bg-gray-300"
                          )
                        }, React.createElement("span", undefined, "파일 선택"), React.createElement("input", {
                              className: "sr-only",
                              id: "input-file",
                              accept: ".xls,.xlsx",
                              disabled: !canUpload,
                              type: "file",
                              onChange: handleOnChangeFiles
                            }))), React.createElement("div", {
                      className: file !== undefined ? "p-3 relative w-full flex items-center rounded-xl mt-4 border border-gray-200 text-gray-400" : "p-3 relative w-full flex items-center rounded-xl mt-4 border border-gray-200 text-gray-400 bg-gray-100"
                    }, React.createElement("span", undefined, Belt_Option.getWithDefault(Belt_Option.map(file, (function (file$p) {
                                    return file$p.name;
                                  })), "파일명.xlsx")), Belt_Option.getWithDefault(Belt_Option.map(file, (function (param) {
                                return React.createElement("span", {
                                            className: "absolute p-2 right-0",
                                            onClick: (function (param) {
                                                setShowDelete(function (param) {
                                                      return /* Show */0;
                                                    });
                                              })
                                          }, React.createElement(IconCloseInput.make, {
                                                height: "28",
                                                width: "28",
                                                fill: "#B2B2B2"
                                              }));
                              })), null))), React.createElement("section", {
                  className: "py-5"
                }, React.createElement("div", {
                      className: "flex justify-between items-center"
                    }, React.createElement("div", {
                          className: "flex flex-col gap-3"
                        }, React.createElement("h4", {
                              className: "font-semibold"
                            }, "" + String(startIndex + 1 | 0) + ". 이용 동의 후 주문서 업로드"), React.createElement("div", {
                              className: "flex items-center gap-1"
                            }, React.createElement("div", {
                                  className: "mr-1"
                                }, React.createElement(Checkbox.make, {
                                      id: "checkbox-upload-agreement",
                                      checked: didAgree,
                                      onChange: (function (param) {
                                          setAgree(function (prev) {
                                                return !prev;
                                              });
                                        }),
                                      disabled: !canUpload
                                    })), React.createElement("label", {
                                  className: "text-sm text-gray-800",
                                  htmlFor: "checkbox-upload-agreement"
                                }, "나중결제 이용약관을 확인했어요"), React.createElement("a", {
                                  className: "text-sm text-gray-500 underline",
                                  href: "https://afterpay-terms.oopy.io/695e9bce-bc97-40d8-8f2a-c88b4611e057"
                                }, "약관보기"))), React.createElement("div", undefined, React.createElement(ReactUtil.SpreadProps.make, {
                              children: React.createElement("button", {
                                    className: "ml-auto text-white font-bold p-3 w-28 rounded-xl focus:outline-none bg-green-gl  hover:bg-green-gl-dark disabled:bg-gray-300",
                                    disabled: disabled,
                                    onClick: (function (param) {
                                        if (file !== undefined) {
                                          UploadFileToS3PresignedUrl.upload(undefined, /* AfterPay */2, Caml_option.valFromOption(file), (function (param) {
                                                  handleResetFile(undefined);
                                                  return Curry._1(onSuccess, undefined);
                                                }), (function (param) {
                                                  return Curry._1(onFailure, undefined);
                                                }), undefined);
                                          return ;
                                        } else {
                                          return setShowFileRequired(function (param) {
                                                      return /* Show */0;
                                                    });
                                        }
                                      })
                                  }, "업로드"),
                              props: {
                                "data-gtm": "btn-after-pay-xlsx-upload"
                              }
                            })))), React.createElement(Dialog.make, {
                  isShow: match$3[0],
                  children: React.createElement("p", {
                        className: "text-gray-500 text-center whitespace-pre-wrap"
                      }, "파일을 선택해주세요."),
                  onConfirm: (function (param) {
                      setShowFileRequired(function (param) {
                            return /* Hide */1;
                          });
                    })
                }), React.createElement(Dialog.make, {
                  isShow: match$1[0],
                  children: React.createElement("p", {
                        className: "text-gray-500 text-center whitespace-pre-wrap"
                      }, "파일을 삭제하시겠어요?"),
                  onCancel: (function (param) {
                      setShowDelete(function (param) {
                            return /* Hide */1;
                          });
                    }),
                  onConfirm: (function (param) {
                      handleResetFile(undefined);
                      setShowDelete(function (param) {
                            return /* Hide */1;
                          });
                    }),
                  textOnCancel: "닫기",
                  textOnConfirm: "삭제"
                }));
}

var make = Upload_After_Pay_Orders;

export {
  make ,
}
/* react Not a pure module */

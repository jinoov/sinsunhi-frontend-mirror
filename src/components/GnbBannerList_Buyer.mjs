// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as IconHamburger from "./svgs/IconHamburger.mjs";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as FeatureFlagWrapper from "../pages/buyer/pc/FeatureFlagWrapper.mjs";
import * as Product_FilterOption from "../pages/buyer/Product_FilterOption.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as GnbBannerListBuyerQuery_graphql from "../__generated__/GnbBannerListBuyerQuery_graphql.mjs";
import * as GnbBannerListBuyer_CategoryQuery_graphql from "../__generated__/GnbBannerListBuyer_CategoryQuery_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(GnbBannerListBuyerQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(GnbBannerListBuyerQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(GnbBannerListBuyerQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(GnbBannerListBuyerQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, GnbBannerListBuyerQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, GnbBannerListBuyerQuery_graphql.node, GnbBannerListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: GnbBannerListBuyerQuery_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, GnbBannerListBuyerQuery_graphql.node, GnbBannerListBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(GnbBannerListBuyerQuery_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(GnbBannerListBuyerQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(GnbBannerListBuyerQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(GnbBannerListBuyerQuery_graphql.node, GnbBannerListBuyerQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query = {
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function GnbBannerList_Buyer$OldItem(Props) {
  var id = Props.id;
  var title = Props.title;
  var landingUrl = Props.landingUrl;
  var isNewTabPc = Props.isNewTabPc;
  var target = isNewTabPc ? "_blank" : "_self";
  return React.createElement(Link, {
              href: landingUrl,
              children: React.createElement("a", {
                    className: "ml-4 cursor-pointer",
                    target: target
                  }, title),
              key: "gnb-banner-" + id + ""
            });
}

var OldItem = {
  make: GnbBannerList_Buyer$OldItem
};

function GnbBannerList_Buyer$Item(Props) {
  var title = Props.title;
  var landingUrl = Props.landingUrl;
  var selected = Props.selected;
  var newTabOpt = Props.newTab;
  var newTab = newTabOpt !== undefined ? newTabOpt : false;
  var match = React.useState(function () {
        return false;
      });
  var setLoaded = match[1];
  var target = newTab ? "_blank" : "_self";
  React.useEffect((function () {
          setLoaded(function (param) {
                return true;
              });
        }), []);
  var className = Cx.cx([
        "flex justify-center items-center p-[14px] mr-1 cursor-pointer hover:bg-[#1F20240A] active:bg-[#1F202414]  h-14 rounded-2xl",
        selected ? "font-bold hover:bg-[#1F20240A]" : "",
        match[0] ? "ease-in-out duration-200" : ""
      ]);
  return React.createElement(Link, {
              href: landingUrl,
              passHref: true,
              children: React.createElement("a", {
                    className: className,
                    target: target
                  }, title)
            });
}

var Item = {
  make: GnbBannerList_Buyer$Item
};

function use$1(fRef) {
  var data = ReactRelay.useFragment(GnbBannerListBuyer_CategoryQuery_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(GnbBannerListBuyer_CategoryQuery_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(GnbBannerListBuyer_CategoryQuery_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return GnbBannerListBuyer_CategoryQuery_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  use: use$1,
  useOpt: useOpt
};

function GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup$Item(Props) {
  var name = Props.name;
  var id = Props.id;
  var router = Router.useRouter();
  var match = React.useState(function () {
        return false;
      });
  var setLoaded = match[1];
  var onClick = function (param) {
    var match = Js_dict.get(router.query, "tab");
    var currentSection;
    if (match !== undefined) {
      switch (match) {
        case "matching" :
            currentSection = "MATCHING";
            break;
        case "quick" :
            currentSection = "DELIVERY";
            break;
        default:
          currentSection = "ALL";
      }
    } else {
      currentSection = "ALL";
    }
    var prim1_pathname = "/categories/" + id + "";
    var prim1_query = Caml_option.some(Js_dict.fromArray([
              [
                "sort",
                "POPULARITY_DESC"
              ],
              [
                "section",
                Product_FilterOption.Section.toUrlParameter(currentSection)
              ]
            ]));
    var prim1 = {
      pathname: prim1_pathname,
      query: prim1_query
    };
    router.push(prim1);
  };
  React.useEffect((function () {
          setLoaded(function (param) {
                return true;
              });
        }), []);
  var className = Cx.cx([
        "flex h-[58px] px-4 items-center text-[17px] py-3 hover:bg-[#1F20240A] first-of-type:rounded-t-2xl last-of-type:rounded-b-2xl  active:bg-[#e7e7e9] w-full",
        match[0] ? "ease-in-out duration-200" : ""
      ]);
  return React.createElement("button", {
              className: className,
              type: "button",
              onClick: onClick
            }, name);
}

var Item$1 = {
  make: GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup$Item
};

function GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup(Props) {
  var query = Props.query;
  var className = Props.className;
  var match = use$1(query);
  var isCsr = CustomHooks.useCsr(undefined);
  var style = Cx.cx([
        "w-[328px] rounded-2xl z-[1] light-level-1 absolute mt-4 bg-white border-[1px] border-[#F0F2F5] min-h-[240px] overflow-hidden hover:block hidden",
        className
      ]);
  if (isCsr) {
    return React.createElement("div", {
                className: style
              }, Belt_Array.map(match.mainDisplayCategories, (function (param) {
                      var id = param.id;
                      return React.createElement(GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup$Item, {
                                  name: param.name,
                                  id: id,
                                  key: id
                                });
                    })));
  } else {
    return null;
  }
}

var MainCategoryPopup = {
  Fragment: Fragment,
  Item: Item$1,
  make: GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup
};

function GnbBannerList_Buyer$GnbCategoryButton$Placeholder(Props) {
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "inline-flex relative items-center py-3 px-[14px] peer h-14 hover:bg-[#1F20240A] active:bg-[#e7e7e9] duration-200 ease-in-out rounded-2xl cursor-pointer hover:font-bold peer-hover:text-[#1F2024] peer-hover:font-bold"
                }, React.createElement(IconHamburger.make, {
                      width: "20px",
                      height: "20px",
                      className: "mr-2"
                    }), React.createElement("span", undefined, "카테고리")));
}

var Placeholder = {
  make: GnbBannerList_Buyer$GnbCategoryButton$Placeholder
};

function GnbBannerList_Buyer$GnbCategoryButton(Props) {
  var query = Props.query;
  var match = React.useState(function () {
        return false;
      });
  var setLoaded = match[1];
  React.useEffect((function () {
          setLoaded(function (param) {
                return true;
              });
        }), []);
  var className = Cx.cx([
        "inline-flex relative items-center py-3 px-[14px] peer h-14 hover:bg-[#1F20240A] active:bg-[#e7e7e9]  rounded-2xl cursor-pointer hover:font-bold peer-hover:text-[#1F2024] peer-hover:font-bold",
        match[0] ? "ease-in-out duration-200" : ""
      ]);
  return React.createElement("div", undefined, React.createElement("div", {
                  className: className
                }, React.createElement(IconHamburger.make, {
                      width: "20px",
                      height: "20px",
                      className: "mr-2"
                    }), React.createElement("span", undefined, "카테고리")), React.createElement("div", {
                  className: "w-[110px] absolute h-4 peer"
                }), React.createElement(GnbBannerList_Buyer$GnbCategoryButton$MainCategoryPopup, {
                  query: query,
                  className: "peer-hover:block hidden peer"
                }));
}

var GnbCategoryButton = {
  MainCategoryPopup: MainCategoryPopup,
  Placeholder: Placeholder,
  make: GnbBannerList_Buyer$GnbCategoryButton
};

function GnbBannerList_Buyer$Placeholder(Props) {
  var router = Router.useRouter();
  var match = router.pathname;
  var match$1 = Js_dict.get(router.query, "tab");
  var currentPage;
  if (match === "/" && match$1 !== undefined) {
    switch (match$1) {
      case "matching" :
          currentPage = "matching";
          break;
      case "quick" :
          currentPage = "quick";
          break;
      default:
        currentPage = undefined;
    }
  } else {
    currentPage = undefined;
  }
  return React.createElement("div", {
              className: "flex items-center text-lg text-gray-800 bg-white pl-[46px] py-2 w-full"
            }, React.createElement(GnbBannerList_Buyer$GnbCategoryButton$Placeholder, {}), React.createElement("div", {
                  className: "w-[1px] h-[18px] mx-[10px] bg-[#D9D9D9]"
                }), React.createElement(GnbBannerList_Buyer$Item, {
                  title: "즉시구매",
                  landingUrl: "/?tab=quick",
                  selected: false
                }), React.createElement(GnbBannerList_Buyer$Item, {
                  title: "견적요청",
                  landingUrl: "/?tab=matching",
                  selected: Caml_obj.equal(currentPage, "matching")
                }), React.createElement(GnbBannerList_Buyer$Item, {
                  title: "서비스 소개",
                  landingUrl: "https://farm-hub.imweb.me/691",
                  selected: false,
                  newTab: true
                }));
}

var Placeholder$1 = {
  make: GnbBannerList_Buyer$Placeholder
};

function GnbBannerList_Buyer(Props) {
  var router = Router.useRouter();
  var match = use(undefined, undefined, undefined, undefined, undefined);
  var oldUI = React.createElement("div", {
        className: "flex items-center py-3 text-lg text-gray-800 font-bold"
      }, Belt_Array.map(match.gnbBanners, (function (param) {
              var id = param.id;
              return React.createElement(GnbBannerList_Buyer$OldItem, {
                          id: id,
                          title: param.title,
                          landingUrl: param.landingUrl,
                          isNewTabPc: param.isNewTabPc,
                          key: id
                        });
            })));
  var match$1 = router.pathname;
  var match$2 = Js_dict.get(router.query, "tab");
  var currentPage;
  if (match$1 === "/" && match$2 !== undefined) {
    switch (match$2) {
      case "matching" :
          currentPage = "matching";
          break;
      case "quick" :
          currentPage = "quick";
          break;
      default:
        currentPage = undefined;
    }
  } else {
    currentPage = undefined;
  }
  return React.createElement(FeatureFlagWrapper.make, {
              children: React.createElement("div", {
                    className: "flex items-center text-lg text-gray-800 bg-white pl-[46px] py-2 w-full"
                  }, React.createElement(GnbBannerList_Buyer$GnbCategoryButton, {
                        query: match.fragmentRefs
                      }), React.createElement("div", {
                        className: "w-[1px] h-[18px] mx-[10px] bg-[#D9D9D9]"
                      }), React.createElement(GnbBannerList_Buyer$Item, {
                        title: "즉시구매",
                        landingUrl: "/?tab=quick",
                        selected: Caml_obj.equal(currentPage, "quick")
                      }), React.createElement(GnbBannerList_Buyer$Item, {
                        title: "견적요청",
                        landingUrl: "/?tab=matching",
                        selected: Caml_obj.equal(currentPage, "matching")
                      }), React.createElement(GnbBannerList_Buyer$Item, {
                        title: "서비스 소개",
                        landingUrl: "https://farm-hub.imweb.me/691",
                        selected: false,
                        newTab: true
                      })),
              fallback: oldUI,
              featureFlag: "HOME_UI_UX"
            });
}

var make = GnbBannerList_Buyer;

export {
  Query ,
  OldItem ,
  Item ,
  GnbCategoryButton ,
  Placeholder$1 as Placeholder,
  make ,
}
/* react Not a pure module */

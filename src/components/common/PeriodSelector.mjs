// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as ReactEvents from "../../utils/ReactEvents.mjs";
import AddDays from "date-fns/addDays";
import SubDays from "date-fns/subDays";
import AddMonths from "date-fns/addMonths";
import IsSameDay from "date-fns/isSameDay";
import SubMonths from "date-fns/subMonths";

var defaultStyle = "w-16 py-1 justify-center items-center border first:rounded-l-lg first:ml-0 last:rounded-r-lg bg-white focus:outline-none -ml-0.5";

function styleOnOff(on) {
  if (on) {
    return "border-green-gl text-green-gl z-[2]";
  } else {
    return "border-gray-button-gl text-black-gl";
  }
}

function getPeriod(from, to_) {
  if (IsSameDay(from, to_)) {
    return /* Today */0;
  } else if (IsSameDay(AddDays(from, 7), to_)) {
    return /* OneWeek */1;
  } else if (IsSameDay(AddMonths(from, 1), to_)) {
    return /* OneMonth */2;
  } else if (IsSameDay(AddMonths(from, 3), to_)) {
    return /* ThreeMonth */3;
  } else {
    return ;
  }
}

function PeriodSelector(Props) {
  var from = Props.from;
  var to_ = Props.to_;
  var onSelect = Props.onSelect;
  var period = getPeriod(from, to_);
  var handleOnSelect = function (s) {
    return function (param) {
      return ReactEvents.interceptingHandler((function (param) {
                    switch (s) {
                      case /* Today */0 :
                          return Curry._1(onSelect, to_);
                      case /* OneWeek */1 :
                          return Curry._1(onSelect, SubDays(to_, 7));
                      case /* OneMonth */2 :
                          return Curry._1(onSelect, SubMonths(to_, 1));
                      case /* ThreeMonth */3 :
                          return Curry._1(onSelect, SubMonths(to_, 3));
                      
                    }
                  }), param);
    };
  };
  var on = Caml_obj.equal(period, /* Today */0);
  var on$1 = Caml_obj.equal(period, /* OneWeek */1);
  var on$2 = Caml_obj.equal(period, /* OneMonth */2);
  var on$3 = Caml_obj.equal(period, /* ThreeMonth */3);
  return React.createElement(React.Fragment, undefined, React.createElement("button", {
                  className: Cx.cx([
                        defaultStyle,
                        on ? "border-green-gl text-green-gl z-[2]" : "border-gray-button-gl text-black-gl"
                      ]),
                  type: "button",
                  onClick: handleOnSelect(/* Today */0)
                }, "오늘"), React.createElement("button", {
                  className: Cx.cx([
                        defaultStyle,
                        on$1 ? "border-green-gl text-green-gl z-[2]" : "border-gray-button-gl text-black-gl"
                      ]),
                  type: "button",
                  onClick: handleOnSelect(/* OneWeek */1)
                }, "1주일"), React.createElement("button", {
                  className: Cx.cx([
                        defaultStyle,
                        on$2 ? "border-green-gl text-green-gl z-[2]" : "border-gray-button-gl text-black-gl"
                      ]),
                  type: "button",
                  onClick: handleOnSelect(/* OneMonth */2)
                }, "1개월"), React.createElement("button", {
                  className: Cx.cx([
                        defaultStyle,
                        on$3 ? "border-green-gl text-green-gl z-[2]" : "border-gray-button-gl text-black-gl"
                      ]),
                  type: "button",
                  onClick: handleOnSelect(/* ThreeMonth */3)
                }, "3개월"));
}

var make = PeriodSelector;

export {
  defaultStyle ,
  styleOnOff ,
  getPeriod ,
  make ,
}
/* react Not a pure module */

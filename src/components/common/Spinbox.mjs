// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactEvents from "../../utils/ReactEvents.mjs";
import * as IconSpinnerPlus from "../svgs/IconSpinnerPlus.mjs";
import * as IconSpinnerMinus from "../svgs/IconSpinnerMinus.mjs";

function setIntInRange(number, min, max) {
  if (Caml_obj.caml_lessthan(number, min)) {
    return min;
  } else if (Caml_obj.caml_greaterthan(number, max)) {
    return max;
  } else {
    return number;
  }
}

function Spinbox(Props) {
  var minOpt = Props.min;
  var maxOpt = Props.max;
  var value = Props.value;
  var setValue = Props.setValue;
  var min = minOpt !== undefined ? minOpt : 1;
  var max = maxOpt !== undefined ? maxOpt : 999;
  var increment = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  return setValue(function (prev) {
                              return prev + 1 | 0;
                            });
                }), param);
  };
  var decrement = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  return setValue(function (prev) {
                              return prev - 1 | 0;
                            });
                }), param);
  };
  var onChange = function (e) {
    var v = e.target.value;
    var parsed = v === "" ? min : Belt_Option.map(Belt_Int.fromString(v.replace(/[^0-9]/g, "")), (function (v$p) {
              return setIntInRange(v$p, min, max);
            }));
    Belt_Option.map(parsed, (function (v$p) {
            return setValue(function (param) {
                        return v$p;
                      });
          }));
    
  };
  return React.createElement("div", {
              className: "w-[7.5rem] h-10 flex border rounded-xl divide-x"
            }, React.createElement("button", {
                  className: "w-9 flex items-center justify-center",
                  disabled: value === min,
                  onClick: decrement
                }, React.createElement(IconSpinnerMinus.make, {
                      fill: value === min ? "#cccccc" : "#262626"
                    })), React.createElement("div", {
                  className: "flex flex-1 items-center justify-center"
                }, React.createElement("input", {
                      className: "w-[46px] text-center focus:outline-none",
                      value: String(value),
                      onChange: onChange
                    })), React.createElement("button", {
                  className: "w-9 flex items-center justify-center",
                  disabled: value === max,
                  onClick: increment
                }, React.createElement(IconSpinnerPlus.make, {
                      fill: value === max ? "#cccccc" : "#262626"
                    })));
}

var make = Spinbox;

export {
  setIntInRange ,
  make ,
  
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as FormulaComponents from "@greenlabs/formula-components";

function setIntInRange(number, min, max) {
  if (Caml_obj.lessthan(number, min)) {
    return min;
  } else if (Caml_obj.greaterthan(number, max)) {
    return max;
  } else {
    return number;
  }
}

function Spinbox(Props) {
  var minOpt = Props.min;
  var maxOpt = Props.max;
  var value = Props.value;
  var onChange = Props.onChange;
  var onOverMaxQuantityOpt = Props.onOverMaxQuantity;
  var min = minOpt !== undefined ? minOpt : 1;
  var max = maxOpt !== undefined ? maxOpt : 999;
  var onOverMaxQuantity = onOverMaxQuantityOpt !== undefined ? onOverMaxQuantityOpt : (function (param) {
        
      });
  var onChangeFromTyping = function (e) {
    var inputValue = e.target.value;
    var parseValue = function (v) {
      if (v === "") {
        return String(min);
      } else {
        return v;
      }
    };
    var validateValueForNumber = function (v) {
      return v.replace(/[^0-9]/g, "");
    };
    var nextValue = Belt_Int.fromString(validateValueForNumber(parseValue(inputValue)));
    var finalValue = Belt_Option.map(nextValue, (function (v) {
            return setIntInRange(v, min, max);
          }));
    Belt_Option.map(nextValue, (function (x) {
            if (x > max) {
              return Curry._1(onOverMaxQuantity, undefined);
            }
            
          }));
    Belt_Option.map(finalValue, onChange);
  };
  return React.createElement("div", {
              className: "w-[7.5rem] h-10 flex border rounded-xl divide-x"
            }, React.createElement("button", {
                  className: "w-9 flex items-center justify-center",
                  disabled: value === min,
                  onClick: (function (param) {
                      Curry._1(onChange, value - 1 | 0);
                    })
                }, React.createElement("div", undefined, React.createElement(FormulaComponents.MinusLineRegular, {
                          size: "lg",
                          color: "gray-90"
                        }))), React.createElement("div", {
                  className: "flex flex-1 items-center justify-center"
                }, React.createElement("input", {
                      className: "w-[46px] text-center focus:outline-none",
                      value: String(value),
                      onChange: onChangeFromTyping
                    })), React.createElement("button", {
                  className: "w-9 flex items-center justify-center",
                  onClick: (function (param) {
                      var nextValue = value + 1 | 0;
                      if (nextValue > max) {
                        return Curry._1(onOverMaxQuantity, undefined);
                      } else {
                        return Curry._1(onChange, nextValue);
                      }
                    })
                }, React.createElement("div", undefined, React.createElement(FormulaComponents.PlusLineRegular, {
                          size: "lg",
                          color: "gray-90"
                        }))));
}

var maxQuantity = 999;

var make = Spinbox;

export {
  setIntInRange ,
  maxQuantity ,
  make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function InputWithAdornment(Props) {
  var name = Props.name;
  var type_Opt = Props.type_;
  var value = Props.value;
  var onChange = Props.onChange;
  var adornmentLocationOpt = Props.adornmentLocation;
  var textLocationOpt = Props.textLocation;
  var adornment = Props.adornment;
  var placeholder = Props.placeholder;
  var erroredOpt = Props.errored;
  var errorElement = Props.errorElement;
  var helperTextOpt = Props.helperText;
  var classNameOpt = Props.className;
  var type_ = type_Opt !== undefined ? type_Opt : "string";
  var adornmentLocation = adornmentLocationOpt !== undefined ? adornmentLocationOpt : /* End */1;
  var textLocation = textLocationOpt !== undefined ? textLocationOpt : /* End */1;
  var errored = erroredOpt !== undefined ? erroredOpt : false;
  var helperText = helperTextOpt !== undefined ? helperTextOpt : "";
  var className = classNameOpt !== undefined ? classNameOpt : "";
  var match = React.useState(function () {
        return false;
      });
  var setBlur = match[1];
  var notice = errored && match[0] && value !== "";
  var outerCommonClassName = Cx.cx([
        "flex w-full border rounded-lg items-center p-2 focus-within:ring-1-gl focus-within:border-border-active focus-within:ring-opacity-100",
        className
      ]);
  var outerClassName = Cx.cx([
        notice ? (
            adornmentLocation ? "flex-row-reverse border-notice" : "border-notice"
          ) : (
            adornmentLocation ? "flex-row-reverse border-border-default-L1" : "border-border-default-L1"
          ),
        outerCommonClassName
      ]);
  var inputClassName = textLocation ? "border-0 focus:outline-none text-right mr-1 w-full remove-spin-button" : "border-0 focus:outline-none mr-1 w-full remove-spin-button";
  return React.createElement(React.Fragment, undefined, React.createElement("label", {
                  className: outerClassName
                }, adornment, React.createElement("input", {
                      className: inputClassName,
                      name: name,
                      placeholder: placeholder,
                      type: type_,
                      value: value,
                      onFocus: (function (param) {
                          setBlur(function (param) {
                                return false;
                              });
                        }),
                      onBlur: (function (param) {
                          setBlur(function (param) {
                                return true;
                              });
                        }),
                      onChange: onChange
                    })), notice ? React.createElement("div", {
                    className: "flex items-center mt-1 h-5 text-notice"
                  }, Belt_Option.getWithDefault(errorElement, null)) : React.createElement("div", {
                    className: inputClassName
                  }, helperText));
}

var make = InputWithAdornment;

export {
  make ,
}
/* react Not a pure module */

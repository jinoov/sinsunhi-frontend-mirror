// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function InputWithAdornment(props) {
  var className = props.className;
  var helperText = props.helperText;
  var errored = props.errored;
  var textLocation = props.textLocation;
  var adornmentLocation = props.adornmentLocation;
  var value = props.value;
  var type_ = props.type_;
  var className$1 = className !== undefined ? className : "";
  var helperText$1 = helperText !== undefined ? helperText : "";
  var errored$1 = errored !== undefined ? errored : false;
  var textLocation$1 = textLocation !== undefined ? textLocation : /* End */1;
  var adornmentLocation$1 = adornmentLocation !== undefined ? adornmentLocation : /* End */1;
  var type_$1 = type_ !== undefined ? type_ : "string";
  var match = React.useState(function () {
        return false;
      });
  var setBlur = match[1];
  var notice = errored$1 && match[0] && value !== "";
  var outerCommonClassName = Cx.cx([
        "flex w-full border rounded-lg items-center p-2 focus-within:ring-1-gl focus-within:border-border-active focus-within:ring-opacity-100",
        className$1
      ]);
  var outerClassName = Cx.cx([
        notice ? (
            adornmentLocation$1 ? "flex-row-reverse border-notice" : "border-notice"
          ) : (
            adornmentLocation$1 ? "flex-row-reverse border-border-default-L1" : "border-border-default-L1"
          ),
        outerCommonClassName
      ]);
  var inputClassName = textLocation$1 ? "border-0 focus:outline-none text-right mr-1 w-full remove-spin-button" : "border-0 focus:outline-none mr-1 w-full remove-spin-button";
  return React.createElement(React.Fragment, undefined, React.createElement("label", {
                  className: outerClassName
                }, props.adornment, React.createElement("input", {
                      className: inputClassName,
                      name: props.name,
                      placeholder: props.placeholder,
                      type: type_$1,
                      value: value,
                      onFocus: (function (param) {
                          setBlur(function (param) {
                                return false;
                              });
                        }),
                      onBlur: (function (param) {
                          setBlur(function (param) {
                                return true;
                              });
                        }),
                      onChange: props.onChange
                    })), notice ? React.createElement("div", {
                    className: "flex items-center mt-1 h-5 text-notice"
                  }, Belt_Option.getWithDefault(props.errorElement, null)) : React.createElement("div", {
                    className: inputClassName
                  }, helperText$1));
}

var make = InputWithAdornment;

export {
  make ,
}
/* react Not a pure module */

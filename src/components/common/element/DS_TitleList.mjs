// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cn from "rescript-classnames/src/Cn.mjs";
import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function DS_TitleList$Left$Title2Subtitle1(Props) {
  var title1 = Props.title1;
  var title2 = Props.title2;
  var titleStyle = Props.titleStyle;
  var subTitle = Props.subTitle;
  var subTitleStyle = Props.subTitleStyle;
  return React.createElement("div", undefined, React.createElement("div", {
                  className: Belt_Option.mapWithDefault(titleStyle, "flex justify-start items-center space-x-2 leading-7 font-bold", (function (style) {
                          return Cn.make([
                                      style,
                                      "flex justify-start items-center space-x-2 leading-7"
                                    ]);
                        }))
                }, React.createElement("span", undefined, title1), React.createElement("div", {
                      className: "border-r-[2px] border-gray-400 h-4"
                    }), React.createElement("span", undefined, title2)), Belt_Option.mapWithDefault(subTitle, null, (function (subTitle$p) {
                    return React.createElement("p", {
                                className: Belt_Option.mapWithDefault(subTitleStyle, "mt-3 text-gray-500 text-sm leading-4 whitespace-pre-line", (function (style) {
                                        return Cn.make([
                                                    style,
                                                    "mt-3"
                                                  ]);
                                      }))
                              }, subTitle$p);
                  })));
}

var Title2Subtitle1 = {
  make: DS_TitleList$Left$Title2Subtitle1
};

function DS_TitleList$Left$Title3Subtitle1(Props) {
  var title1 = Props.title1;
  var title2 = Props.title2;
  var title3 = Props.title3;
  var titleStyle = Props.titleStyle;
  var subTitle = Props.subTitle;
  var subTitleStyle = Props.subTitleStyle;
  return React.createElement("div", undefined, React.createElement("div", {
                  className: Belt_Option.mapWithDefault(titleStyle, "flex justify-start items-center space-x-2 leading-7 font-bold", (function (style) {
                          return Cn.make([
                                      style,
                                      "flex justify-start items-center space-x-2 leading-7"
                                    ]);
                        }))
                }, React.createElement("span", undefined, title1), Belt_Option.mapWithDefault(title2, null, (function (title2$p) {
                        return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                        className: "border-r-[2px] border-gray-400 h-4"
                                      }), React.createElement("span", undefined, title2$p));
                      })), Belt_Option.mapWithDefault(title3, null, (function (title3$p) {
                        return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                        className: "border-r-[2px] border-gray-400 h-4"
                                      }), React.createElement("span", undefined, title3$p));
                      }))), Belt_Option.mapWithDefault(subTitle, null, (function (subTitle$p) {
                    return React.createElement("p", {
                                className: Belt_Option.mapWithDefault(subTitleStyle, "mt-3 text-gray-500 text-sm leading-4 whitespace-pre-line", (function (style) {
                                        return Cn.make([
                                                    style,
                                                    "mt-3"
                                                  ]);
                                      }))
                              }, subTitle$p);
                  })));
}

var Title3Subtitle1 = {
  make: DS_TitleList$Left$Title3Subtitle1
};

function DS_TitleList$Left$TitleSubtitle1(Props) {
  var title1 = Props.title1;
  var title2 = Props.title2;
  var titleStyle = Props.titleStyle;
  var subTitle = Props.subTitle;
  var subTitleStyle = Props.subTitleStyle;
  return React.createElement("div", undefined, React.createElement("div", {
                  className: Belt_Option.mapWithDefault(titleStyle, "flex flex-col justify-start items-start text-xl font-bold text-text-L1 leading-8 tracking-tight", (function (style) {
                          return Cn.make([
                                      style,
                                      "flex flex-col justify-start items-start tracking-tight"
                                    ]);
                        }))
                }, React.createElement("span", {
                      className: "truncate"
                    }, title1), Belt_Option.mapWithDefault(title2, null, (function (x) {
                        return React.createElement("span", undefined, x);
                      }))), Belt_Option.mapWithDefault(subTitle, null, (function (x) {
                    return React.createElement("p", {
                                className: Belt_Option.mapWithDefault(subTitleStyle, "mt-1 text-text-L2 text-sm leading-5 tracking-tight whitespace-pre-line", (function (style) {
                                        return Cn.make([
                                                    style,
                                                    "mt-1 tracking-tight"
                                                  ]);
                                      }))
                              }, x);
                  })));
}

var TitleSubtitle1 = {
  make: DS_TitleList$Left$TitleSubtitle1
};

var Left = {
  Title2Subtitle1: Title2Subtitle1,
  Title3Subtitle1: Title3Subtitle1,
  TitleSubtitle1: TitleSubtitle1
};

function DS_TitleList$Common$IconText1$Root(Props) {
  var children = Props.children;
  var className = Props.className;
  var defaultStyle = "flex justify-center items-center space-x-1 cursor-pointer";
  return React.createElement("div", {
              className: Belt_Option.mapWithDefault(className, defaultStyle, (function (className$p) {
                      return Cx.cx([
                                  defaultStyle,
                                  className$p
                                ]);
                    }))
            }, children);
}

var Root = {
  make: DS_TitleList$Common$IconText1$Root
};

function DS_TitleList$Common$IconText1$Icon(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex justify-start items-center"
            }, children);
}

var Icon = {
  make: DS_TitleList$Common$IconText1$Icon
};

function DS_TitleList$Common$IconText1$Text(Props) {
  var children = Props.children;
  var className = Props.className;
  var defaultStyle = "truncate";
  return React.createElement("span", {
              className: Belt_Option.mapWithDefault(className, defaultStyle, (function (className$p) {
                      return Cx.cx([
                                  defaultStyle,
                                  className$p
                                ]);
                    }))
            }, children);
}

var $$Text = {
  make: DS_TitleList$Common$IconText1$Text
};

var IconText1 = {
  Root: Root,
  Icon: Icon,
  $$Text: $$Text
};

function DS_TitleList$Common$TextIcon1$Root(Props) {
  var children = Props.children;
  var className = Props.className;
  var onClick = Props.onClick;
  var defaultStyle = "flex justify-start items-center space-x-1 cursor-pointer";
  var tmp = {
    className: Belt_Option.mapWithDefault(className, defaultStyle, (function (className$p) {
            return Cx.cx([
                        defaultStyle,
                        className$p
                      ]);
          }))
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement("div", tmp, children);
}

var Root$1 = {
  make: DS_TitleList$Common$TextIcon1$Root
};

function DS_TitleList$Common$TextIcon1$Icon(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "flex justify-start items-center"
            }, children);
}

var Icon$1 = {
  make: DS_TitleList$Common$TextIcon1$Icon
};

function DS_TitleList$Common$TextIcon1$Text(Props) {
  var children = Props.children;
  var className = Props.className;
  var defaultStyle = "pl-2";
  return React.createElement("span", {
              className: Belt_Option.mapWithDefault(className, defaultStyle, (function (className$p) {
                      return Cx.cx([
                                  defaultStyle,
                                  className$p
                                ]);
                    }))
            }, children);
}

var $$Text$1 = {
  make: DS_TitleList$Common$TextIcon1$Text
};

function DS_TitleList$Common$TextIcon1(Props) {
  var children = Props.children;
  var label = Props.label;
  var onClick = Props.onClick;
  var fontStyleOpt = Props.fontStyle;
  var fontStyle = fontStyleOpt !== undefined ? fontStyleOpt : "";
  var tmp = {
    className: "flex justify-start items-center space-x-1 cursor-pointer"
  };
  if (onClick !== undefined) {
    tmp.onClick = Caml_option.valFromOption(onClick);
  }
  return React.createElement("div", tmp, React.createElement("span", {
                  className: Cn.make([
                        fontStyle,
                        "truncate"
                      ])
                }, label), children);
}

var TextIcon1 = {
  Root: Root$1,
  Icon: Icon$1,
  $$Text: $$Text$1,
  make: DS_TitleList$Common$TextIcon1
};

var Common = {
  IconText1: IconText1,
  TextIcon1: TextIcon1
};

export {
  Left ,
  Common ,
  
}
/* react Not a pure module */

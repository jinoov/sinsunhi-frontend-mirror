// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function DS_Input$InputText1(Props) {
  var type_ = Props.type_;
  var className = Props.className;
  var placeholder = Props.placeholder;
  var value = Props.value;
  var onChange = Props.onChange;
  var disabled = Props.disabled;
  var autoFocus = Props.autoFocus;
  var inputMode = Props.inputMode;
  var maxLength = Props.maxLength;
  var onFocus = Props.onFocus;
  var onBlur = Props.onBlur;
  var tmp = {
    className: Belt_Option.mapWithDefault(className, "w-full outline-none text-xl placeholder:text-gray-400 pl-1 disabled:bg-white leading-8", (function (className$p) {
            return Cx.cx([
                        "w-full outline-none text-xl placeholder:text-gray-400 pl-1 disabled:bg-white leading-8",
                        className$p
                      ]);
          })),
    type: type_
  };
  if (autoFocus !== undefined) {
    tmp.autoFocus = Caml_option.valFromOption(autoFocus);
  }
  if (disabled !== undefined) {
    tmp.disabled = Caml_option.valFromOption(disabled);
  }
  if (inputMode !== undefined) {
    tmp.inputMode = Caml_option.valFromOption(inputMode);
  }
  if (maxLength !== undefined) {
    tmp.maxLength = Caml_option.valFromOption(maxLength);
  }
  if (placeholder !== undefined) {
    tmp.placeholder = Caml_option.valFromOption(placeholder);
  }
  if (value !== undefined) {
    tmp.value = Caml_option.valFromOption(value);
  }
  if (onFocus !== undefined) {
    tmp.onFocus = Caml_option.valFromOption(onFocus);
  }
  if (onBlur !== undefined) {
    tmp.onBlur = Caml_option.valFromOption(onBlur);
  }
  if (onChange !== undefined) {
    tmp.onChange = Caml_option.valFromOption(onChange);
  }
  return React.createElement("input", tmp);
}

var InputText1 = {
  make: DS_Input$InputText1
};

export {
  InputText1 ,
  
}
/* react Not a pure module */

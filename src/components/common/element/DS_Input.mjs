// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function DS_Input$InputText1(props) {
  var tmp = {
    className: Belt_Option.mapWithDefault(props.className, "w-full outline-none text-xl placeholder:text-gray-400 disabled:bg-white leading-8", (function (className$p) {
            return Cx.cx([
                        "w-full outline-none text-xl placeholder:text-gray-400 disabled:bg-white leading-8",
                        className$p
                      ]);
          })),
    type: props.type_
  };
  if (props.autoFocus !== undefined) {
    tmp.autoFocus = Caml_option.valFromOption(props.autoFocus);
  }
  if (props.disabled !== undefined) {
    tmp.disabled = Caml_option.valFromOption(props.disabled);
  }
  if (props.inputMode !== undefined) {
    tmp.inputMode = Caml_option.valFromOption(props.inputMode);
  }
  if (props.maxLength !== undefined) {
    tmp.maxLength = Caml_option.valFromOption(props.maxLength);
  }
  if (props.placeholder !== undefined) {
    tmp.placeholder = Caml_option.valFromOption(props.placeholder);
  }
  if (props.value !== undefined) {
    tmp.value = Caml_option.valFromOption(props.value);
  }
  if (props.onFocus !== undefined) {
    tmp.onFocus = Caml_option.valFromOption(props.onFocus);
  }
  if (props.onBlur !== undefined) {
    tmp.onBlur = Caml_option.valFromOption(props.onBlur);
  }
  if (props.onChange !== undefined) {
    tmp.onChange = Caml_option.valFromOption(props.onChange);
  }
  return React.createElement("input", tmp);
}

var InputText1 = {
  make: DS_Input$InputText1
};

export {
  InputText1 ,
}
/* react Not a pure module */

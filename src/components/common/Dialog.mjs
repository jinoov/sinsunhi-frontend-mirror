// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactDialog from "@radix-ui/react-dialog";

function Dialog$ButtonBox(props) {
  var confirmTextColor = props.confirmTextColor;
  var confirmBg = props.confirmBg;
  var kindOfConfirm = props.kindOfConfirm;
  var textOnConfirm = props.textOnConfirm;
  var onConfirm = props.onConfirm;
  var onCancel = props.onCancel;
  var tmp;
  var exit = 0;
  var f;
  if (onConfirm !== undefined && textOnConfirm !== "") {
    f = onConfirm;
    exit = 1;
  } else {
    tmp = null;
  }
  if (exit === 1) {
    var tmp$1;
    var exit$1 = 0;
    if (confirmBg !== undefined && confirmTextColor !== undefined) {
      tmp$1 = {
        backgroundColor: confirmBg,
        color: confirmTextColor
      };
    } else {
      exit$1 = 2;
    }
    if (exit$1 === 2) {
      tmp$1 = {};
    }
    tmp = React.createElement("button", {
          className: kindOfConfirm !== undefined ? (
              kindOfConfirm ? Cx.cx([
                      "flex-1 justify-center py-3",
                      "btn-level4"
                    ]) : Cx.cx([
                      "flex-1 justify-center py-3",
                      "btn-level1"
                    ])
            ) : "flex-1 justify-center rounded-xl border border-transparent shadow-sm py-3 bg-green-gl hover:bg-green-gl-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-gl focus:ring-opacity-100 text-white font-bold",
          style: tmp$1,
          type: "button",
          onClick: f
        }, Belt_Option.getWithDefault(textOnConfirm, "확인"));
  }
  return React.createElement("div", {
              className: "flex flex-row p-7"
            }, onCancel !== undefined ? React.createElement("button", {
                    className: Cx.cx([
                          "flex-1 justify-center py-3 mr-2",
                          "btn-level6"
                        ]),
                    type: "button",
                    onClick: onCancel
                  }, Belt_Option.getWithDefault(props.textOnCancel, "취소")) : null, tmp);
}

var ButtonBox = {
  make: Dialog$ButtonBox
};

function Dialog(props) {
  var boxStyle = props.boxStyle;
  var _open = props.isShow ? false : true;
  var boxBase = "dialog-content";
  var boxClassName = boxStyle !== undefined ? Cx.cx([
          boxBase,
          boxStyle
        ]) : boxBase;
  return React.createElement(ReactDialog.Root, {
              children: React.createElement(ReactDialog.Portal, {
                    children: null
                  }, React.createElement(ReactDialog.Overlay, {
                        className: "dialog-overlay"
                      }), React.createElement(ReactDialog.Content, {
                        children: null,
                        className: boxClassName
                      }, React.createElement("div", {
                            className: "pt-10 px-7"
                          }, props.children), React.createElement(Dialog$ButtonBox, {
                            onCancel: props.onCancel,
                            onConfirm: props.onConfirm,
                            textOnCancel: props.textOnCancel,
                            textOnConfirm: props.textOnConfirm,
                            kindOfConfirm: props.kindOfConfirm,
                            confirmBg: props.confirmBg,
                            confirmTextColor: props.confirmTextColor
                          }))),
              _open: _open
            });
}

var make = Dialog;

export {
  ButtonBox ,
  make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactAccordion from "@radix-ui/react-accordion";

var make = React.forwardRef(function (props, ref) {
      var defaultStyle = "";
      return React.createElement(ReactAccordion.Root, {
                  asChild: props.asChild,
                  children: props.children,
                  _type: props._type,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  value: props.value,
                  onValueChange: props.onValueChange,
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        }))
                });
    });

var RootMultiple = {
  make: make
};

var make$1 = React.forwardRef(function (props, ref) {
      var defaultStyle = "";
      return React.createElement(ReactAccordion.Root, {
                  asChild: props.asChild,
                  children: props.children,
                  _type: props._type,
                  collapsible: props.collapsible,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  value: props.value,
                  onValueChange: props.onValueChange,
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        }))
                });
    });

var RootSingle = {
  make: make$1
};

var make$2 = React.forwardRef(function (props, ref) {
      var defaultStyle = "focus:outline-none accordian-trigger";
      return React.createElement(ReactAccordion.Trigger, {
                  children: props.children,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  asChild: props.asChild,
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        }))
                });
    });

var Trigger = {
  make: make$2
};

var make$3 = React.forwardRef(function (props, ref) {
      var defaultStyle = "";
      return React.createElement(ReactAccordion.Item, {
                  children: props.children,
                  value: props.value,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  asChild: props.asChild,
                  disabled: props.disabled,
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        }))
                });
    });

var Item = {
  make: make$3
};

var make$4 = React.forwardRef(function (props, ref) {
      var defaultStyle = "";
      return React.createElement(ReactAccordion.Header, {
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        })),
                  children: props.children,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  asChild: props.asChild
                });
    });

var Header = {
  make: make$4
};

var make$5 = React.forwardRef(function (props, ref) {
      var defaultStyle = "accordian-content";
      return React.createElement(ReactAccordion.Content, {
                  children: props.children,
                  className: Belt_Option.mapWithDefault(props.className, defaultStyle, (function (className$p) {
                          return Cx.cx([
                                      defaultStyle,
                                      className$p
                                    ]);
                        })),
                  asChild: props.asChild,
                  forceMount: props.forceMount,
                  ref: Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
                          return prim;
                        }))
                });
    });

var Content = {
  make: make$5
};

export {
  RootMultiple ,
  RootSingle ,
  Trigger ,
  Item ,
  Header ,
  Content ,
}
/* make Not a pure module */

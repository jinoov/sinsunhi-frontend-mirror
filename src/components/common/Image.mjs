// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "@rescript/react/src/React.mjs";
import * as React$1 from "react";
import * as ReactUtil from "../../utils/ReactUtil.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import EmptyGraySquareLgXPng from "../../../public/images/empty-gray-square-lg-3x.png";
import EmptyGraySquareSmXPng from "../../../public/images/empty-gray-square-sm-3x.png";

var placeholderSm = EmptyGraySquareSmXPng;

var placeholderLg = EmptyGraySquareLgXPng;

function getSrc(t) {
  if (t) {
    return placeholderLg;
  } else {
    return placeholderSm;
  }
}

var Placeholder = {
  getSrc: getSrc
};

function encode(t) {
  if (t) {
    return "lazy";
  } else {
    return "eager";
  }
}

var Loading = {
  encode: encode
};

function Image$MakeImage(props) {
  var loading = props.loading;
  var placeholder = props.placeholder;
  var src = props.src;
  var loading$1 = loading !== undefined ? loading : /* Eager */0;
  var placeholder$1 = placeholder !== undefined ? placeholder : /* Sm */0;
  var src$1 = src !== undefined ? src : placeholderSm;
  var match = React$1.useState(function () {
        return src$1;
      });
  var setSource = match[1];
  var tmp = {
    src: match[0],
    onError: (function (param) {
        setSource(function (param) {
              if (placeholder$1) {
                return placeholderLg;
              } else {
                return placeholderSm;
              }
            });
      }),
    loading: loading$1 ? "lazy" : "eager"
  };
  if (props.className !== undefined) {
    tmp.className = Caml_option.valFromOption(props.className);
  }
  if (props.alt !== undefined) {
    tmp.alt = Caml_option.valFromOption(props.alt);
  }
  var props$1 = tmp;
  return React$1.createElement(ReactUtil.SpreadProps.make, {
              children: React$1.createElement("img", undefined),
              props: props$1
            });
}

var MakeImage = {
  defaultImage: placeholderSm,
  make: Image$MakeImage
};

function $$Image(props) {
  var src = props.src;
  return React.createElementWithKey(Image$MakeImage, {
              src: src,
              placeholder: props.placeholder,
              loading: props.loading,
              alt: props.alt,
              className: props.className
            }, Belt_Option.getWithDefault(src, ""));
}

var make = $$Image;

export {
  placeholderSm ,
  placeholderLg ,
  Placeholder ,
  Loading ,
  MakeImage ,
  make ,
}
/* placeholderSm Not a pure module */

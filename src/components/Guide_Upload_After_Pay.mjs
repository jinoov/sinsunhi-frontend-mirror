// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as React from "react";
import * as IconArrowSelect from "./svgs/IconArrowSelect.mjs";
import * as ReactAccordion from "@radix-ui/react-accordion";

function Guide_Upload_After_Pay(Props) {
  return React.createElement("div", {
              className: "container max-w-lg mx-auto sm:mt-4 sm:shadow-gl mb-10"
            }, React.createElement(ReactAccordion.Root, {
                  children: null,
                  type: "multiple"
                }, React.createElement(ReactAccordion.Item, {
                      children: null,
                      value: "guide-1"
                    }, React.createElement(ReactAccordion.Header, {
                          children: React.createElement(ReactAccordion.Trigger, {
                                children: React.createElement("div", {
                                      className: "flex justify-between py-6 px-7 bg-white border-b border-gray-100"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "주문서 업로드 사용설명서"), React.createElement(IconArrowSelect.make, {
                                          height: "24",
                                          width: "24",
                                          fill: "#121212",
                                          className: "accordian-icon"
                                        })),
                                className: "w-full focus:outline-none accordian-trigger"
                              })
                        }), React.createElement(ReactAccordion.Content, {
                          children: React.createElement("section", {
                                className: "p-7 text-sm bg-gray-gl"
                              }, React.createElement("h4", {
                                    className: "text-gray-500 font-semibold"
                                  }, "주문서 업로드 사용설명서"), React.createElement("div", {
                                    className: "flex mt-5"
                                  }, React.createElement("a", {
                                        className: "flex-1",
                                        href: "/buyer/products/advanced-search",
                                        target: "_blank"
                                      }, React.createElement("span", {
                                            className: "block text-center p-3 rounded-xl border border-green-gl text-base font-bold text-green-gl mr-2 bg-white"
                                          }, "운영 코드 확인")), React.createElement("a", {
                                        className: "flex-1",
                                        href: Env.buyerUploadGuideUri,
                                        target: "_blank"
                                      }, React.createElement("span", {
                                            className: "block text-center p-3 rounded-xl border border-green-gl text-base font-bold text-green-gl bg-white"
                                          }, "발주 메뉴얼 보기"))), React.createElement("div", {
                                    className: "leading-6 mt-4"
                                  }, React.createElement("h5", {
                                        className: "font-bold"
                                      }, "1. 주문서 양식"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, React.createElement("h6", undefined, "• 방식"), React.createElement("ul", {
                                                className: "ml-3"
                                              }, React.createElement("li", undefined, React.createElement("span", {
                                                        className: "font-bold"
                                                      }, "- 상품 및 옵션 코드 번호 부여"), " : 상품 페이지 확인 가능 / 미 작성시 출고 불가")))), React.createElement("h5", {
                                        className: "font-bold mt-4"
                                      }, "2. 주문서 마감시간"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, React.createElement("span", {
                                                className: "font-bold"
                                              }, "• 오전 10시 이전 주문서 전달 시 당일 출고"), " - 당일 출고 주문건에 한해 주문서 수정 및 취소건 반영(운송장 번호 발생시 수정 및 취소 불가)"), React.createElement("li", undefined, React.createElement("span", {
                                                className: "font-bold"
                                              }, "• 오전 10시 이후 주문서 전달 시 익일 출고"), " - 익일 출고 주문건에 한해 이메일 확인은 하지 않으며, 별도의 수정 및 취소건 발생시 익일 10시 이전수정 완료된 주문건으로 \"재 전달\" 요청"), React.createElement("li", undefined, React.createElement("span", undefined, "• 일부 상품의 주문서 마감 시간 상이"), React.createElement("ul", {
                                                className: "ml-3"
                                              }, React.createElement("li", undefined, "- 일부 상품에 한해 오전 9시 이전 주문서 전달 시 당일 출고"), React.createElement("li", undefined, "- 오전 9시 이후 주문서 전달 시 익일 출고"), React.createElement("li", undefined, "- 주문서 마감 시간은 신선하이 상세페이지 또는 상단 상품 페이지(상품 및 옵션 코드번호 안내 상품 페이지) 내에서 확인 가능합니다.")))), React.createElement("h5", {
                                        className: "font-bold mt-4"
                                      }, "3. 안내 및 문의사항"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, "• 상품 및 옵션 코드 번호 ", React.createElement("span", {
                                                className: "text-red-500"
                                              }, "작성 오류로 인한 출고 오류의 건 책임 불가")), React.createElement("li", undefined, "• 신선하이는 바이어분들의 작성 주문서를 내부 시스템에 업로드 하는 형식으로 운영됩니다. 위에 안내된 상품 페이지를 확인하시어 신선하이의 ", React.createElement("span", {
                                                className: "font-bold"
                                              }, "상품 및 옵션 코드 번호는 바이어분들께서 입력 해주셔야합니다."), " 상품 및 옵션 코드 번호 작성 오류로 인한 오 배송건, 배송 지연등은 신선하이에서 책임을 지지 않습니다."), React.createElement("li", undefined, "• 이점 유의 하시어 주문서 작성 부탁드립니다."), React.createElement("li", {
                                            className: "mt-4"
                                          }, "• 해당 발주서는 바이어분들께서 소비자들에게 \"판매완료\"한 상품의 발주서입니다. 샘플 구매 또한 발주서에 기입해 업로드해주셔야 합니다.")))),
                          className: "accordian-content"
                        })), React.createElement(ReactAccordion.Item, {
                      children: null,
                      value: "guide-2"
                    }, React.createElement(ReactAccordion.Header, {
                          children: React.createElement(ReactAccordion.Trigger, {
                                children: React.createElement("div", {
                                      className: "flex justify-between py-6 px-7 bg-white"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "주문취소 방법"), React.createElement(IconArrowSelect.make, {
                                          height: "24",
                                          width: "24",
                                          fill: "#121212",
                                          className: "accordian-icon"
                                        })),
                                className: "w-full focus:outline-none accordian-trigger"
                              })
                        }), React.createElement(ReactAccordion.Content, {
                          children: React.createElement("section", {
                                className: "p-7 text-sm bg-gray-gl whitespace-pre"
                              }, "신규주문건만  주문내역 조회 페이지를 통해 취소가 가능합니다.\n\n배송준비중 주문건 취소가 필요할 경우\n취소 요청양식에 맞게 작성해\n", React.createElement("span", {
                                    className: "font-bold"
                                  }, "farmhub@greenlabs.co.kr"), "로 접수해주세요.\n(농가 확인 후 취소가 불가능 할 수도 있습니다.)\n\n*메일 제목 : [취소요청건] 바이어명_날짜  ", React.createElement("div", undefined, React.createElement("a", {
                                        className: "inline-block underline mt-6",
                                        href: "https://freshmarket-farmmorning.co.kr/notice/?q=YToxOntzOjEyOiJrZXl3b3JkX3R5cGUiO3M6MzoiYWxsIjt9&bmode=view&idx=7414754&t=board",
                                        target: "_blank"
                                      }, "자세히 보러가기"))),
                          className: "accordian-content"
                        }))));
}

var make = Guide_Upload_After_Pay;

export {
  make ,
  
}
/* Env Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as React from "@rescript/react/src/React.mjs";
import * as React$1 from "react";
import * as Locale from "../utils/Locale.mjs";
import Uniqid from "uniqid";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Constants from "../constants/Constants.mjs";
import * as IconArrow from "./svgs/IconArrow.mjs";
import * as IconClose from "./svgs/IconClose.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_int32 from "rescript/lib/es6/caml_int32.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as ReactDialog from "@radix-ui/react-dialog";

function formatDate(d) {
  return Locale.DateTime.formatFromUTC(new Date(d), "yyyy-MM-dd");
}

function Shipment_Detail_Button_Seller$Detail(props) {
  var wholesale = props.wholesale;
  return React$1.createElement(React$1.Fragment, undefined, React$1.createElement("h3", {
                  className: "font-bold leading-5 text-sm"
                }, "상세내역"), React$1.createElement("div", {
                  className: "mt-2 grid grid-cols-4-shipment-detail-seller min-w-max"
                }, React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "판로유형"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "도매출하"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "날짜"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, formatDate(wholesale.date)), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "작물"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, wholesale.crop), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "품종"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, wholesale.cultivar), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "중량·포장"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 "
                    }, "" + Belt_Option.mapWithDefault(wholesale.weight, "", (function (prim) {
                            return String(prim);
                          })) + ", " + wholesale.packageType + ""), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "등급"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, wholesale.grade), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 경매금액"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalSettlementAmount, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 경매수량"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, String(wholesale.totalQuantity)), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "평균경매단가*"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.avgUnitPirce, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 상장수수료"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalAuctionFee, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 하차비용"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalUnloadingCost, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 운송비용"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalTransportCost, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 포장재지원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalPackageCostSpt, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 운송비지원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, wholesale.totalTransportCostSpt, 0) + " 원")), React$1.createElement("span", {
                  className: "col-span-4 mt-1 text-text-L2"
                }, "*평균경매단가는 소수점 첫번째 자리에서 반올림됩니다"));
}

var Detail = {
  formatDate: formatDate,
  make: Shipment_Detail_Button_Seller$Detail
};

function Shipment_Detail_Button_Seller$BulkSale(props) {
  var bulksale = props.bulksale;
  return React$1.createElement(React$1.Fragment, undefined, React$1.createElement("h3", {
                  className: "font-bold leading-5 text-sm"
                }, "신선하이 전량판매 단가 경매 단가 비교"), React$1.createElement("div", {
                  className: "mt-2 grid grid-cols-4-shipment-detail-seller min-w-max"
                }, React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "전량판매 단가"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, bulksale.unitPrice, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "차액*"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, bulksale.difference, 0) + " 원"), React$1.createElement("div", {
                      className: "align-middle py-3 pl-3 border-t border-b border-border-default-L2 bg-bg-pressed-L1 text-text-L2"
                    }, "총 차액**"), React$1.createElement("div", {
                      className: "col-span-3 align-middle py-3 pl-3 border-t border-b border-border-default-L2"
                    }, "" + Locale.Float.show(undefined, bulksale.totalDiff, 0) + " 원"), React$1.createElement("span", {
                      className: "col-span-4 mt-1 text-text-L2"
                    }, "*전량판매 단가 - 평균단가 = 차액  **차액 X 경매수량 = 총 차액")));
}

var BulkSale = {
  make: Shipment_Detail_Button_Seller$BulkSale
};

function Shipment_Detail_Button_Seller$OrderList$AuctionItem(props) {
  var order = props.order;
  return React$1.createElement("li", {
              className: "grid grid-cols-3-shipment-auction-seller"
            }, React$1.createElement("div", {
                  className: "border-b border-border-default-L2 py-3 pl-4"
                }, "" + order.marketName + "(" + order.wholesalerName + ")"), React$1.createElement("div", {
                  className: "border-b border-border-default-L2 py-3"
                }, "" + Locale.Float.show(undefined, order.unitPrice, 0) + " 원"), React$1.createElement("div", {
                  className: "border-b border-border-default-L2 py-3"
                }, String(order.quantity)));
}

var AuctionItem = {
  make: Shipment_Detail_Button_Seller$OrderList$AuctionItem
};

function Shipment_Detail_Button_Seller$OrderList$Pagination(props) {
  var onChangePage = props.onChangePage;
  var itemPerPage = props.itemPerPage;
  var cur = props.cur;
  var pageDisplaySize = props.pageDisplaySize;
  var totalPage = Js_math.ceil_int(props.total / itemPerPage);
  var nth = Caml_int32.div(cur - 1 | 0, pageDisplaySize);
  var start = Math.imul(pageDisplaySize, nth) + 1 | 0;
  var end = Math.min((start + pageDisplaySize | 0) - 1 | 0, totalPage);
  var handleOnChangePage = function (e) {
    e.preventDefault();
    e.stopPropagation();
    var value = e.currentTarget.value;
    Belt_Option.map(Belt_Option.map(Belt_Int.fromString(value), (function (v) {
                return Math.imul(v - 1 | 0, itemPerPage);
              })), onChangePage);
  };
  var isDisabledLeft = start <= 1;
  var isDisabledRight = end >= totalPage;
  var buttonStyle = function (i) {
    if (cur === i) {
      return "w-10 h-12 text-center font-bold";
    } else {
      return "w-10 h-12 text-center";
    }
  };
  return React$1.createElement("ol", {
              className: "flex"
            }, React$1.createElement("button", {
                  className: Cx.cx([
                        "transform rotate-180 w-12 h-12 rounded-full bg-gray-100 flex justify-center items-center mr-4",
                        isDisabledLeft ? "cursor-not-allowed" : "cursor-pointer"
                      ]),
                  disabled: isDisabledLeft,
                  value: String(start),
                  onClick: handleOnChangePage
                }, React$1.createElement(IconArrow.make, {
                      height: "20",
                      width: "20",
                      stroke: isDisabledLeft ? "#CCCCCC" : "#727272",
                      className: "relative"
                    })), Belt_Array.map(Belt_Array.range(start, end), (function (i) {
                    return React$1.createElement("li", {
                                key: String(i)
                              }, React$1.createElement("button", {
                                    className: buttonStyle(i),
                                    value: String(i),
                                    onClick: handleOnChangePage
                                  }, String(i)));
                  })), React$1.createElement("button", {
                  className: Cx.cx([
                        "w-12 h-12 rounded-full bg-gray-100 flex justify-center items-center ml-4",
                        isDisabledRight ? "cursor-not-allowed" : "cursor-pointer"
                      ]),
                  disabled: isDisabledRight,
                  value: String(end),
                  onClick: handleOnChangePage
                }, React$1.createElement(IconArrow.make, {
                      height: "20",
                      width: "20",
                      stroke: isDisabledRight ? "#CCCCCC" : "#727272",
                      className: "relative"
                    })));
}

var Pagination = {
  make: Shipment_Detail_Button_Seller$OrderList$Pagination
};

function Shipment_Detail_Button_Seller$OrderList(props) {
  var orders = props.orders;
  var match = React$1.useState(function () {
        return 0;
      });
  var setOffset = match[1];
  var offset = match[0];
  return React$1.createElement(React$1.Fragment, undefined, React$1.createElement("div", {
                  className: "grid grid-cols-3-shipment-auction-seller min-w-max"
                }, React$1.createElement("div", {
                      className: "bg-bg-pressed-L1 text-text-L2 rounded py-2 pl-4"
                    }, "도매시장(청과)"), React$1.createElement("div", {
                      className: "bg-bg-pressed-L1 text-text-L2 rounded py-2"
                    }, "경락단가"), React$1.createElement("div", {
                      className: "bg-bg-pressed-L1 text-text-L2 rounded py-2"
                    }, "수량")), React$1.createElement("ol", undefined, Belt_Array.map(Belt_Array.slice(orders, offset, 10), (function (order) {
                        return React.createElementWithKey(Shipment_Detail_Button_Seller$OrderList$AuctionItem, {
                                    order: order
                                  }, Uniqid("auction"));
                      }))), React$1.createElement("div", {
                  className: "flex justify-center py-5"
                }, React$1.createElement(Shipment_Detail_Button_Seller$OrderList$Pagination, {
                      pageDisplaySize: Constants.pageDisplySize,
                      cur: (offset / 10 | 0) + 1 | 0,
                      total: orders.length,
                      itemPerPage: 10,
                      onChangePage: (function (offset) {
                          setOffset(function (param) {
                                return offset;
                              });
                        })
                    })));
}

var OrderList = {
  AuctionItem: AuctionItem,
  Pagination: Pagination,
  make: Shipment_Detail_Button_Seller$OrderList
};

function Shipment_Detail_Button_Seller(props) {
  var status = CustomHooks.WholeSale.use(new URLSearchParams(Js_dict.fromArray([
                  [
                    "settlement-date",
                    props.date
                  ],
                  [
                    "sku",
                    props.sku
                  ]
                ])).toString());
  var tmp;
  if (typeof status === "number" || status.TAG !== /* Loaded */0) {
    tmp = null;
  } else {
    var error = CustomHooks.WholeSale.response_decode(status._0);
    if (error.TAG === /* Ok */0) {
      var wholesale = error._0.data;
      var bulksale = wholesale.bulksale;
      tmp = React$1.createElement(React$1.Fragment, undefined, React$1.createElement("section", {
                className: "mt-10"
              }, React$1.createElement(Shipment_Detail_Button_Seller$Detail, {
                    wholesale: wholesale
                  })), bulksale !== undefined ? React$1.createElement("section", {
                  className: "mt-10"
                }, React$1.createElement(Shipment_Detail_Button_Seller$BulkSale, {
                      bulksale: bulksale
                    })) : null, React$1.createElement("section", {
                className: "mt-12"
              }, React$1.createElement(Shipment_Detail_Button_Seller$OrderList, {
                    orders: wholesale.orders
                  })));
    } else {
      console.log(error._0);
      tmp = null;
    }
  }
  return React$1.createElement(ReactDialog.Root, {
              children: null
            }, React$1.createElement(ReactDialog.Trigger, {
                  children: "조회하기",
                  className: "max-w-min py-1 px-5 bg-green-gl-light text-green-gl rounded-md whitespace-nowrap focus:outline-none focus:ring-1 focus:ring-green-gl focus:ring-offset-1 focus:ring-opacity-80"
                }), React$1.createElement(ReactDialog.Overlay, {
                  className: "dialog-overlay"
                }), React$1.createElement(ReactDialog.Content, {
                  children: null,
                  className: "dialog-content text-text-L1 text-xs p-5 tracking-tight min-w-max overflow-y-auto"
                }, React$1.createElement(ReactDialog.Title, {
                      children: null,
                      className: "flex justify-between"
                    }, React$1.createElement("span", {
                          className: "font-bold text-xl leading-7"
                        }, "상세내역 조회"), React$1.createElement(ReactDialog.Close, {
                          children: React$1.createElement(IconClose.make, {
                                height: "24",
                                width: "24",
                                fill: "#262626"
                              }),
                          className: "focus:outline-none",
                          id: "btn_close"
                        })), tmp));
}

var make = Shipment_Detail_Button_Seller;

export {
  Detail ,
  BulkSale ,
  OrderList ,
  make ,
}
/* React Not a pure module */

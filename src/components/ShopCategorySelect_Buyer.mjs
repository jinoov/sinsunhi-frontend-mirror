// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Hoverable from "./common/Hoverable.mjs";
import * as IconArrow from "./svgs/IconArrow.mjs";
import Link from "next/link";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconHamburger from "./svgs/IconHamburger.mjs";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Product_FilterOption from "../pages/buyer/Product_FilterOption.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ShopCategorySelectBuyerQuery_graphql from "../__generated__/ShopCategorySelectBuyerQuery_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(ShopCategorySelectBuyerQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(ShopCategorySelectBuyerQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(ShopCategorySelectBuyerQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(ShopCategorySelectBuyerQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, ShopCategorySelectBuyerQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, ShopCategorySelectBuyerQuery_graphql.node, ShopCategorySelectBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: ShopCategorySelectBuyerQuery_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, ShopCategorySelectBuyerQuery_graphql.node, ShopCategorySelectBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(ShopCategorySelectBuyerQuery_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(ShopCategorySelectBuyerQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(ShopCategorySelectBuyerQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(ShopCategorySelectBuyerQuery_graphql.node, ShopCategorySelectBuyerQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query_displayCategoryType_decode = ShopCategorySelectBuyerQuery_graphql.Utils.displayCategoryType_decode;

var Query_displayCategoryType_fromString = ShopCategorySelectBuyerQuery_graphql.Utils.displayCategoryType_fromString;

var Query = {
  displayCategoryType_decode: Query_displayCategoryType_decode,
  displayCategoryType_fromString: Query_displayCategoryType_fromString,
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function ShopCategorySelect_Buyer$Sub(Props) {
  var displayCategories = Props.displayCategories;
  var router = Router.useRouter();
  if (displayCategories.length !== 0) {
    return React.createElement(React.Fragment, undefined, React.createElement("div", {
                    className: "w-[222px] px-8 py-5 flex flex-col"
                  }, Belt_Array.map(displayCategories, (function (param) {
                          var id = param.id;
                          return React.createElement(Hoverable.make, {
                                      className: "mt-3",
                                      children: React.createElement("div", {
                                            className: "w-full flex items-center justify-between group cursor-pointer group",
                                            onClick: (function (param) {
                                                return ReactEvents.interceptingHandler((function (param) {
                                                              router.push("/categories/" + id + "?" + Product_FilterOption.defaultFilterOptionUrlParam + "");
                                                            }), param);
                                              })
                                          }, React.createElement("span", {
                                                className: "text-[15px] text-gray-800 group-hover:text-green-600 group-hover:font-bold"
                                              }, param.name), React.createElement("span", {
                                                className: "w-4 h-4"
                                              }, React.createElement(IconArrow.make, {
                                                    height: "16",
                                                    width: "16",
                                                    stroke: "#12B564",
                                                    className: "hidden group-hover:block"
                                                  }))),
                                      key: id
                                    });
                        }))));
  } else {
    return null;
  }
}

var Sub = {
  make: ShopCategorySelect_Buyer$Sub
};

function ShopCategorySelect_Buyer(Props) {
  var match = use({
        onlyDisplayable: true,
        types: ["NORMAL"]
      }, undefined, undefined, undefined, undefined);
  var rootDisplayCategories = match.rootDisplayCategories;
  var router = Router.useRouter();
  var match$1 = React.useState(function () {
        return false;
      });
  var setIsHovered = match$1[1];
  var match$2 = React.useState(function () {
        
      });
  var setHoveredId = match$2[1];
  var makeHoverChange = function (id, children, param) {
    if (children.length !== 0) {
      return setHoveredId(function (param) {
                  return id;
                });
    } else {
      return setHoveredId(function (param) {
                  
                });
    }
  };
  var tmp;
  if (match$1[0]) {
    var partial_arg = [];
    tmp = React.createElement(React.Fragment, undefined, React.createElement("div", {
              className: "flex items-center w-56 h-[54px] px-7 whitespace-nowrap border-t border-x border-primary"
            }, React.createElement(IconHamburger.make, {
                  width: "24",
                  height: "24",
                  fill: "#12B564"
                }), React.createElement("span", {
                  className: "mx-2 text-lg font-bold text-primary"
                }, "전체 카테고리"), React.createElement(IconArrow.make, {
                  height: "20",
                  width: "20",
                  fill: "#12B564",
                  className: "-rotate-90"
                })), React.createElement("div", {
              className: "relative"
            }, React.createElement("div", {
                  className: "h-[434px] bg-white absolute top-0 border border-green-500 flex divide-x"
                }, React.createElement("div", {
                      className: "w-[222px] px-8 py-5 flex flex-col"
                    }, React.createElement(Hoverable.make, {
                          className: "mt-3",
                          children: React.createElement(Link, {
                                href: "/products",
                                children: React.createElement("a", {
                                      className: "w-full flex items-center justify-between group cursor-pointer group"
                                    }, React.createElement("span", {
                                          className: "text-[15px] text-gray-800 group-hover:text-green-600 group-hover:font-bold"
                                        }, "전체 상품"), React.createElement("span", {
                                          className: "w-4 h-4"
                                        }, React.createElement(IconArrow.make, {
                                              height: "16",
                                              width: "16",
                                              stroke: "#12B564",
                                              className: "hidden group-hover:block"
                                            })))
                              }),
                          onHoverChange: (function (param) {
                              return makeHoverChange("buyer-products", partial_arg, param);
                            })
                        }), Belt_Array.map(rootDisplayCategories, (function (param) {
                            var id = param.id;
                            var children = param.children;
                            return React.createElement(Hoverable.make, {
                                        className: "mt-3",
                                        children: React.createElement("div", {
                                              className: "w-full flex items-center justify-between group cursor-pointer group",
                                              onClick: (function (param) {
                                                  return ReactEvents.interceptingHandler((function (param) {
                                                                router.push("/categories/" + id + "?" + Product_FilterOption.defaultFilterOptionUrlParam + "");
                                                              }), param);
                                                })
                                            }, React.createElement("span", {
                                                  className: "text-[15px] text-gray-800 group-hover:text-green-600 group-hover:font-bold"
                                                }, param.name), React.createElement("span", {
                                                  className: "w-4 h-4"
                                                }, React.createElement(IconArrow.make, {
                                                      height: "16",
                                                      width: "16",
                                                      stroke: "#12B564",
                                                      className: "hidden group-hover:block"
                                                    }))),
                                        onHoverChange: (function (param) {
                                            return makeHoverChange(id, children, param);
                                          }),
                                        key: id
                                      });
                          }))), Belt_Option.mapWithDefault(match$2[0], null, (function (hoveredId$p) {
                        return React.createElement(ShopCategorySelect_Buyer$Sub, {
                                    displayCategories: Belt_Option.mapWithDefault(Garter_Array.first(Belt_Array.keep(rootDisplayCategories, (function (displayCategory) {
                                                    return displayCategory.id === hoveredId$p;
                                                  }))), [], (function (displayCategory) {
                                            return displayCategory.children;
                                          })),
                                    key: hoveredId$p
                                  });
                      }))), React.createElement("div", {
                  className: "w-[222px] bg-white absolute top-0 left-[1px] h-1"
                })));
  } else {
    tmp = React.createElement("div", {
          className: "flex items-center w-56 h-[54px] px-7 whitespace-nowrap border-t border-x border-transparent"
        }, React.createElement(IconHamburger.make, {
              width: "24",
              height: "24",
              fill: "#12B564"
            }), React.createElement("span", {
              className: "mx-2 text-lg font-bold text-text-L1"
            }, "전체 카테고리"), React.createElement(IconArrow.make, {
              height: "20",
              width: "20",
              fill: "#B2B2B2",
              className: "rotate-90"
            }));
  }
  return React.createElement("div", undefined, React.createElement(Hoverable.make, {
                  children: tmp,
                  onHoverChange: (function (to_) {
                      setIsHovered(function (param) {
                            return to_;
                          });
                    })
                }));
}

var make = ShopCategorySelect_Buyer;

export {
  Query ,
  Sub ,
  make ,
}
/* react Not a pure module */

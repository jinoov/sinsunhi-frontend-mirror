// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Dialog from "./common/Dialog.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as IconCloseInput from "./svgs/IconCloseInput.mjs";
import * as UploadFileToS3PresignedUrl from "../utils/UploadFileToS3PresignedUrl.mjs";

function OfflineOrders_Upload_Admin(Props) {
  var onSuccess = Props.onSuccess;
  var onFailure = Props.onFailure;
  var match = React.useState(function () {
        
      });
  var setFiles = match[1];
  var file = Belt_Option.flatMap(match[0], Garter_Array.first);
  var match$1 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowDelete = match$1[1];
  var match$2 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowRequired = match$2[1];
  var handleOnChangeFiles = function (e) {
    var values = e.target.files;
    return setFiles(function (param) {
                return values;
              });
  };
  var handleResetFile = function (param) {
    var inputFile = document.getElementById("input-file");
    Belt_Option.map((inputFile == null) ? undefined : Caml_option.some(inputFile), (function (inputFile$p) {
            inputFile$p.value = "";
            
          }));
    return setFiles(function (param) {
                
              });
  };
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "flex flex-row w-full mt-6 pb-5 border-b border-border-default-L2"
                }, React.createElement("div", {
                      className: "flex-1"
                    }, React.createElement("h3", {
                          className: "font-bold"
                        }, "1. 파일선택", React.createElement("span", {
                              className: "text-sm text-text-L2 ml-2 font-normal"
                            }, "*.xls, xlsx 확장자만 업로드 가능")), React.createElement("div", {
                          className: "flex justify-between items-center mt-2 pr-6 border-r border-border-default-L1"
                        }, React.createElement("div", {
                              className: file !== undefined ? "relative w-full flex py-2 px-3 items-center rounded-xl border border-gray-200 text-text-L1 h-9" : "relative w-full flex py-2 px-3 items-center rounded-xl border border-gray-200 text-gray-400 bg-gray-100 h-9"
                            }, React.createElement("span", {
                                  className: "text-sm"
                                }, Belt_Option.getWithDefault(Belt_Option.map(file, (function (file$p) {
                                            return file$p.name;
                                          })), "파일명.xlsx")), Belt_Option.getWithDefault(Belt_Option.map(file, (function (param) {
                                        return React.createElement("span", {
                                                    className: "absolute p-2 right-0",
                                                    onClick: (function (param) {
                                                        return setShowDelete(function (param) {
                                                                    return /* Show */0;
                                                                  });
                                                      })
                                                  }, React.createElement(IconCloseInput.make, {
                                                        height: "28",
                                                        width: "28",
                                                        fill: "#B2B2B2"
                                                      }));
                                      })), null)), React.createElement("label", {
                              className: "ml-2 py-2 px-3 h-9 text-sm text-center whitespace-nowrap bg-gray-200 text-text-L1 rounded-lg cursor-pointer focus:outline-none focus-within:bg-primary focus-within:text-white focus-within:outline-none"
                            }, React.createElement("span", undefined, "파일선택"), React.createElement("input", {
                                  className: "sr-only",
                                  id: "input-file",
                                  accept: ".xls,.xlsx",
                                  type: "file",
                                  onChange: handleOnChangeFiles
                                })))), React.createElement("div", {
                      className: "flex-1 ml-6"
                    }, React.createElement("h3", {
                          className: "font-bold"
                        }, "2. 업로드"), React.createElement("button", {
                          className: Belt_Option.isSome(file) ? "py-2 px-4 mt-2 text-sm h-9 text-white bg-primary rounded-lg" : "py-2 px-4 mt-2 text-sm h-9 text-disabled-L3 bg-gray-300 rounded-lg focus:outline-none",
                          disabled: Belt_Option.isNone(file),
                          onClick: (function (param) {
                              if (file !== undefined) {
                                UploadFileToS3PresignedUrl.upload(undefined, /* Admin */3, Caml_option.valFromOption(file), (function (param) {
                                        handleResetFile(undefined);
                                        return Curry._1(onSuccess, undefined);
                                      }), (function (param) {
                                        return Curry._1(onFailure, undefined);
                                      }), undefined);
                                return ;
                              } else {
                                return setShowRequired(function (param) {
                                            return /* Show */0;
                                          });
                              }
                            })
                        }, "업로드"))), React.createElement(Dialog.make, {
                  isShow: match$1[0],
                  children: React.createElement("p", {
                        className: "text-gray-500 text-center whitespace-pre-wrap"
                      }, "파일을 삭제하시겠어요?"),
                  onCancel: (function (param) {
                      return setShowDelete(function (param) {
                                  return /* Hide */1;
                                });
                    }),
                  onConfirm: (function (param) {
                      handleResetFile(undefined);
                      return setShowDelete(function (param) {
                                  return /* Hide */1;
                                });
                    }),
                  textOnCancel: "닫기",
                  textOnConfirm: "삭제"
                }), React.createElement(Dialog.make, {
                  isShow: match$2[0],
                  children: React.createElement("p", {
                        className: "text-gray-500 text-center whitespace-pre-wrap"
                      }, "파일을 선택해주세요."),
                  onConfirm: (function (param) {
                      return setShowRequired(function (param) {
                                  return /* Hide */1;
                                });
                    })
                }));
}

var make = OfflineOrders_Upload_Admin;

export {
  make ,
  
}
/* react Not a pure module */

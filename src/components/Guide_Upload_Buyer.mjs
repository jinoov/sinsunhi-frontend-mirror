// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as React from "react";
import * as IconArrowSelect from "./svgs/IconArrowSelect.mjs";
import * as ReactAccordion from "@radix-ui/react-accordion";

function Guide_Upload_Buyer(Props) {
  return React.createElement("div", {
              className: "container max-w-lg mx-auto sm:mt-4 sm:shadow-gl mb-10"
            }, React.createElement(ReactAccordion.Root, {
                  children: null,
                  type: "multiple"
                }, React.createElement(ReactAccordion.Item, {
                      children: null,
                      value: "guide-1"
                    }, React.createElement(ReactAccordion.Header, {
                          children: React.createElement(ReactAccordion.Trigger, {
                                children: React.createElement("div", {
                                      className: "flex justify-between py-6 px-7 bg-white border-b border-gray-100"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "주문서 업로드 사용설명서"), React.createElement(IconArrowSelect.make, {
                                          height: "24",
                                          width: "24",
                                          fill: "#121212",
                                          className: "accordian-icon"
                                        })),
                                className: "w-full focus:outline-none accordian-trigger"
                              })
                        }), React.createElement(ReactAccordion.Content, {
                          children: React.createElement("section", {
                                className: "p-7 text-sm bg-gray-gl"
                              }, React.createElement("h4", {
                                    className: "text-gray-500 font-semibold"
                                  }, "주문서 업로드 사용설명서"), React.createElement("div", {
                                    className: "flex mt-5"
                                  }, React.createElement("a", {
                                        className: "flex-1",
                                        href: "/buyer/products/advanced-search",
                                        target: "_blank"
                                      }, React.createElement("span", {
                                            className: "block text-center p-3 rounded-xl border border-green-gl text-base font-bold text-green-gl mr-2 bg-white"
                                          }, "상품・단품번호 확인")), React.createElement("a", {
                                        className: "flex-1",
                                        href: Env.buyerUploadGuideUri,
                                        target: "_blank"
                                      }, React.createElement("span", {
                                            className: "block text-center p-3 rounded-xl border border-green-gl text-base font-bold text-green-gl bg-white"
                                          }, "주문 메뉴얼 보기"))), React.createElement("div", {
                                    className: "leading-6 mt-4"
                                  }, React.createElement("h5", {
                                        className: "font-bold"
                                      }, "1. 주문서 양식"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, React.createElement("h6", undefined, "• 방식"), React.createElement("ul", {
                                                className: "ml-3"
                                              }, React.createElement("li", {
                                                    className: "flex gap-1"
                                                  }, React.createElement("span", {
                                                        className: "min-w-max font-bold"
                                                      }, "- 상품・단품번호:"), React.createElement("div", {
                                                        className: "inline sm:whitespace-pre-wrap"
                                                      }, React.createElement("a", {
                                                            id: "link-of-upload-guide",
                                                            href: "/buyer/products/advanced-search",
                                                            target: "_blank"
                                                          }, React.createElement("p", {
                                                                className: "inline cursor-pointer hover:underline"
                                                              }, "상품 페이지(클릭)")), " 에서 상품 검색하여 확인.\n유효하지 않은 번호 기입시 주문서 업로드 실패."))))), React.createElement("h5", {
                                        className: "font-bold mt-4"
                                      }, "2. 주문서 마감시간"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, "• 오전 10시 이전 주문서 업로드 성공할 경우 당일 출고"), React.createElement("li", undefined, "• 오전 10시 이후 주문서 업로드 성공할 경우 익일 출고"), React.createElement("li", {
                                            className: "flex gap-1"
                                          }, "*", React.createElement("span", {
                                                className: "sm:whitespace-pre-wrap"
                                              }, "일부 상품은 출고시간이 상이한 경우가 있으므로 \n상품별 출고 마감시간은 ", React.createElement("a", {
                                                    id: "link-of-upload-guide",
                                                    href: "/buyer/products/advanced-search",
                                                    target: "_blank"
                                                  }, React.createElement("p", {
                                                        className: "inline cursor-pointer hover:underline"
                                                      }, "상품 페이지(클릭)")), " 에서 상품 검색하여 확인 요망"))), React.createElement("h5", {
                                        className: "font-bold mt-4"
                                      }, "3. 주의사항"), React.createElement("ul", {
                                        className: "ml-3"
                                      }, React.createElement("li", undefined, "• 상품・단품번호 오기입 등 주문서 내용 오류로 인한 오출고는 신선하이에서 책임지지 않습니다.")))),
                          className: "accordian-content"
                        })), React.createElement(ReactAccordion.Item, {
                      children: null,
                      value: "guide-2"
                    }, React.createElement(ReactAccordion.Header, {
                          children: React.createElement(ReactAccordion.Trigger, {
                                children: React.createElement("div", {
                                      className: "flex justify-between py-6 px-7 bg-white"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "주문취소 방법"), React.createElement(IconArrowSelect.make, {
                                          height: "24",
                                          width: "24",
                                          fill: "#121212",
                                          className: "accordian-icon"
                                        })),
                                className: "w-full focus:outline-none accordian-trigger"
                              })
                        }), React.createElement(ReactAccordion.Content, {
                          children: React.createElement("section", {
                                className: "p-7 text-sm bg-gray-gl whitespace-pre-wrap"
                              }, "신규주문건만 ", React.createElement("a", {
                                    id: "link-of-orders",
                                    href: "/buyer/orders",
                                    target: "_blank"
                                  }, React.createElement("p", {
                                        className: "inline cursor-pointer hover:underline"
                                      }, "주문내역 페이지(클릭)")), "에서 직접 취소하실 수 있습니다.", React.createElement("p", {
                                    className: "mt-5 whitespace-pre-wrap "
                                  }, "신선식품 특성 상 상품이 준비된 후에는 회수 및 재판매가 어렵기 때문에 상품준비중 단계부터는 주문 취소가 어렵습니다. \n부득이하게 꼭 취소가 필요한 경우 화면 오른쪽 하단의 [1:1 MD문의]를 눌러 상담매니저에게 내용 전달 부탁드리며, 경우에 따라 취소가 어려울 수 있는 점 양해부탁드립니다."), React.createElement("div", undefined)),
                          className: "accordian-content"
                        }))));
}

var make = Guide_Upload_Buyer;

export {
  make ,
  
}
/* Env Not a pure module */

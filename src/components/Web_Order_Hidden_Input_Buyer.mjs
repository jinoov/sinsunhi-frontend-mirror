// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../utils/CustomHooks.mjs";
import * as ReactHookForm from "react-hook-form";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as Web_Order_Buyer_Form from "./Web_Order_Buyer_Form.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as WebOrderHiddenInputBuyerFragment_graphql from "../__generated__/WebOrderHiddenInputBuyerFragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(WebOrderHiddenInputBuyerFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(WebOrderHiddenInputBuyerFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(WebOrderHiddenInputBuyerFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return WebOrderHiddenInputBuyerFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function Web_Order_Hidden_Input_Buyer$Hidden(Props) {
  var value = Props.value;
  var inputName = Props.inputName;
  var isNumberOpt = Props.isNumber;
  var isNumber = isNumberOpt !== undefined ? isNumberOpt : false;
  var match = ReactHookForm.useFormContext({
        mode: "all"
      }, undefined);
  var match$1 = match.register(inputName, isNumber ? ({
            valueAsNumber: true
          }) : undefined);
  var name = match$1.name;
  var tmp = {
    ref: match$1.ref,
    id: name,
    name: name,
    type: "hidden"
  };
  if (value !== undefined) {
    tmp.defaultValue = Caml_option.valFromOption(value);
  }
  return React.createElement("input", tmp);
}

var Hidden = {
  make: Web_Order_Hidden_Input_Buyer$Hidden
};

function Web_Order_Hidden_Input_Buyer(Props) {
  var query = Props.query;
  var quantity = Props.quantity;
  var watchValue = Props.watchValue;
  var fragments = use(query);
  var match = ReactHookForm.useFormContext({
        mode: "all"
      }, undefined);
  var product = fragments.productNode;
  var productInfo;
  if (product !== undefined && typeof product === "object" && product.NAME === "NormalProduct") {
    var match$1 = product.VAL;
    productInfo = React.createElement(React.Fragment, undefined, React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(match$1.productId),
              inputName: Web_Order_Buyer_Form.names.productId,
              isNumber: true
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: match$1.name,
              inputName: Web_Order_Buyer_Form.names.productName
            }), React.createElement(ReactHookForm.Controller, {
              name: Web_Order_Buyer_Form.names.isTaxFree,
              control: match.control,
              render: (function (param) {
                  return React.createElement("div", undefined);
                }),
              defaultValue: !match$1.isVat
            }));
  } else {
    productInfo = null;
  }
  var productOption = fragments.productOptionNode;
  var optionInfo;
  if (productOption !== undefined && typeof productOption === "object" && productOption.NAME === "ProductOption") {
    var match$2 = productOption.VAL;
    var productOptionCost = match$2.productOptionCost;
    var price = match$2.price;
    var tmp;
    if (watchValue !== undefined) {
      var decode$p = Web_Order_Buyer_Form.deliveryType_decode(watchValue);
      tmp = decode$p.TAG === /* Ok */0 ? (
          decode$p._0 === "PARCEL" ? React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
                  value: String(Math.imul(quantity, productOptionCost.deliveryCost)),
                  inputName: Web_Order_Buyer_Form.names.totalDeliveryCost,
                  isNumber: true
                }) : React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
                  value: "0",
                  inputName: Web_Order_Buyer_Form.names.totalDeliveryCost,
                  isNumber: true
                })
        ) : React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(Math.imul(quantity, productOptionCost.deliveryCost)),
              inputName: Web_Order_Buyer_Form.names.totalDeliveryCost,
              isNumber: true
            });
    } else {
      tmp = null;
    }
    optionInfo = React.createElement(React.Fragment, undefined, React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: match$2.optionName,
              inputName: Web_Order_Buyer_Form.names.productOptionName
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(productOptionCost.deliveryCost),
              inputName: Web_Order_Buyer_Form.names.deliveryCost,
              isNumber: true
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: match$2.stockSku,
              inputName: Web_Order_Buyer_Form.names.stockSku
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: match$2.grade,
              inputName: Web_Order_Buyer_Form.names.grade
            }), tmp, React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(Math.imul(quantity, Belt_Option.getWithDefault(price, 0))),
              inputName: Web_Order_Buyer_Form.names.totalOrderPrice,
              isNumber: true
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(Belt_Option.getWithDefault(price, 0)),
              inputName: Web_Order_Buyer_Form.names.price,
              isNumber: true
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(quantity),
              inputName: Web_Order_Buyer_Form.names.quantity,
              isNumber: true
            }));
  } else {
    optionInfo = null;
  }
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var userInfo;
  if (typeof user === "number") {
    userInfo = null;
  } else {
    var user$p = user._0;
    userInfo = React.createElement(React.Fragment, undefined, React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: String(user$p.id),
              inputName: Web_Order_Buyer_Form.names.orderUserId,
              isNumber: true
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: user$p.name,
              inputName: Web_Order_Buyer_Form.names.ordererName
            }), React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
              value: user$p.phone,
              inputName: Web_Order_Buyer_Form.names.ordererPhone
            }));
  }
  return React.createElement(React.Fragment, undefined, productInfo, optionInfo, userInfo, React.createElement(Web_Order_Hidden_Input_Buyer$Hidden, {
                  value: "ORDER",
                  inputName: Web_Order_Buyer_Form.names.paymentPurpose
                }));
}

var Form;

var make = Web_Order_Hidden_Input_Buyer;

export {
  Fragment ,
  Form ,
  Hidden ,
  make ,
  
}
/* react Not a pure module */

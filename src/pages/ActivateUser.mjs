// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import Head from "next/head";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ChannelTalk from "../bindings/ChannelTalk.mjs";
import * as ActivateUser_ByEmail from "./ActivateUser_ByEmail.mjs";
import * as ActivateUser_ByPhone from "./ActivateUser_ByPhone.mjs";

function ActivateUser$HasNoMethod(props) {
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "휴면계정 해제")
                }), React.createElement("div", {
                  className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center pb-20"
                }, React.createElement("div", {
                      className: "flex-auto flex flex-col xl:justify-center items-center"
                    }, React.createElement("div", {
                          className: "w-full p-5 xl:py-12 sm:px-20 text-text-L1"
                        }, React.createElement("h2", {
                              className: "text-xl font-bold whitespace-pre"
                            }, "회원님의 계정은\n이메일, 휴대폰 번호로\n휴면 상태를 해제할 수 없어요."), React.createElement("p", {
                              className: "mt-5 whitespace-pre-line text-sm text-text-L2"
                            }, "1:1 문의를 통해 휴면 상태를 해제하고\n신선하이를 이용해주세요."), React.createElement("div", {
                              className: "mt-40"
                            }, React.createElement("button", {
                                  className: "w-full bg-primary rounded-xl text-white font-bold whitespace-nowrap focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-1 h-14",
                                  onClick: (function (param) {
                                      ChannelTalk.showMessenger(undefined);
                                    })
                                }, "1:1 문의하기"))))));
}

var HasNoMethod = {
  make: ActivateUser$HasNoMethod
};

function $$default(props) {
  var mode = Belt_Option.map(Js_dict.get(props.query, "mode"), (function (mode) {
          return mode.split(",");
        }));
  var match = Belt_Option.mapWithDefault(mode, [
        /* HasNoMethod */2,
        false
      ], (function (mode) {
          if (Belt_Array.some(mode, (function (x) {
                    return x === "phone";
                  }))) {
            if (Belt_Array.some(mode, (function (x) {
                      return x === "email";
                    }))) {
              return [
                      /* ByPhone */0,
                      false
                    ];
            } else {
              return [
                      /* ByPhone */0,
                      true
                    ];
            }
          } else if (Belt_Array.some(mode, (function (x) {
                    return x === "email";
                  }))) {
            return [
                    /* ByEmail */1,
                    false
                  ];
          } else {
            return [
                    /* HasNoMethod */2,
                    false
                  ];
          }
        }));
  var uid = Js_dict.get(props.query, "uid");
  var email = Js_dict.get(props.query, "email");
  var phone = Js_dict.get(props.query, "phone");
  var sentEmail = Js_dict.get(props.query, "sent-email");
  var role = Js_dict.get(props.query, "role");
  switch (match[0]) {
    case /* ByPhone */0 :
        return React.createElement(ActivateUser_ByPhone.make, {
                    skipEmail: match[1],
                    phone: phone,
                    uid: uid,
                    role: role
                  });
    case /* ByEmail */1 :
        return React.createElement(ActivateUser_ByEmail.make, {
                    uid: uid,
                    email: email,
                    sentEmail: sentEmail,
                    role: role
                  });
    case /* HasNoMethod */2 :
        return React.createElement(ActivateUser$HasNoMethod, {});
    
  }
}

function getServerSideProps(param) {
  return Promise.resolve({
              props: {
                query: param.query
              }
            });
}

export {
  HasNoMethod ,
  $$default ,
  $$default as default,
  getServerSideProps ,
}
/* react Not a pure module */

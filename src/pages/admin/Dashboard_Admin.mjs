// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ErrorPanel from "../../components/common/ErrorPanel.mjs";
import * as CustomHooks from "../../utils/CustomHooks.mjs";
import * as Authorization from "../../utils/Authorization.mjs";

function Dashboard_Admin$Item(Props) {
  var status = CustomHooks.OrdersSummaryAdminDashboard.use(undefined);
  if (typeof status === "number") {
    return React.createElement("div", undefined, "로딩 중..");
  }
  if (status.TAG !== /* Loaded */0) {
    return React.createElement(ErrorPanel.make, {
                error: status._0
              });
  }
  var summary = status._0;
  var summary$p = CustomHooks.OrdersSummaryAdminDashboard.orders_decode(summary);
  var tmp;
  if (summary$p.TAG === /* Ok */0) {
    var summary$p$1 = summary$p._0;
    tmp = React.createElement(React.Fragment, undefined, React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "최근신규발주"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, "" + String(summary$p$1.data.newOrders) + "건")), React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "자동처리완료"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, "" + String(summary$p$1.data.ordersSuccess) + "건")), React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "처리실패"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, "" + String(summary$p$1.data.ordersFail) + "건")));
  } else {
    tmp = React.createElement("div", undefined, "오류가 발생하였습니다.");
  }
  var summary$p$2 = CustomHooks.OrdersSummaryAdminDashboard.orders_decode(summary);
  var tmp$1;
  if (summary$p$2.TAG === /* Ok */0) {
    var summary$p$3 = summary$p$2._0;
    tmp$1 = React.createElement(React.Fragment, undefined, React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "최근입력요청"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, String(summary$p$3.data.invoiceRequested))), React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "입력완료"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, "" + String(summary$p$3.data.invoiceUpdated) + "건")), React.createElement("li", {
              className: "flex-1 text-center"
            }, React.createElement("span", {
                  className: "block"
                }, "입력미완료"), React.createElement("span", {
                  className: "block mt-2 font-bold"
                }, "" + String(summary$p$3.data.invoiceNotUpdated) + "건")));
  } else {
    tmp$1 = React.createElement("div", undefined, "오류가 발생하였습니다.");
  }
  return React.createElement("div", {
              className: "py-8 px-4 bg-div-shape-L1 min-h-screen"
            }, React.createElement("header", {
                  className: "flex items-baseline"
                }, React.createElement("h1", {
                      className: "font-bold text-xl"
                    }, "대시보드"), React.createElement("span", {
                      className: "ml-2 text-green-gl text-sm"
                    }, "먼저 확인해 주세요!")), React.createElement("div", {
                  className: "flex mt-4 bg-white rounded"
                }, React.createElement("div", {
                      className: "flex-1 p-7 shadow-gl mr-4"
                    }, React.createElement("h3", {
                          className: "font-bold text-xl"
                        }, "주문서"), React.createElement("ol", {
                          className: "flex justify-between mt-4 divide-x"
                        }, tmp)), React.createElement("div", {
                      className: "flex-1 p-7 shadow-gl"
                    }, React.createElement("h3", {
                          className: "font-bold text-xl"
                        }, "송장번호"), React.createElement("ol", {
                          className: "flex justify-between mt-4 divide-x"
                        }, tmp$1))));
}

var Item = {
  make: Dashboard_Admin$Item
};

function Dashboard_Admin(Props) {
  return React.createElement(Authorization.Admin.make, {
              children: React.createElement(Dashboard_Admin$Item, {}),
              title: "관리자 대시보드"
            });
}

var make = Dashboard_Admin;

export {
  Item ,
  make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as PDP_Rfq_Button from "./PDP_Rfq_Button.mjs";
import * as PDP_Title_Buyer from "./PDP_Title_Buyer.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as PDP_QuoteInfo_Buyer from "./PDP_QuoteInfo_Buyer.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDP_Product_Quoted_Info_Buyer from "./PDP_Product_Quoted_Info_Buyer.mjs";
import * as PDPProductQuotedBuyerFragment_graphql from "../../../__generated__/PDPProductQuotedBuyerFragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(PDPProductQuotedBuyerFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPProductQuotedBuyerFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPProductQuotedBuyerFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPProductQuotedBuyerFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function PDP_Product_Quoted_Buyer$PC(Props) {
  var query = Props.query;
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  return React.createElement("div", {
              className: "w-full"
            }, React.createElement(PDP_Title_Buyer.PC.make, {
                  query: fragmentRefs
                }), React.createElement("h1", {
                  className: "mt-4 font-bold text-blue-500 text-[28px]"
                }, "최저가 견적받기"), React.createElement("section", {
                  className: "mt-4 border border-gray-200 rounded-xl divide-y"
                }, React.createElement("div", {
                      className: "px-6 py-8 divide-y"
                    }, React.createElement(PDP_Product_Quoted_Info_Buyer.PC.make, {
                          query: fragmentRefs
                        }), React.createElement("div", {
                          className: "flex flex-col gap-6 pt-6"
                        }, React.createElement(PDP_QuoteInfo_Buyer.PC.make, {})))), React.createElement("section", {
                  className: "w-full mt-4"
                }, React.createElement(PDP_Rfq_Button.Quoted.PC.make, {})));
}

var PC = {
  make: PDP_Product_Quoted_Buyer$PC
};

function PDP_Product_Quoted_Buyer$MO(Props) {
  var query = Props.query;
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full divide-y"
                }, React.createElement("section", {
                      className: "pt-5 pb-8"
                    }, React.createElement(PDP_Title_Buyer.MO.make, {
                          query: fragmentRefs
                        }), React.createElement("h1", {
                          className: "mt-2 font-bold text-blue-500 text-lg"
                        }, "최저가 견적받기")), React.createElement("section", {
                      className: "py-8"
                    }, React.createElement(PDP_Product_Quoted_Info_Buyer.MO.make, {
                          query: fragmentRefs
                        })), React.createElement("section", {
                      className: "py-8 flex flex-col gap-5"
                    }, React.createElement(PDP_QuoteInfo_Buyer.MO.make, {}), React.createElement(PDP_Rfq_Button.Quoted.MO.make, {}))));
}

var MO = {
  make: PDP_Product_Quoted_Buyer$MO
};

export {
  Fragment ,
  PC ,
  MO ,
  
}
/* react Not a pure module */

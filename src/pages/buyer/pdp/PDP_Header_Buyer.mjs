// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as IconHome from "../../../components/svgs/IconHome.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Router from "next/router";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Product_Parser from "../../../utils/Product_Parser.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDP_Matching_Header_Buyer from "./matching/PDP_Matching_Header_Buyer.mjs";
import * as PDPHeaderBuyerQuery_graphql from "../../../__generated__/PDPHeaderBuyerQuery_graphql.mjs";
import * as PDPHeaderBuyerFragment_graphql from "../../../__generated__/PDPHeaderBuyerFragment_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = Hooks.useLazyLoadQuery(PDPHeaderBuyerQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(PDPHeaderBuyerQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(PDPHeaderBuyerQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = Hooks.useQueryLoader(PDPHeaderBuyerQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, PDPHeaderBuyerQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  Hooks.fetchQuery(environment, PDPHeaderBuyerQuery_graphql.node, PDPHeaderBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            return Curry._1(onResult, {
                        TAG: /* Ok */0,
                        _0: PDPHeaderBuyerQuery_graphql.Internal.convertResponse(res)
                      });
          }),
        error: (function (err) {
            return Curry._1(onResult, {
                        TAG: /* Error */1,
                        _0: err
                      });
          })
      });
  
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = Hooks.fetchQuery(environment, PDPHeaderBuyerQuery_graphql.node, PDPHeaderBuyerQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return __x.then(function (res) {
              return Promise.resolve(PDPHeaderBuyerQuery_graphql.Internal.convertResponse(res));
            });
}

function usePreloaded(queryRef, param) {
  var data = Hooks.usePreloadedQuery(PDPHeaderBuyerQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPHeaderBuyerQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(PDPHeaderBuyerQuery_graphql.node, PDPHeaderBuyerQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query_makeVariables = PDPHeaderBuyerQuery_graphql.Utils.makeVariables;

var Query = {
  makeVariables: Query_makeVariables,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function use$1(fRef) {
  var data = Hooks.useFragment(PDPHeaderBuyerFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPHeaderBuyerFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPHeaderBuyerFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPHeaderBuyerFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use$1,
  useOpt: useOpt
};

function PDP_Header_Buyer$Default(Props) {
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              onClick: (function (param) {
                                  router.back();
                                  
                                })
                            }, React.createElement("img", {
                                  className: "w-6 h-6 rotate-180",
                                  src: "/assets/arrow-right.svg"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-xl"
                                }, "상품 상세")), React.createElement("button", {
                              onClick: (function (param) {
                                  router.push("/buyer");
                                  
                                })
                            }, React.createElement(IconHome.make, {
                                  width: "24",
                                  height: "24",
                                  fill: "#262626"
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Default = {
  make: PDP_Header_Buyer$Default
};

function PDP_Header_Buyer$Placeholder(Props) {
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              onClick: (function (param) {
                                  router.back();
                                  
                                })
                            }, React.createElement("img", {
                                  className: "w-6 h-6 rotate-180",
                                  src: "/assets/arrow-right.svg"
                                })), React.createElement("div", undefined), React.createElement("button", {
                              onClick: (function (param) {
                                  router.push("/buyer");
                                  
                                })
                            }, React.createElement(IconHome.make, {
                                  width: "24",
                                  height: "24",
                                  fill: "#262626"
                                }))))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Placeholder = {
  make: PDP_Header_Buyer$Placeholder
};

function PDP_Header_Buyer$Presenter(Props) {
  var query = Props.query;
  var match = use$1(query);
  var match$1 = Product_Parser.Type.decode(match.__typename);
  if (match$1 !== undefined) {
    if (match$1 >= 3) {
      return React.createElement(PDP_Matching_Header_Buyer.make, {
                  query: match.fragmentRefs
                });
    } else {
      return React.createElement(PDP_Header_Buyer$Default, {});
    }
  } else {
    return React.createElement(PDP_Header_Buyer$Default, {});
  }
}

var Presenter = {
  make: PDP_Header_Buyer$Presenter
};

function PDP_Header_Buyer$Container(Props) {
  var nodeId = Props.nodeId;
  var match = use({
        id: nodeId
      }, /* StoreAndNetwork */2, undefined, undefined, undefined);
  var node = match.node;
  if (node !== undefined) {
    return React.createElement(PDP_Header_Buyer$Presenter, {
                query: node.fragmentRefs
              });
  } else {
    return React.createElement(PDP_Header_Buyer$Placeholder, {});
  }
}

var Container = {
  make: PDP_Header_Buyer$Container
};

function PDP_Header_Buyer(Props) {
  var router = Router.useRouter();
  var pid = Js_dict.get(router.query, "pid");
  if (pid !== undefined) {
    return React.createElement(PDP_Header_Buyer$Container, {
                nodeId: pid
              });
  } else {
    return React.createElement(PDP_Header_Buyer$Placeholder, {});
  }
}

var make = PDP_Header_Buyer;

export {
  Query ,
  Fragment ,
  Default ,
  Placeholder ,
  Presenter ,
  Container ,
  make ,
  
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Skeleton from "../../../components/Skeleton.mjs";
import Link from "next/link";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as ShopDialog_Buyer from "../ShopDialog_Buyer.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as IconDownloadCenter from "../../../components/svgs/IconDownloadCenter.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDPSalesDocumentBuyerFragment_graphql from "../../../__generated__/PDPSalesDocumentBuyerFragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(PDPSalesDocumentBuyerFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPSalesDocumentBuyerFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPSalesDocumentBuyerFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPSalesDocumentBuyerFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function PDP_SalesDocument_Buyer$MO(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var match = use(query);
  var salesDocument = match.salesDocument;
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match$1 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowWarning = match$1[1];
  var btnStyle = "group rounded-xl h-13 px-5 flex items-center justify-center focus:outline-none bg-white border border-green-500 hover:border-green-600";
  var labelStyle = "ml-2 font-bold text-green-500 group-hover:text-green-600";
  if (salesDocument !== undefined) {
    return React.createElement("section", {
                className: "flex flex-col gap-5 px-5 py-8 border-t"
              }, React.createElement("div", {
                    className: "flex flex-col gap-4 text-center"
                  }, React.createElement("div", {
                        className: "flex flex-col text-gray-800"
                      }, React.createElement("span", undefined, React.createElement("span", {
                                className: "font-bold"
                              }, "판매자료 다운받기"), " 버튼을 누르시면"), React.createElement("span", undefined, "이 상품을 바로 판매하고 매출을 올릴 수 있습니다.")), typeof user === "number" ? (
                      user !== 0 ? React.createElement(React.Fragment, undefined, React.createElement("button", {
                                  className: btnStyle,
                                  onClick: (function (param) {
                                      return setShowWarning(function (param) {
                                                  return /* Show */0;
                                                });
                                    })
                                }, React.createElement(IconDownloadCenter.make, {
                                      width: "24",
                                      height: "24",
                                      className: "fill-green-500 group-hover:fill-green-600"
                                    }), React.createElement("span", {
                                      className: labelStyle
                                    }, "판매자료 다운받기")), React.createElement(ShopDialog_Buyer.Mo.make, {
                                  isShow: match$1[0],
                                  confirmText: "로그인",
                                  cancelText: "취소",
                                  onConfirm: (function (param) {
                                      router.push("/buyer/signin");
                                      
                                    }),
                                  onCancel: (function (param) {
                                      return setShowWarning(function (param) {
                                                  return /* Hide */1;
                                                });
                                    }),
                                  children: React.createElement("div", {
                                        className: "w-full h-18 mt-8 px-8 py-6 flex flex-col items-center justify-center text-lg text-gray-800"
                                      }, React.createElement("span", undefined, "로그인을 하시면"), React.createElement("span", undefined, "판매자료를 다운받으실 수 있습니다."))
                                })) : React.createElement(Skeleton.Box.make, {})
                    ) : React.createElement(Link, {
                          href: salesDocument,
                          children: React.createElement("a", {
                                className: btnStyle,
                                target: "_blank"
                              }, React.createElement(IconDownloadCenter.make, {
                                    width: "24",
                                    height: "24",
                                    className: "fill-green-500 group-hover:fill-green-600"
                                  }), React.createElement("span", {
                                    className: labelStyle
                                  }, "판매자료 다운받기"))
                        })));
  } else {
    return null;
  }
}

var MO = {
  make: PDP_SalesDocument_Buyer$MO
};

function PDP_SalesDocument_Buyer$PC(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var match = use(query);
  var salesDocument = match.salesDocument;
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var match$1 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowWarning = match$1[1];
  var btnStyle = "group rounded-xl h-13 px-5 flex items-center justify-center focus:outline-none bg-white border border-green-500 hover:border-green-600";
  var labelStyle = "ml-2 font-bold text-green-500 group-hover:text-green-600";
  if (salesDocument !== undefined) {
    return React.createElement(React.Fragment, undefined, React.createElement("div", {
                    className: "mt-12 w-full p-5 rounded-xl bg-gray-50 flex items-center justify-between"
                  }, React.createElement("div", {
                        className: "flex flex-col text-gray-800"
                      }, React.createElement("span", undefined, React.createElement("span", {
                                className: "font-bold"
                              }, "판매자료 다운받기"), " 버튼을 누르시면"), React.createElement("span", undefined, "이 상품을 바로 판매하고 매출을 올릴 수 있습니다.")), typeof user === "number" ? (
                      user !== 0 ? React.createElement(React.Fragment, undefined, React.createElement("button", {
                                  className: btnStyle,
                                  onClick: (function (param) {
                                      return setShowWarning(function (param) {
                                                  return /* Show */0;
                                                });
                                    })
                                }, React.createElement(IconDownloadCenter.make, {
                                      width: "24",
                                      height: "24",
                                      className: "fill-green-500 group-hover:fill-green-600"
                                    }), React.createElement("span", {
                                      className: labelStyle
                                    }, "판매자료 다운받기")), React.createElement(ShopDialog_Buyer.make, {
                                  isShow: match$1[0],
                                  confirmText: "로그인",
                                  cancelText: "취소",
                                  onConfirm: (function (param) {
                                      router.push("/buyer/signin");
                                      
                                    }),
                                  onCancel: (function (param) {
                                      return setShowWarning(function (param) {
                                                  return /* Hide */1;
                                                });
                                    }),
                                  children: React.createElement("div", {
                                        className: "w-full h-18 mt-8 px-8 py-6 flex flex-col items-center justify-center text-lg text-gray-800"
                                      }, React.createElement("span", undefined, "로그인을 하시면"), React.createElement("span", undefined, "판매자료를 다운받으실 수 있습니다."))
                                })) : React.createElement(Skeleton.Box.make, {})
                    ) : React.createElement(Link, {
                          href: salesDocument,
                          children: React.createElement("a", {
                                className: btnStyle,
                                target: "_blank"
                              }, React.createElement(IconDownloadCenter.make, {
                                    width: "24",
                                    height: "24",
                                    className: "fill-green-500 group-hover:fill-green-600"
                                  }), React.createElement("span", {
                                    className: labelStyle
                                  }, "판매자료 다운받기"))
                        })), React.createElement("div", {
                    className: "mt-4 text-gray-600"
                  }, "신선하이의 물품 공급 및 판매 외 무단 게시 및 공유 적발시 법적 제재가 가해질 수 있습니다."));
  } else {
    return null;
  }
}

var PC = {
  make: PDP_SalesDocument_Buyer$PC
};

export {
  Fragment ,
  MO ,
  PC ,
  
}
/* react Not a pure module */

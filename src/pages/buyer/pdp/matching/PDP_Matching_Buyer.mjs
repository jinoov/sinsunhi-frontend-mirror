// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as IconArrow from "../../../../components/svgs/IconArrow.mjs";
import Link from "next/link";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../../utils/CustomHooks.mjs";
import * as Router from "next/router";
import ReactNl2br from "react-nl2br";
import * as Footer_Buyer from "../../../../components/Footer_Buyer.mjs";
import * as Header_Buyer from "../../../../components/Header_Buyer.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as PDP_Matching_Title from "./PDP_Matching_Title.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDP_Matching_Image_Buyer from "./PDP_Matching_Image_Buyer.mjs";
import * as PDP_Matching_Modals_Buyer from "./PDP_Matching_Modals_Buyer.mjs";
import * as PDP_Matching_Submit_Buyer from "./PDP_Matching_Submit_Buyer.mjs";
import * as PDP_Matching_Details_Buyer from "./PDP_Matching_Details_Buyer.mjs";
import * as PDP_Matching_SelectGrade_Buyer from "./PDP_Matching_SelectGrade_Buyer.mjs";
import * as PDP_Matching_DemeterChart_Buyer from "./PDP_Matching_DemeterChart_Buyer.mjs";
import * as PDP_Matching_DemeterTable_Buyer from "./PDP_Matching_DemeterTable_Buyer.mjs";
import * as PDPMatchingBuyer_fragment_graphql from "../../../../__generated__/PDPMatchingBuyer_fragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(PDPMatchingBuyer_fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPMatchingBuyer_fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPMatchingBuyer_fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPMatchingBuyer_fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function PDP_Matching_Buyer$MO$Divider(Props) {
  return React.createElement("div", {
              className: "w-full h-3 bg-gray-100"
            });
}

var Divider = {
  make: PDP_Matching_Buyer$MO$Divider
};

function PDP_Matching_Buyer$MO$GradeCard(Props) {
  var onClick = Props.onClick;
  return React.createElement("div", {
              className: "w-full bg-green-50 rounded-xl p-6"
            }, React.createElement("div", {
                  className: "flex items-center"
                }, React.createElement("img", {
                      className: "w-6 h-6 object-contain mr-2",
                      src: "/icons/grade-green-circle@3x.png"
                    }), React.createElement("h1", {
                      className: "text-black font-bold text-base"
                    }, "신선하이 등급으로 필요한 시세를 한눈에")), React.createElement("div", {
                  className: "mt-2"
                }, React.createElement("p", {
                      className: "text-sm text-gray-600"
                    }, ReactNl2br("고객의 구매 목적을 고려한 신선하이 등급을 통해\n상품의 품질별 시세의 흐름을 한눈에 파악할 수 있습니다."))), React.createElement("button", {
                  className: "mt-4 flex items-center",
                  onClick: onClick
                }, React.createElement("span", {
                      className: "text-sm text-primary font-bold"
                    }, "신선하이 등급보러가기"), React.createElement(IconArrow.make, {
                      height: "14",
                      width: "14",
                      stroke: "#12b564"
                    })));
}

var GradeCard = {
  make: PDP_Matching_Buyer$MO$GradeCard
};

function PDP_Matching_Buyer$MO(Props) {
  var query = Props.query;
  var user = Curry._1(CustomHooks.User.Buyer.use2, undefined);
  var router = Router.useRouter();
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  var weeklyMarketPrices = match.weeklyMarketPrices;
  var representativeWeight = match.representativeWeight;
  var match$1 = React.useState(function () {
        return /* Hide */0;
      });
  var setShowModal = match$1[1];
  var match$2 = React.useState(function () {
        return "high";
      });
  var selectedGroup = match$2[0];
  var tmp;
  if (typeof user === "number") {
    tmp = user !== 0 ? React.createElement("div", {
            className: "w-full pt-[113%] relative"
          }, React.createElement("img", {
                className: "w-full h-full object-contain absolute top-0 left-0",
                src: "/images/chart_placeholder.png"
              }), React.createElement("div", {
                className: "absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-center"
              }, React.createElement("div", {
                    className: "text-center mb-4"
                  }, ReactNl2br("회원 로그인 후\n전국 도매시장 주간 시세를 확인해보세요")), React.createElement(Link, {
                    href: "/buyer/signin?redirect=" + router.asPath,
                    children: React.createElement("a", undefined, React.createElement("span", {
                              className: "mt-2 px-3 py-2 rounded-xl border border-primary text-primary"
                            }, "로그인하고 시세 확인하기"))
                  }))) : React.createElement("div", {
            className: "w-full pt-[113%] relative"
          }, React.createElement("img", {
                className: "w-full h-full object-contain absolute top-0 left-0",
                src: "/images/chart_placeholder.png"
              }));
  } else if (weeklyMarketPrices !== undefined) {
    var fragmentRefs$1 = weeklyMarketPrices.fragmentRefs;
    tmp = React.createElement(React.Fragment, undefined, React.createElement(PDP_Matching_DemeterChart_Buyer.make, {
              query: fragmentRefs$1,
              selectedGroup: selectedGroup,
              representativeWeight: representativeWeight
            }), React.createElement(PDP_Matching_DemeterTable_Buyer.make, {
              query: fragmentRefs$1,
              selectedGroup: selectedGroup,
              representativeWeight: representativeWeight
            }));
  } else {
    tmp = null;
  }
  return React.createElement("div", {
              className: "w-full min-h-screen"
            }, React.createElement(Header_Buyer.Mobile.make, {
                  key: router.asPath
                }), React.createElement("div", {
                  className: "w-full bg-white"
                }, React.createElement("div", {
                      className: "w-full max-w-3xl mx-auto relative bg-white min-h-screen"
                    }, React.createElement(PDP_Matching_Image_Buyer.make, {
                          src: match.image.thumb1000x1000
                        }), React.createElement("section", {
                          className: "px-4"
                        }, React.createElement(PDP_Matching_Title.MO.make, {
                              query: fragmentRefs,
                              selectedGroup: selectedGroup
                            })), React.createElement("section", {
                          className: "px-4"
                        }, React.createElement(PDP_Matching_SelectGrade_Buyer.make, {
                              setShowModal: setShowModal,
                              query: fragmentRefs,
                              selectedGroup: selectedGroup,
                              setSelectedGroup: match$2[1]
                            })), React.createElement("section", {
                          className: "py-6"
                        }, tmp), React.createElement(PDP_Matching_Buyer$MO$Divider, {}), React.createElement("section", {
                          className: "px-4"
                        }, React.createElement(PDP_Matching_Details_Buyer.make, {
                              query: fragmentRefs
                            })), React.createElement(PDP_Matching_Buyer$MO$Divider, {}), React.createElement("section", {
                          className: "px-4 pt-4 pb-16"
                        }, React.createElement(PDP_Matching_Buyer$MO$GradeCard, {
                              onClick: (function (param) {
                                  return setShowModal(function (param) {
                                              return /* Show */{
                                                      _0: /* GradeGuide */0
                                                    };
                                            });
                                })
                            }))), React.createElement(PDP_Matching_Submit_Buyer.MO.make, {
                      setShowModal: setShowModal,
                      selectedGroup: selectedGroup
                    }), React.createElement(PDP_Matching_Modals_Buyer.MO.make, {
                      show: match$1[0],
                      setShow: setShowModal,
                      query: fragmentRefs
                    })), React.createElement(Footer_Buyer.MO.make, {}));
}

var MO = {
  Divider: Divider,
  GradeCard: GradeCard,
  make: PDP_Matching_Buyer$MO
};

function PDP_Matching_Buyer(Props) {
  var deviceType = Props.deviceType;
  var query = Props.query;
  if (deviceType !== 0) {
    return React.createElement(PDP_Matching_Buyer$MO, {
                query: query
              });
  } else {
    return null;
  }
}

var make = PDP_Matching_Buyer;

export {
  Fragment ,
  MO ,
  make ,
  
}
/* react Not a pure module */

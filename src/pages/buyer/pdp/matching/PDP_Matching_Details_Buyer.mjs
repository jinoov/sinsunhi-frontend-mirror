// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDPMatchingDetailsBuyer_fragment_graphql from "../../../../__generated__/PDPMatchingDetailsBuyer_fragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(PDPMatchingDetailsBuyer_fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPMatchingDetailsBuyer_fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPMatchingDetailsBuyer_fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPMatchingDetailsBuyer_fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function PDP_Matching_Details_Buyer$Card(Props) {
  var label = Props.label;
  var value = Props.value;
  return React.createElement("div", {
              className: "p-3 border-gray-150 border rounded-lg flex flex-col"
            }, React.createElement("span", {
                  className: "text-xs text-gray-500"
                }, label), React.createElement("span", {
                  className: "mt-1 text-sm text-gray-800"
                }, value));
}

var Card = {
  make: PDP_Matching_Details_Buyer$Card
};

function PDP_Matching_Details_Buyer(Props) {
  var query = Props.query;
  var match = use(query);
  var periodPabel = String(match.releaseStartMonth) + "~" + String(match.releaseEndMonth) + "월";
  return React.createElement("section", {
              className: "w-full py-6"
            }, React.createElement("h1", {
                  className: "text-black font-bold text-lg"
                }, "상품 상세"), React.createElement("ol", {
                  className: "mt-4 w-full flex overflow-x-scroll scrollbar-hide"
                }, Belt_Option.mapWithDefault(Belt_Option.keep(match.origin, (function (origin$p) {
                            return origin$p !== "";
                          })), null, (function (origin$p) {
                        return React.createElement("li", {
                                    className: "mr-2"
                                  }, React.createElement(PDP_Matching_Details_Buyer$Card, {
                                        label: "원산지",
                                        value: origin$p
                                      }));
                      })), React.createElement("li", undefined, React.createElement(PDP_Matching_Details_Buyer$Card, {
                          label: "출하 시기",
                          value: periodPabel
                        }))));
}

var make = PDP_Matching_Details_Buyer;

export {
  Fragment ,
  Card ,
  make ,
  
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Locale from "../../../../utils/Locale.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Pervasives from "rescript/lib/es6/pervasives.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Hooks from "react-relay/hooks";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDPMatchingDemeterTableBuyer_fragment_graphql from "../../../../__generated__/PDPMatchingDemeterTableBuyer_fragment_graphql.mjs";

function use(fRef) {
  var data = Hooks.useFragment(PDPMatchingDemeterTableBuyer_fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPMatchingDemeterTableBuyer_fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = Hooks.useFragment(PDPMatchingDemeterTableBuyer_fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPMatchingDemeterTableBuyer_fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  use: use,
  useOpt: useOpt
};

function makeTableData(raw, representativeWeight) {
  var arr = Belt_Array.keepMap(raw, (function (r) {
          return r.higher;
        }));
  var arr$1 = Belt_Array.keepMap(raw, (function (r) {
          return r.higher;
        }));
  var arr$2 = Belt_Array.keepMap(raw, (function (r) {
          return r.mean;
        }));
  var arr$3 = Belt_Array.keepMap(raw, (function (r) {
          return r.mean;
        }));
  var arr$4 = Belt_Array.keepMap(raw, (function (r) {
          return r.lower;
        }));
  var arr$5 = Belt_Array.keepMap(raw, (function (r) {
          return r.lower;
        }));
  return {
          higherMax: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr) ? undefined : arr, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.min_int, (function (prim0, prim1) {
                                    if (prim0 > prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (max) {
                  return max * representativeWeight;
                })),
          higherMin: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr$1) ? undefined : arr$1, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.max_int, (function (prim0, prim1) {
                                    if (prim0 < prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (min) {
                  return min * representativeWeight;
                })),
          meanMax: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr$2) ? undefined : arr$2, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.min_int, (function (prim0, prim1) {
                                    if (prim0 > prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (max) {
                  return max * representativeWeight;
                })),
          meanMin: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr$3) ? undefined : arr$3, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.max_int, (function (prim0, prim1) {
                                    if (prim0 < prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (min) {
                  return min * representativeWeight;
                })),
          lowerMax: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr$4) ? undefined : arr$4, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.min_int, (function (prim0, prim1) {
                                    if (prim0 > prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (max) {
                  return max * representativeWeight;
                })),
          lowerMin: Belt_Option.map(Belt_Option.map(Garter_Array.isEmpty(arr$5) ? undefined : arr$5, (function (arr) {
                      return Belt_Array.reduce(arr, Pervasives.max_int, (function (prim0, prim1) {
                                    if (prim0 < prim1) {
                                      return prim0;
                                    } else {
                                      return prim1;
                                    }
                                  }));
                    })), (function (min) {
                  return min * representativeWeight;
                }))
        };
}

var TableParser = {
  makeTableData: makeTableData
};

function PDP_Matching_DemeterTable_Buyer(Props) {
  var query = Props.query;
  var selectedGroup = Props.selectedGroup;
  var representativeWeight = Props.representativeWeight;
  var match = use(query);
  var highTableData = makeTableData(Belt_Array.map(match.high, (function (price) {
              return {
                      dealingDate: price.dealingDate,
                      higher: price.higher,
                      mean: price.mean,
                      lower: price.lower
                    };
            })), representativeWeight);
  var lowTableData = makeTableData(Belt_Array.map(match.low, (function (price) {
              return {
                      dealingDate: price.dealingDate,
                      higher: price.higher,
                      mean: price.mean,
                      lower: price.lower
                    };
            })), representativeWeight);
  var mediumTableData = makeTableData(Belt_Array.map(match.medium, (function (price) {
              return {
                      dealingDate: price.dealingDate,
                      higher: price.higher,
                      mean: price.mean,
                      lower: price.lower
                    };
            })), representativeWeight);
  var match$1;
  switch (selectedGroup) {
    case "high" :
        match$1 = highTableData;
        break;
    case "low" :
        match$1 = lowTableData;
        break;
    case "medium" :
        match$1 = mediumTableData;
        break;
    default:
      match$1 = highTableData;
  }
  var func = Locale.Float.show;
  var func$1 = Locale.Float.show;
  var func$2 = Locale.Float.show;
  var func$3 = Locale.Float.show;
  var func$4 = Locale.Float.show;
  var func$5 = Locale.Float.show;
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "px-5 grid grid-rows-4 grid-flow-col mb-2"
                }, React.createElement("div", {
                      className: "grid grid-cols-4 grid-flow-row pb-1 border-b"
                    }, React.createElement("div", {
                          className: "col-start-3 text-right"
                        }, "주간 최고"), React.createElement("div", {
                          className: "col-start-4 text-right"
                        }, "주간 최저")), React.createElement("div", {
                      className: "grid grid-cols-4 grid-flow-row py-2"
                    }, React.createElement("div", {
                          className: "text-left inline-flex items-center"
                        }, React.createElement("div", {
                              className: "w-2 h-2 rounded-full bg-orange-500 mr-1"
                            }), "최대가"), React.createElement("div", {
                          className: "col-start-3 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.higherMax, (function (eta) {
                                        return Curry._3(func, undefined, eta, 0);
                                      })), "-") + "원")), React.createElement("div", {
                          className: "col-start-4 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.higherMin, (function (eta) {
                                        return Curry._3(func$1, undefined, eta, 0);
                                      })), "-") + "원"))), React.createElement("div", {
                      className: "grid grid-cols-4 grid-flow-row py-2"
                    }, React.createElement("div", {
                          className: "text-left inline-flex items-center"
                        }, React.createElement("div", {
                              className: "w-2 h-2 rounded-full bg-green-500 mr-1"
                            }), "평균가"), React.createElement("div", {
                          className: "col-start-3 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.meanMax, (function (eta) {
                                        return Curry._3(func$2, undefined, eta, 0);
                                      })), "-") + "원")), React.createElement("div", {
                          className: "col-start-4 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.meanMin, (function (eta) {
                                        return Curry._3(func$3, undefined, eta, 0);
                                      })), "-") + "원"))), React.createElement("div", {
                      className: "grid grid-cols-4 grid-flow-row py-2"
                    }, React.createElement("div", {
                          className: "text-left inline-flex items-center"
                        }, React.createElement("div", {
                              className: "w-2 h-2 rounded-full bg-blue-500 mr-1"
                            }), "최소가"), React.createElement("div", {
                          className: "col-start-3 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.lowerMax, (function (eta) {
                                        return Curry._3(func$4, undefined, eta, 0);
                                      })), "-") + "원")), React.createElement("div", {
                          className: "col-start-4 text-right"
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, Belt_Option.getWithDefault(Belt_Option.map(match$1.lowerMin, (function (eta) {
                                        return Curry._3(func$5, undefined, eta, 0);
                                      })), "-") + "원")))), React.createElement("div", {
                  className: "text-right text-xs text-gray-500 px-5"
                }, "농림수산부식품교육문화정보원", React.createElement("br", undefined), "전국 도매시장 평균 거래가"));
}

var make = PDP_Matching_DemeterTable_Buyer;

export {
  Fragment ,
  TableParser ,
  make ,
  
}
/* react Not a pure module */

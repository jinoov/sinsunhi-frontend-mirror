// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "@rescript/react/src/React.mjs";
import * as React$1 from "react";
import * as DataGtm from "../../../../utils/DataGtm.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as CartLinkIcon from "../../../../components/common/CartLinkIcon.mjs";
import * as HomeLinkIcon from "../../../../components/HomeLinkIcon.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as Webapi__Dom__Element from "rescript-webapi/src/Webapi/Dom/Webapi__Dom__Element.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as PDPMatchingHeaderBuyer_fragment_graphql from "../../../../__generated__/PDPMatchingHeaderBuyer_fragment_graphql.mjs";
import * as PDPMatchingHeaderBuyer_TabButton_fragment_graphql from "../../../../__generated__/PDPMatchingHeaderBuyer_TabButton_fragment_graphql.mjs";

function use(fRef) {
  var data = ReactRelay.useFragment(PDPMatchingHeaderBuyer_fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPMatchingHeaderBuyer_fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(PDPMatchingHeaderBuyer_fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPMatchingHeaderBuyer_fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  use: use,
  useOpt: useOpt
};

function use$1(fRef) {
  var data = ReactRelay.useFragment(PDPMatchingHeaderBuyer_TabButton_fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(PDPMatchingHeaderBuyer_TabButton_fragment_graphql.Internal.convertFragment, data);
}

function useOpt$1(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(PDPMatchingHeaderBuyer_TabButton_fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return PDPMatchingHeaderBuyer_TabButton_fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment_productStatus_decode = PDPMatchingHeaderBuyer_TabButton_fragment_graphql.Utils.productStatus_decode;

var Fragment_productStatus_fromString = PDPMatchingHeaderBuyer_TabButton_fragment_graphql.Utils.productStatus_fromString;

var Fragment$1 = {
  productStatus_decode: Fragment_productStatus_decode,
  productStatus_fromString: Fragment_productStatus_fromString,
  Types: undefined,
  Operation: undefined,
  use: use$1,
  useOpt: useOpt$1
};

function make(product) {
  var categoryNames = Belt_Array.map(product.category.fullyQualifiedName, (function (param) {
          return param.name;
        }));
  return {
          event: "click_matching_kind",
          ecommerce: {
            items: [{
                item_id: String(product.matchingProductId),
                item_name: product.displayName,
                currency: "KRW",
                item_category: Js_null_undefined.fromOption(Belt_Array.get(categoryNames, 0)),
                item_category2: Js_null_undefined.fromOption(Belt_Array.get(categoryNames, 1)),
                item_category3: Js_null_undefined.fromOption(Belt_Array.get(categoryNames, 2)),
                item_category4: Js_null_undefined.fromOption(Belt_Array.get(categoryNames, 3)),
                item_category5: Js_null_undefined.fromOption(Belt_Array.get(categoryNames, 4))
              }]
          }
        };
}

var ClickTabButtonGtm = {
  make: make
};

function PDP_Matching_Header_Buyer$TabButton(props) {
  var id = props.id;
  var router = Router.useRouter();
  var product = use$1(props.query);
  var matchingProductId = product.matchingProductId;
  var match = product.category;
  var categoryName = match.categoryName;
  var tabStatus = product.status === "RETIRE" ? /* Retired */0 : (
      props.currentCategoryId === match.categoryId ? /* Selected */1 : /* Selectable */2
    );
  switch (tabStatus) {
    case /* Retired */0 :
        return null;
    case /* Selected */1 :
        return React$1.createElement("button", {
                    className: "mx-2 text-gray-800 border-b-[2px] border-gray-800 pt-2 pb-3 whitespace-nowrap font-bold",
                    id: id,
                    disabled: true
                  }, categoryName);
    case /* Selectable */2 :
        return React$1.createElement("button", {
                    className: "mx-2 text-gray-400 border-b-[2px] border-transparent pt-2 pb-3 whitespace-nowrap",
                    id: id,
                    onClick: (function (param) {
                        DataGtm.push({
                              ecommerce: null
                            });
                        DataGtm.push(DataGtm.mergeUserIdUnsafe(make(product)));
                        var prim1 = "/products/" + String(matchingProductId) + "";
                        router.replace(prim1);
                      })
                  }, categoryName);
    
  }
}

var TabButton = {
  Fragment: Fragment$1,
  ClickTabButtonGtm: ClickTabButtonGtm,
  make: PDP_Matching_Header_Buyer$TabButton
};

function PDP_Matching_Header_Buyer(props) {
  var router = Router.useRouter();
  var direction = CustomHooks.Scroll.useScrollDirection(undefined);
  var match = use(props.query);
  var match$1 = match.category;
  var currentCategoryId = match$1.currentCategoryId;
  var match$2 = Belt_Option.mapWithDefault(match$1.parent, [
        "",
        []
      ], (function (param) {
          return [
                  param.name,
                  param.children
                ];
        }));
  var siblings = match$2[1];
  var foldableStyle;
  switch (direction) {
    case /* ScrollStop */0 :
        foldableStyle = "top-14";
        break;
    case /* ScrollDown */1 :
        foldableStyle = "top-0 ease-out duration-200";
        break;
    case /* ScrollUp */2 :
        foldableStyle = "top-14 ease-out duration-200";
        break;
    
  }
  var scrollContainerId = "horizontal-scroll-container";
  var makeTabId = function (suffix) {
    return "display-category-" + suffix + "";
  };
  React$1.useEffect((function () {
          var windowWidth = window.innerWidth;
          var container = document.getElementById(scrollContainerId);
          var target = document.getElementById(makeTabId(currentCategoryId));
          if (!(container == null) && !(target == null)) {
            var targetWidth = target.clientWidth;
            var target$p$p = Webapi__Dom__Element.asHtmlElement(target);
            var targetLeft = target$p$p !== undefined ? Caml_option.valFromOption(target$p$p).offsetLeft : undefined;
            Belt_Option.map(targetLeft, (function (targetLeft$p) {
                    container.scrollLeft = (targetLeft$p - (windowWidth / 2 | 0) | 0) + (targetWidth / 2 | 0) | 0;
                  }));
          }
          
        }), [
        currentCategoryId,
        siblings
      ]);
  return React$1.createElement(React$1.Fragment, undefined, React$1.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10 bg-white"
                }, React$1.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React$1.createElement("div", {
                          className: "px-5 py-4 flex items-center"
                        }, React$1.createElement("div", {
                              className: "w-1/3 flex justify-start"
                            }, React$1.createElement("button", {
                                  onClick: (function (param) {
                                      router.back();
                                    })
                                }, React$1.createElement("img", {
                                      className: "w-6 h-6 rotate-180",
                                      src: "/assets/arrow-right.svg"
                                    }))), React$1.createElement("div", {
                              className: "w-1/3 flex justify-center"
                            }, React$1.createElement("span", {
                                  className: "font-bold text-xl"
                                }, match$2[0])), React$1.createElement("div", {
                              className: "w-1/3 flex justify-end gap-2"
                            }, React$1.createElement(CartLinkIcon.make, {}), React$1.createElement(HomeLinkIcon.make, {}))))), React$1.createElement("div", {
                  className: "w-full fixed z-[5] bg-white left-0 " + foldableStyle
                }, React$1.createElement("section", {
                      className: "w-full max-w-3xl mx-auto bg-white border-b border-gray-50"
                    }, React$1.createElement("ol", {
                          className: "overflow-x-scroll scrollbar-hide flex items-center px-2",
                          id: scrollContainerId
                        }, Belt_Array.map(siblings, (function (param) {
                                var matchingProduct = param.matchingProduct;
                                if (matchingProduct === undefined) {
                                  return null;
                                }
                                var id = makeTabId(param.categoryId);
                                return React.createElementWithKey(PDP_Matching_Header_Buyer$TabButton, {
                                            id: id,
                                            query: matchingProduct.fragmentRefs,
                                            currentCategoryId: currentCategoryId
                                          }, id);
                              }))))), React$1.createElement("div", {
                  className: "w-full h-[102px]"
                }));
}

var make$1 = PDP_Matching_Header_Buyer;

export {
  Fragment ,
  TabButton ,
  make$1 as make,
}
/* React Not a pure module */

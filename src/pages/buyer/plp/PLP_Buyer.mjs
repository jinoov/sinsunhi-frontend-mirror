// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../../../constants/Env.mjs";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as RelayEnv from "../../../constants/RelayEnv.mjs";
import Head from "next/head";
import * as CustomHooks from "../../../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as DeviceDetect from "../../../bindings/DeviceDetect.mjs";
import * as Bottom_Navbar from "../../../components/Bottom_Navbar.mjs";
import * as PLP_All_Buyer from "./PLP_All_Buyer.mjs";
import * as OpenGraph_Header from "../../../components/OpenGraph_Header.mjs";
import * as ServerSideHelper from "../../../utils/ServerSideHelper.mjs";
import * as PLP_DisplayCategory_Buyer from "./PLP_DisplayCategory_Buyer.mjs";

function $$default(props) {
  var deviceType = props.deviceType;
  var router = Router.useRouter();
  var cid = Js_dict.get(router.query, "cid");
  var displayCategoryId = cid !== undefined ? cid : Js_dict.get(router.query, "category-id");
  var isCsr = CustomHooks.useCsr(undefined);
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "신선하이")
                }), displayCategoryId !== undefined ? (
                isCsr ? React.createElement(PLP_DisplayCategory_Buyer.make, {
                        deviceType: deviceType,
                        displayCategoryId: displayCategoryId
                      }) : React.createElement(PLP_DisplayCategory_Buyer.Placeholder.make, {
                        deviceType: deviceType
                      })
              ) : React.createElement(React.Fragment, undefined, React.createElement(Head, {
                        children: null
                      }, React.createElement("title", undefined, "신선하이 | 전체상품"), React.createElement("meta", {
                            content: "농산물 소싱은 신선하이에서! | 신선하이에 있는 모든 상품을 만나보세요.",
                            name: "description"
                          })), React.createElement(OpenGraph_Header.make, {
                        title: "신선하이 | 전체상품",
                        description: "신선하이에 있는 모든 상품을 만나보세요"
                      }), isCsr ? React.createElement(PLP_All_Buyer.make, {
                          deviceType: deviceType
                        }) : React.createElement(PLP_All_Buyer.Placeholder.make, {
                          deviceType: deviceType
                        })), React.createElement(Bottom_Navbar.make, {
                  deviceType: deviceType
                }));
}

function getServerSideProps(ctx) {
  var environment = RelayEnv.environment({
        TAG: /* SinsunMarket */0,
        _0: Env.graphqlApiUrl
      });
  var gnbAndCategoryQuery = ServerSideHelper.gnbAndCategory(environment);
  var features = ServerSideHelper.featureFlags(environment);
  var deviceType = DeviceDetect.detectDeviceFromCtx2(ctx.req);
  return ServerSideHelper.makeResultWithQuery(Promise.allSettled([
                  gnbAndCategoryQuery,
                  features
                ]), environment, {
              deviceType: deviceType
            });
}

export {
  $$default ,
  $$default as default,
  getServerSideProps ,
}
/* Env Not a pure module */

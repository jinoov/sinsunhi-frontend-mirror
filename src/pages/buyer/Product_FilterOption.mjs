// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_string from "rescript/lib/es6/js_string.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function make(s) {
  if (s === undefined) {
    return ;
  }
  var len = s.length;
  if (len >= 3) {
    return ;
  }
  switch (len) {
    case 0 :
        return ;
    case 1 :
        var match = s[0];
        switch (match) {
          case "delivery" :
              return "DELIVERY";
          case "matching" :
              return "MATCHING";
          default:
            return ;
        }
    case 2 :
        var match$1 = s[0];
        if (match$1 !== "matching") {
          return ;
        }
        var match$2 = s[1];
        if (match$2 === "delivery") {
          return "ALL";
        } else {
          return ;
        }
    
  }
}

function toCheckBoxSelection(t) {
  if (t === "DELIVERY") {
    return [
            false,
            true
          ];
  } else if (t === "MATCHING") {
    return [
            true,
            false
          ];
  } else {
    return [
            true,
            true
          ];
  }
}

function fromCheckBoxSelection(matching, delivery) {
  if (matching) {
    if (delivery) {
      return "ALL";
    } else {
      return "MATCHING";
    }
  } else if (delivery) {
    return "DELIVERY";
  } else {
    return ;
  }
}

function toUrlParameter(t) {
  return (
            t === "DELIVERY" ? ["delivery"] : (
                t === "MATCHING" ? ["matching"] : [
                    "matching",
                    "delivery"
                  ]
              )
          ).toString();
}

function toLabel(t) {
  if (t === "DELIVERY") {
    return "즉시구매";
  } else if (t === "MATCHING") {
    return "견적요청";
  } else {
    return "전체";
  }
}

function fromUrlParameter(s) {
  return make(Belt_Option.map(s, (function (param) {
                    return Js_string.split(",", param);
                  })));
}

function toQueryParam(t) {
  if (t === "DELIVERY") {
    return [
            "NORMAL",
            "QUOTABLE"
          ];
  } else if (t === "MATCHING") {
    return [
            "MATCHING",
            "QUOTED",
            "QUOTABLE"
          ];
  } else {
    return [
            "MATCHING",
            "QUOTED",
            "NORMAL",
            "QUOTABLE"
          ];
  }
}

var Section = {
  make: make,
  toCheckBoxSelection: toCheckBoxSelection,
  fromCheckBoxSelection: fromCheckBoxSelection,
  toUrlParameter: toUrlParameter,
  toLabel: toLabel,
  fromUrlParameter: fromUrlParameter,
  toQueryParam: toQueryParam
};

function make$1(sectionType, sortStr) {
  if (sortStr === undefined) {
    return ;
  }
  switch (sortStr) {
    case "POPULARITY_DESC" :
        return "POPULARITY_DESC";
    case "UPDATED_ASC" :
        return "UPDATED_ASC";
    case "UPDATED_DESC" :
        return "UPDATED_DESC";
    default:
      if (sectionType === "MATCHING") {
        switch (sortStr) {
          case "PRICE_DESC" :
              return "PRICE_PER_KG_DESC";
          case "PRICE_ASC" :
          case "PRICE_PER_KG_ASC" :
              return "PRICE_PER_KG_ASC";
          default:
            
        }
      }
      
  }
  switch (sortStr) {
    case "PRICE_DESC" :
        return "PRICE_DESC";
    case "PRICE_ASC" :
    case "PRICE_PER_KG_ASC" :
        return "PRICE_ASC";
    default:
      return ;
  }
}

function makeSearch(sectionType, sortStr) {
  if (sortStr === undefined) {
    return ;
  }
  switch (sortStr) {
    case "POPULARITY_DESC" :
        return "POPULARITY_DESC";
    case "RELEVANCE_DESC" :
        return "RELEVANCE_DESC";
    case "UPDATED_ASC" :
        return "UPDATED_ASC";
    case "UPDATED_DESC" :
        return "UPDATED_DESC";
    default:
      if (sectionType === "MATCHING") {
        switch (sortStr) {
          case "PRICE_DESC" :
              return "PRICE_PER_KG_DESC";
          case "PRICE_ASC" :
          case "PRICE_PER_KG_ASC" :
              return "PRICE_PER_KG_ASC";
          default:
            
        }
      }
      
  }
  switch (sortStr) {
    case "PRICE_DESC" :
        return "PRICE_DESC";
    case "PRICE_ASC" :
    case "PRICE_PER_KG_ASC" :
        return "PRICE_ASC";
    default:
      return ;
  }
}

function toSortLabel(sort) {
  if (sort === "PRICE_DESC") {
    return "높은가격순";
  } else if (sort === "POPULARITY_DESC") {
    return "인기순";
  } else if (sort === "RELEVANCE_DESC") {
    return "관련도순";
  } else if (sort === "PRICE_ASC") {
    return "낮은가격순";
  } else if (sort === "UPDATED_ASC") {
    return "오래된순";
  } else if (sort === "PRICE_PER_KG_ASC") {
    return "낮은가격순(kg당)";
  } else if (sort === "PRICE_PER_KG_DESC") {
    return "높은가격순(kg당)";
  } else {
    return "최신순";
  }
}

function toString(sort) {
  if (sort === "PRICE_DESC") {
    return "PRICE_DESC";
  } else if (sort === "POPULARITY_DESC") {
    return "POPULARITY_DESC";
  } else if (sort === "RELEVANCE_DESC") {
    return "RELEVANCE_DESC";
  } else if (sort === "PRICE_ASC") {
    return "PRICE_ASC";
  } else if (sort === "UPDATED_ASC") {
    return "UPDATED_ASC";
  } else if (sort === "PRICE_PER_KG_ASC") {
    return "PRICE_PER_KG_ASC";
  } else if (sort === "PRICE_PER_KG_DESC") {
    return "PRICE_PER_KG_DESC";
  } else {
    return "UPDATED_DESC";
  }
}

function toSearchProductParam(sort) {
  if (sort === "PRICE_DESC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "DESC_NULLS_LAST",
              field: "PRICE"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  } else if (sort === "POPULARITY_DESC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "DESC",
              field: "POPULARITY"
            }
          ];
  } else if (sort === "RELEVANCE_DESC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "DESC",
              field: "RELEVANCE_SCORE"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  } else if (sort === "PRICE_ASC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "ASC_NULLS_LAST",
              field: "PRICE"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  } else if (sort === "UPDATED_ASC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "ASC",
              field: "UPDATED_AT"
            }
          ];
  } else if (sort === "PRICE_PER_KG_ASC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "ASC_NULLS_LAST",
              field: "PRICE_PER_KG"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  } else if (sort === "PRICE_PER_KG_DESC") {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "DESC_NULLS_LAST",
              field: "PRICE_PER_KG"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  } else {
    return [
            {
              direction: "ASC",
              field: "STATUS_PRIORITY"
            },
            {
              direction: "DESC",
              field: "UPDATED_AT"
            }
          ];
  }
}

var Sort = {
  defaultValue: "POPULARITY_DESC",
  searchDefaultValue: "RELEVANCE_DESC",
  make: make$1,
  makeSearch: makeSearch,
  toSortLabel: toSortLabel,
  toString: toString,
  toSearchProductParam: toSearchProductParam
};

var defaultFilterOptionUrlParam = "section=matching,delivery&sort=POPULARITY_DESC";

export {
  Section ,
  Sort ,
  defaultFilterOptionUrlParam ,
}
/* No side effect */

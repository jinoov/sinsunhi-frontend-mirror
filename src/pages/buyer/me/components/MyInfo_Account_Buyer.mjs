// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Dialog from "../../../../components/common/Dialog.mjs";
import * as IconArrow from "../../../../components/svgs/IconArrow.mjs";
import Link from "next/link";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../../utils/CustomHooks.mjs";
import * as ReactEvents from "../../../../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as ChannelTalkHelper from "../../../../utils/ChannelTalkHelper.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as MyInfo_Layout_Buyer from "./MyInfo_Layout_Buyer.mjs";
import * as Update_Address_Buyer from "../../../../components/Update_Address_Buyer.mjs";
import * as Update_Manager_Buyer from "../../../../components/Update_Manager_Buyer.mjs";
import * as Update_Password_Buyer from "../../../../components/Update_Password_Buyer.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as Update_CompanyName_Buyer from "../../../../components/Update_CompanyName_Buyer.mjs";
import * as Update_PhoneNumber_Buyer from "../../../../components/Update_PhoneNumber_Buyer.mjs";
import * as Update_MarketingTerm_Buyer from "../../../../components/Update_MarketingTerm_Buyer.mjs";
import * as Update_BusinessNumber_Buyer from "../../../../components/Update_BusinessNumber_Buyer.mjs";
import * as Account_Signout_Buyer_Mobile from "./Account_Signout_Buyer_Mobile.mjs";
import * as MyInfoAccountBuyer_Fragment_graphql from "../../../../__generated__/MyInfoAccountBuyer_Fragment_graphql.mjs";
import * as MyInfo_MarketingTerm_Switcher_Buyer from "./MyInfo_MarketingTerm_Switcher_Buyer.mjs";
import WriteSvg from "../../../../../public/assets/write.svg";

function use(fRef) {
  var data = ReactRelay.useFragment(MyInfoAccountBuyer_Fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(MyInfoAccountBuyer_Fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(MyInfoAccountBuyer_Fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return MyInfoAccountBuyer_Fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment_phoneVerificationStatus_decode = MyInfoAccountBuyer_Fragment_graphql.Utils.phoneVerificationStatus_decode;

var Fragment_phoneVerificationStatus_fromString = MyInfoAccountBuyer_Fragment_graphql.Utils.phoneVerificationStatus_fromString;

var Fragment = {
  phoneVerificationStatus_decode: Fragment_phoneVerificationStatus_decode,
  phoneVerificationStatus_fromString: Fragment_phoneVerificationStatus_fromString,
  Types: undefined,
  Operation: undefined,
  use: use,
  useOpt: useOpt
};

function MyInfo_Account_Buyer$LogoutDialog(Props) {
  var isOpen = Props.isOpen;
  var onCancel = Props.onCancel;
  var router = Router.useRouter();
  var user = CustomHooks.Auth.use(undefined);
  var logOut = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  CustomHooks.Auth.logOut(undefined);
                  ChannelTalkHelper.logout(undefined);
                  var role = Belt_Option.map(CustomHooks.Auth.toOption(user), (function (user$p) {
                          return user$p.role;
                        }));
                  if (role === undefined) {
                    return ;
                  }
                  switch (role) {
                    case /* Seller */0 :
                        router.push("/seller/signin");
                        return ;
                    case /* Buyer */1 :
                        router.push("/buyer/signin");
                        return ;
                    case /* Admin */2 :
                        router.push("/admin/signin");
                        return ;
                    
                  }
                }), param);
  };
  return React.createElement(Dialog.make, {
              isShow: isOpen,
              children: React.createElement("div", {
                    className: "text-center"
                  }, "로그아웃 하시겠어요?"),
              onCancel: onCancel,
              onConfirm: logOut,
              textOnCancel: "닫기",
              textOnConfirm: "로그아웃",
              kindOfConfirm: /* Negative */1,
              boxStyle: "rounded-xl"
            });
}

var LogoutDialog = {
  make: MyInfo_Account_Buyer$LogoutDialog
};

var writeIcon = WriteSvg;

function MyInfo_Account_Buyer$PC(Props) {
  var query = Props.query;
  var router = Router.useRouter();
  var match = use(query);
  var verifications = match.verifications;
  var email = match.uid;
  var company = match.name;
  var manager = match.manager;
  var address = match.address;
  var displayBizNumber = Belt_Option.mapWithDefault(match.businessRegistrationNumber, "", (function (str) {
          return str.replace(/(^\d{3})(\d+)?(\d{5})$/, "$1-$2-$3");
        }));
  var displayPhone = match.phone.replace(/(^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3");
  var match$1 = React.useState(function () {
        return false;
      });
  var setUpdatePasswordOpen = match$1[1];
  var match$2 = React.useState(function () {
        return false;
      });
  var setUpdateCompanyOpen = match$2[1];
  var match$3 = React.useState(function () {
        return false;
      });
  var setUpdateManagerOpen = match$3[1];
  var match$4 = React.useState(function () {
        return false;
      });
  var setUpdatePhoneNumberOpen = match$4[1];
  var match$5 = React.useState(function () {
        return false;
      });
  var setUpdateBizNumberOpen = match$5[1];
  var match$6 = React.useState(function () {
        return false;
      });
  var setUpdateAddressOpen = match$6[1];
  var match$7 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowLogout = match$7[1];
  var match$8 = Belt_Option.map(verifications, (function (param) {
          return param.phoneVerificationStatus;
        }));
  var tmp;
  var exit = 0;
  if (match$8 === "VERIFIED") {
    tmp = null;
  } else {
    exit = 1;
  }
  if (exit === 1) {
    tmp = React.createElement("span", {
          className: "text-notice ml-2"
        }, "인증 필요");
  }
  var match$9 = Belt_Option.map(verifications, (function (param) {
          return param.isValidBusinessRegistrationNumberByViewer;
        }));
  var tmp$1;
  var exit$1 = 0;
  if (match$9 !== undefined && match$9) {
    tmp$1 = null;
  } else {
    exit$1 = 1;
  }
  if (exit$1 === 1) {
    tmp$1 = React.createElement("span", {
          className: "text-notice ml-2"
        }, "유효하지 않음");
  }
  var str = Belt_Option.getWithDefault(address, "");
  var tmp$2 = {
    isOpen: match$3[0],
    onClose: (function (param) {
        setUpdateManagerOpen(function (param) {
              return false;
            });
      })
  };
  if (manager !== undefined) {
    tmp$2.defaultValue = Caml_option.valFromOption(manager);
  }
  if (manager !== undefined) {
    tmp$2.key = manager;
  }
  return React.createElement(React.Fragment, undefined, React.createElement(MyInfo_Layout_Buyer.make, {
                  query: query,
                  children: React.createElement("div", {
                        className: "p-7 bg-white ml-4 w-full"
                      }, React.createElement("div", {
                            className: "font-bold text-2xl"
                          }, "계정정보"), React.createElement("div", {
                            className: "py-7 flex flex-col"
                          }, React.createElement("div", {
                                className: "mb-2"
                              }, React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "이메일"), email), React.createElement("div", {
                                    className: "flex pt-3 pb-5 border-b border-gray-100 items-center"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "비밀번호"), React.createElement("button", {
                                        className: "py-2 px-3 bg-gray-150 rounded-lg",
                                        onClick: (function (param) {
                                            setUpdatePasswordOpen(function (param) {
                                                  return true;
                                                });
                                          })
                                      }, "비밀번호 재설정"))), React.createElement("div", {
                                className: "mb-2"
                              }, React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "회사명"), React.createElement("div", {
                                        className: "flex items-center"
                                      }, company, React.createElement("button", {
                                            onClick: (function (param) {
                                                setUpdateCompanyOpen(function (param) {
                                                      return true;
                                                    });
                                              })
                                          }, React.createElement("img", {
                                                className: "ml-2",
                                                height: "16px",
                                                src: "/assets/write.svg",
                                                width: "16px"
                                              })))), React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "담당자명"), React.createElement("div", {
                                        className: "flex items-center"
                                      }, Belt_Option.getWithDefault(manager, ""), React.createElement("button", {
                                            onClick: (function (param) {
                                                setUpdateManagerOpen(function (param) {
                                                      return true;
                                                    });
                                              })
                                          }, React.createElement("img", {
                                                className: "ml-2",
                                                height: "16px",
                                                src: "/assets/write.svg",
                                                width: "16px"
                                              })))), React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "휴대전화번호"), React.createElement("div", {
                                        className: "flex items-center"
                                      }, displayPhone, React.createElement("button", {
                                            onClick: (function (param) {
                                                setUpdatePhoneNumberOpen(function (param) {
                                                      return true;
                                                    });
                                              })
                                          }, React.createElement("img", {
                                                className: "ml-2",
                                                height: "16px",
                                                src: "/assets/write.svg",
                                                width: "16px"
                                              })), tmp)), React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "사업자 등록번호"), React.createElement("div", {
                                        className: "flex items-center"
                                      }, displayBizNumber, React.createElement("button", {
                                            onClick: (function (param) {
                                                setUpdateBizNumberOpen(function (param) {
                                                      return true;
                                                    });
                                              })
                                          }, React.createElement("img", {
                                                className: "ml-2",
                                                height: "16px",
                                                src: "/assets/write.svg",
                                                width: "16px"
                                              })), tmp$1)), React.createElement("div", {
                                    className: "flex pt-3 pb-5 border-b border-gray-100"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "소재지"), React.createElement("div", {
                                        className: "flex items-center"
                                      }, React.createElement("p", {
                                            className: "text-left",
                                            style: {
                                              wordBreak: "keep-all"
                                            }
                                          }, Belt_Option.getWithDefault(address, "")), React.createElement("button", {
                                            onClick: (function (param) {
                                                setUpdateAddressOpen(function (param) {
                                                      return true;
                                                    });
                                              })
                                          }, React.createElement("img", {
                                                className: "ml-2",
                                                height: "16px",
                                                src: "/assets/write.svg",
                                                width: "16px"
                                              })), str === "" ? React.createElement("span", {
                                              className: "text-notice ml-2"
                                            }, "입력 필요") : null))), React.createElement("div", {
                                className: "mb-2"
                              }, React.createElement("div", {
                                    className: "flex py-5"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "서비스 이용동의"), React.createElement("div", {
                                        className: "w-full"
                                      }, React.createElement("div", {
                                            className: "py-3"
                                          }, React.createElement(Link, {
                                                href: "https://sinsun-policy.oopy.io/a9f5ca47-9dda-4a34-929c-60e1ce1dfbe5",
                                                children: React.createElement("a", {
                                                      className: "contents",
                                                      rel: "noopener",
                                                      target: "_blank"
                                                    }, React.createElement("span", {
                                                          className: "font-bold"
                                                        }, "필수약관1"), React.createElement("span", {
                                                          className: "ml-2 text-sm text-text-L3 "
                                                        }, "자세히 보기"))
                                              })), React.createElement("div", {
                                            className: "py-3"
                                          }, React.createElement(Link, {
                                                href: "https://sinsun-policy.oopy.io/3335fdb0-c235-4e17-8ecc-1c4977c506f9",
                                                children: React.createElement("a", {
                                                      className: "contents",
                                                      rel: "noopener",
                                                      target: "_blank"
                                                    }, React.createElement("span", {
                                                          className: "font-bold"
                                                        }, "필수약관2"), React.createElement("span", {
                                                          className: "ml-2 text-sm text-text-L3 "
                                                        }, "자세히 보기"))
                                              })), React.createElement("div", {
                                            className: "py-3 flex items-center justify-between w-full"
                                          }, React.createElement(Link, {
                                                href: "https://sinsun-policy.oopy.io/4f08bfe5-9ba7-4d1d-ba34-04281414ee00",
                                                children: React.createElement("a", {
                                                      className: "inline",
                                                      rel: "noopener",
                                                      target: "_blank"
                                                    }, React.createElement("span", {
                                                          className: "font-bold"
                                                        }, "마케팅 이용동의(선택)"), React.createElement("span", {
                                                          className: "ml-2 text-sm text-text-L3 "
                                                        }, "자세히 보기"))
                                              }), React.createElement(MyInfo_MarketingTerm_Switcher_Buyer.make, {
                                                query: match.fragmentRefs
                                              })))), React.createElement("div", {
                                    className: "flex py-5 items-center"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "로그아웃"), React.createElement("button", {
                                        className: "py-2 px-3 bg-gray-150 rounded-lg",
                                        onClick: (function (param) {
                                            setShowLogout(function (param) {
                                                  return /* Show */0;
                                                });
                                          })
                                      }, "로그아웃")), React.createElement("div", {
                                    className: "flex py-5 items-center"
                                  }, React.createElement("div", {
                                        className: "min-w-[168px] w-1/6 font-bold"
                                      }, "회원탈퇴"), React.createElement("button", {
                                        className: "py-2 px-3 bg-gray-150 rounded-lg",
                                        onClick: (function (param) {
                                            router.push("/buyer/me/account/leave");
                                          })
                                      }, "회원탈퇴"))), React.createElement("div", undefined), React.createElement("div", undefined)))
                }), React.createElement(Update_Password_Buyer.make, {
                  isOpen: match$1[0],
                  onClose: (function (param) {
                      setUpdatePasswordOpen(function (param) {
                            return false;
                          });
                    }),
                  email: email
                }), React.createElement(Update_CompanyName_Buyer.make, {
                  isOpen: match$2[0],
                  onClose: (function (param) {
                      setUpdateCompanyOpen(function (param) {
                            return false;
                          });
                    }),
                  defaultValue: company,
                  key: company
                }), React.createElement(Update_Manager_Buyer.make, tmp$2), React.createElement(Update_PhoneNumber_Buyer.make, {
                  isOpen: match$4[0],
                  onClose: (function (param) {
                      setUpdatePhoneNumberOpen(function (param) {
                            return false;
                          });
                    })
                }), React.createElement(Update_BusinessNumber_Buyer.make, {
                  isOpen: match$5[0],
                  onClose: (function (param) {
                      setUpdateBizNumberOpen(function (param) {
                            return false;
                          });
                    }),
                  defaultValue: displayBizNumber,
                  key: displayBizNumber
                }), React.createElement(Update_Address_Buyer.make, {
                  isOpen: match$6[0],
                  onClose: (function (param) {
                      setUpdateAddressOpen(function (param) {
                            return false;
                          });
                    }),
                  window: true
                }), React.createElement(MyInfo_Account_Buyer$LogoutDialog, {
                  isOpen: match$7[0],
                  onCancel: (function (param) {
                      setShowLogout(function (param) {
                            return /* Hide */1;
                          });
                    })
                }));
}

var PC = {
  writeIcon: writeIcon,
  make: MyInfo_Account_Buyer$PC
};

function MyInfo_Account_Buyer$Mobile(Props) {
  var query = Props.query;
  var match = use(query);
  var fragmentRefs = match.fragmentRefs;
  var verifications = match.verifications;
  var email = match.uid;
  var company = match.name;
  var manager = match.manager;
  var displayBizNumber = Belt_Option.mapWithDefault(match.businessRegistrationNumber, "", (function (str) {
          return str.replace(/(^\d{3})(\d+)?(\d{5})$/, "$1-$2-$3");
        }));
  var displayPhone = match.phone.replace(/(^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3");
  var match$1 = React.useState(function () {
        return false;
      });
  var setUpdatePasswordOpen = match$1[1];
  var match$2 = React.useState(function () {
        return false;
      });
  var setUpdateComponentOpen = match$2[1];
  var match$3 = React.useState(function () {
        return false;
      });
  var setUpdateManagerOpen = match$3[1];
  var match$4 = React.useState(function () {
        return false;
      });
  var setUpdatePhoneNumberOpen = match$4[1];
  var match$5 = React.useState(function () {
        return false;
      });
  var setUpdateBizNumberOpen = match$5[1];
  var match$6 = React.useState(function () {
        return false;
      });
  var setUpdateAddressOpen = match$6[1];
  var match$7 = React.useState(function () {
        return false;
      });
  var setUpdateTermOpen = match$7[1];
  var match$8 = React.useState(function () {
        return /* Hide */1;
      });
  var setShowLogout = match$8[1];
  var match$9 = React.useState(function () {
        return false;
      });
  var setSignoutOpen = match$9[1];
  var match$10 = Belt_Option.map(verifications, (function (param) {
          return param.phoneVerificationStatus;
        }));
  var tmp;
  var exit = 0;
  if (match$10 === "VERIFIED") {
    tmp = null;
  } else {
    exit = 1;
  }
  if (exit === 1) {
    tmp = React.createElement("span", {
          className: "text-notice ml-2"
        }, "인증 필요");
  }
  var match$11 = Belt_Option.map(verifications, (function (param) {
          return param.isValidBusinessRegistrationNumberByViewer;
        }));
  var tmp$1;
  var exit$1 = 0;
  if (match$11 !== undefined && match$11) {
    tmp$1 = null;
  } else {
    exit$1 = 1;
  }
  if (exit$1 === 1) {
    tmp$1 = React.createElement("span", {
          className: "text-notice ml-2"
        }, "유효하지 않음");
  }
  var str = Belt_Option.getWithDefault(match.address, "");
  var tmp$2 = {
    isOpen: match$3[0],
    onClose: (function (param) {
        setUpdateManagerOpen(function (param) {
              return false;
            });
      })
  };
  if (manager !== undefined) {
    tmp$2.defaultValue = Caml_option.valFromOption(manager);
  }
  if (manager !== undefined) {
    tmp$2.key = manager;
  }
  return React.createElement("div", {
              className: "block w-full bg-white absolute top-0 pt-14 min-h-screen"
            }, React.createElement("div", {
                  className: "w-full max-w-3xl mx-auto bg-white h-full"
                }, React.createElement("section", undefined, React.createElement("ol", {
                          className: "bg-white px-4"
                        }, React.createElement("li", {
                              className: "py-5 flex items-center w-full justify-between"
                            }, React.createElement("div", {
                                  className: "flex"
                                }, React.createElement("div", {
                                      className: "min-w-[105px] mr-2"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "이메일")), React.createElement("div", undefined, email))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdatePasswordOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 flex items-center w-full border-t border-gray-100 justify-between"
                                }, React.createElement("div", {
                                      className: "min-w-[105px] mr-2 text-left"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "비밀번호")), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        }))))), React.createElement("div", {
                          className: "h-3 bg-gray-100"
                        }), React.createElement("ol", {
                          className: "bg-white"
                        }, React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdateComponentOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 px-4 flex items-center w-full justify-between"
                                }, React.createElement("div", {
                                      className: "flex"
                                    }, React.createElement("div", {
                                          className: "min-w-[105px] mr-2 text-left"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "회사명")), company), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdateManagerOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 px-4 flex items-center w-full border-t border-gray-100 justify-between"
                                }, React.createElement("div", {
                                      className: "flex"
                                    }, React.createElement("div", {
                                          className: "min-w-[105px] mr-2 text-left"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "담당자명")), React.createElement("div", undefined, Belt_Option.getWithDefault(manager, ""))), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdatePhoneNumberOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 px-4 flex items-center w-full border-t border-gray-100 justify-between"
                                }, React.createElement("div", {
                                      className: "flex"
                                    }, React.createElement("div", {
                                          className: "min-w-[105px] mr-2 text-left"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "휴대전화번호")), React.createElement("div", {
                                          className: "flex flex-wrap"
                                        }, displayPhone, tmp)), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdateBizNumberOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 px-4 flex items-center w-full border-t border-gray-100 justify-between"
                                }, React.createElement("div", {
                                      className: "flex"
                                    }, React.createElement("div", {
                                          className: "min-w-[105px] mr-2 text-left"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "사업자 등록번호")), React.createElement("div", {
                                          className: "flex flex-wrap"
                                        }, displayBizNumber, tmp$1)), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdateAddressOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 px-4 flex items-center w-full border-t border-gray-100 justify-between"
                                }, React.createElement("div", {
                                      className: "flex"
                                    }, React.createElement("div", {
                                          className: "min-w-[105px] mr-2 text-left"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "소재지")), React.createElement("p", {
                                          className: "text-left",
                                          style: {
                                            wordBreak: "keep-all"
                                          }
                                        }, str === "" ? React.createElement("span", {
                                                className: "text-notice ml-2"
                                              }, "입력 필요") : str)), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        }))))), React.createElement("div", {
                          className: "h-3 bg-gray-100"
                        }), React.createElement("ol", {
                          className: "bg-white px-4 mb-6"
                        }, React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setUpdateTermOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 flex items-center w-full justify-between"
                                }, React.createElement("div", {
                                      className: "min-w-[105px] mr-2 text-left"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "서비스 이용동의")), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setShowLogout(function (param) {
                                        return /* Show */0;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 flex items-center w-full justify-between border-t border-gray-100"
                                }, React.createElement("div", {
                                      className: "min-w-[105px] mr-2 text-left"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "로그아웃")), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))), React.createElement("button", {
                              className: "w-full flex",
                              onClick: (function (param) {
                                  setSignoutOpen(function (param) {
                                        return true;
                                      });
                                })
                            }, React.createElement("li", {
                                  className: "py-5 flex items-center w-full justify-between border-t border-gray-100"
                                }, React.createElement("div", {
                                      className: "min-w-[105px] mr-2 text-left"
                                    }, React.createElement("span", {
                                          className: "font-bold"
                                        }, "회원탈퇴")), React.createElement("div", {
                                      className: ""
                                    }, React.createElement(IconArrow.make, {
                                          height: "16",
                                          width: "16",
                                          fill: "#B2B2B2"
                                        })))))), React.createElement(Update_Password_Buyer.make, {
                      isOpen: match$1[0],
                      onClose: (function (param) {
                          setUpdatePasswordOpen(function (param) {
                                return false;
                              });
                        }),
                      email: email
                    }), React.createElement(Update_CompanyName_Buyer.make, {
                      isOpen: match$2[0],
                      onClose: (function (param) {
                          setUpdateComponentOpen(function (param) {
                                return false;
                              });
                        }),
                      defaultValue: company,
                      key: company
                    }), React.createElement(Update_Manager_Buyer.make, tmp$2), React.createElement(Update_PhoneNumber_Buyer.make, {
                      isOpen: match$4[0],
                      onClose: (function (param) {
                          setUpdatePhoneNumberOpen(function (param) {
                                return false;
                              });
                        })
                    }), React.createElement(Update_BusinessNumber_Buyer.make, {
                      isOpen: match$5[0],
                      onClose: (function (param) {
                          setUpdateBizNumberOpen(function (param) {
                                return false;
                              });
                        }),
                      defaultValue: displayBizNumber,
                      key: displayBizNumber
                    }), React.createElement(Update_Address_Buyer.make, {
                      isOpen: match$6[0],
                      onClose: (function (param) {
                          setUpdateAddressOpen(function (param) {
                                return false;
                              });
                        })
                    }), React.createElement(Update_MarketingTerm_Buyer.make, {
                      isOpen: match$7[0],
                      onClose: (function (param) {
                          setUpdateTermOpen(function (param) {
                                return false;
                              });
                        }),
                      query: fragmentRefs
                    }), React.createElement(MyInfo_Account_Buyer$LogoutDialog, {
                      isOpen: match$8[0],
                      onCancel: (function (param) {
                          setShowLogout(function (param) {
                                return /* Hide */1;
                              });
                        })
                    }), React.createElement(Account_Signout_Buyer_Mobile.make, {
                      query: fragmentRefs,
                      isOpen: match$9[0],
                      onClose: (function (param) {
                          setSignoutOpen(function (param) {
                                return false;
                              });
                        })
                    })));
}

var Mobile = {
  make: MyInfo_Account_Buyer$Mobile
};

export {
  Fragment ,
  LogoutDialog ,
  PC ,
  Mobile ,
}
/* writeIcon Not a pure module */

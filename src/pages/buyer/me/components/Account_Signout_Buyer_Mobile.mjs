// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cx from "rescript-classnames/src/Cx.mjs";
import * as Env from "../../../../constants/Env.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Locale from "../../../../utils/Locale.mjs";
import * as Checkbox from "../../../../components/common/Checkbox.mjs";
import * as Redirect from "../../../../components/Redirect.mjs";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as IconClose from "../../../../components/svgs/IconClose.mjs";
import * as IconError from "../../../../components/svgs/IconError.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../../utils/CustomHooks.mjs";
import * as FetchHelper from "../../../../utils/FetchHelper.mjs";
import * as ReactRelay from "react-relay";
import * as Belt_SetString from "rescript/lib/es6/belt_SetString.js";
import * as ChannelTalkHelper from "../../../../utils/ChannelTalkHelper.mjs";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as ReactRemoveScroll from "react-remove-scroll";
import * as ReactDialog from "@radix-ui/react-dialog";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ReactToastNotifications from "react-toast-notifications";
import * as Account_Signout_Term_Buyer from "./Account_Signout_Term_Buyer.mjs";
import * as Account_Signout_Reason_Buyer from "./Account_Signout_Reason_Buyer.mjs";
import * as Account_Signout_ConfirmPassword_Buyer from "./Account_Signout_ConfirmPassword_Buyer.mjs";
import * as AccountSignoutBuyerMobile_Fragment_graphql from "../../../../__generated__/AccountSignoutBuyerMobile_Fragment_graphql.mjs";

function use(fRef) {
  var data = ReactRelay.useFragment(AccountSignoutBuyerMobile_Fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(AccountSignoutBuyerMobile_Fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(AccountSignoutBuyerMobile_Fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return AccountSignoutBuyerMobile_Fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

var Fragment = {
  Types: undefined,
  Operation: undefined,
  use: use,
  useOpt: useOpt
};

function Account_Signout_Buyer_Mobile$Signout(Props) {
  var onClose = Props.onClose;
  var sinsunCashDeposit = Props.sinsunCashDeposit;
  var onClickSignout = Props.onClickSignout;
  var loading = Props.loading;
  var debtAmount = Props.debtAmount;
  var match = React.useState(function () {
        return false;
      });
  var setAgree = match[1];
  var agree = match[0];
  var isDebtor = Belt_Option.mapWithDefault(debtAmount, false, (function (a) {
          return a > 0;
        }));
  var disabled = !agree || loading || isDebtor;
  return React.createElement("section", {
              className: "px-4 xl:mt-0 pb-6 max-h-[calc(100%-70px)] overflow-y-auto"
            }, React.createElement("div", {
                  className: "flex flex-col"
                }, React.createElement("div", {
                      className: "mb-5"
                    }, React.createElement("p", {
                          className: "text-text-L1"
                        }, "유의사항", React.createElement("br", undefined), "회원탈퇴 전에 꼭 확인하세요."), React.createElement("div", {
                          className: "my-6 border"
                        }), React.createElement(Account_Signout_Term_Buyer.make, {
                          className: "list-disc px-4 mb-5"
                        }), React.createElement("div", {
                          className: "flex items-center justify-between border border-div-border-L3 rounded p-4 mb-1"
                        }, React.createElement("div", undefined, React.createElement("span", {
                                  className: "text-gray-600"
                                }, "신선캐시 잔액")), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold"
                                }, "" + Locale.Float.show(undefined, sinsunCashDeposit, 0) + "원"))), debtAmount !== undefined ? React.createElement("div", {
                            className: "border border-div-border-L3 rounded p-4"
                          }, React.createElement("div", {
                                className: "flex items-center justify-between "
                              }, React.createElement("div", undefined, React.createElement("span", {
                                        className: "text-gray-600"
                                      }, "나중결제 미정산 금액")), React.createElement("div", undefined, React.createElement("span", {
                                        className: "font-bold"
                                      }, "" + Locale.Float.show(undefined, debtAmount, 0) + "원")))) : null, isDebtor ? React.createElement("div", {
                            className: "text-notice text-sm mt-1 px-4"
                          }, "미정산 금액이 남아있기 때문에 탈퇴를 할 수 없습니다.") : null, React.createElement("div", {
                          className: "my-6 border"
                        }), React.createElement("div", {
                          className: "flex items-center"
                        }, React.createElement(Checkbox.make, {
                              id: "agree",
                              name: "agree",
                              checked: agree,
                              onChange: (function (param) {
                                  setAgree(function (param) {
                                        return !agree;
                                      });
                                }),
                              disabled: isDebtor
                            }), React.createElement("label", {
                              className: "ml-2",
                              htmlFor: "agree"
                            }, "유의사항을 모두 확인했습니다."))), React.createElement("div", {
                      className: "flex"
                    }, React.createElement("button", {
                          className: "bg-gray-150 rounded-xl focus:outline-none w-full py-4 text-center mr-1",
                          disabled: loading,
                          onClick: (function (param) {
                              Curry._1(onClose, undefined);
                            })
                        }, React.createElement("span", {
                              className: "font-bold"
                            }, "취소")), React.createElement("button", {
                          className: Cx.cx([
                                "rounded-xl focus:outline-none w-full py-4 text-center ml-1",
                                disabled ? "bg-gray-150" : "bg-[#FCF0E6]"
                              ]),
                          disabled: disabled,
                          onClick: (function (param) {
                              Curry._1(onClickSignout, undefined);
                            })
                        }, React.createElement("span", {
                              className: Cx.cx([
                                    "font-bold",
                                    disabled ? "text-gray-300" : "text-[#FF7A38]"
                                  ])
                            }, "탈퇴")))));
}

var Signout = {
  make: Account_Signout_Buyer_Mobile$Signout
};

function Account_Signout_Buyer_Mobile(Props) {
  var query = Props.query;
  var isOpen = Props.isOpen;
  var onClose = Props.onClose;
  var match = ReactToastNotifications.useToasts();
  var addToast = match.addToast;
  var match$1 = use(query);
  var match$2 = React.useState(function () {
        return /* Confirm */0;
      });
  var setStep = match$2[1];
  var match$3 = React.useState(function () {
        return "";
      });
  var setPassword = match$3[1];
  var password = match$3[0];
  var match$4 = React.useState(function () {
        
      });
  var selected = match$4[0];
  var match$5 = React.useState(function () {
        return "";
      });
  var etc = match$5[0];
  var match$6 = React.useState(function () {
        return false;
      });
  var setLoading = match$6[1];
  var reset = function (param) {
    setStep(function (param) {
          return /* Confirm */0;
        });
    setLoading(function (param) {
          return false;
        });
    setPassword(function (param) {
          return "";
        });
  };
  var handleClose = function (param) {
    reset(undefined);
    Curry._1(onClose, undefined);
  };
  var onClickSignout = function (param) {
    setLoading(function (param) {
          return true;
        });
    var reason = Belt_List.reduce(Belt_List.map(Belt_SetString.toList(selected), (function (reason) {
                  if (reason === "기타") {
                    return "기타(" + etc + ")";
                  } else {
                    return reason;
                  }
                })), "", (function (acc, str) {
              return acc + "|" + str;
            })).replace(new RegExp("^,", "g"), "");
    Belt_Option.map(JSON.stringify({
              password: password,
              reason: reason
            }), (function (body) {
            return FetchHelper.requestWithRetry(FetchHelper.postWithToken, "" + Env.restApiUrl + "/user/leave", body, 1, (function (param) {
                          setLoading(function (param) {
                                return false;
                              });
                          CustomHooks.Auth.logOut(undefined);
                          ChannelTalkHelper.logout(undefined);
                          Redirect.setHref("/");
                        }), (function (param) {
                          addToast(React.createElement("div", {
                                    className: "flex items-center"
                                  }, React.createElement(IconError.make, {
                                        width: "24",
                                        height: "24",
                                        className: "mr-2"
                                      }), "탈퇴 중 오류가 발생했습니다. 잠시후 다시 시도해주세요."), {
                                appearance: "error"
                              });
                          setLoading(function (param) {
                                return false;
                              });
                        }));
          }));
  };
  var tmp;
  switch (match$2[0]) {
    case /* Confirm */0 :
        tmp = React.createElement(Account_Signout_ConfirmPassword_Buyer.Mobile.make, {
              email: match$1.uid,
              nextStep: (function (param) {
                  setStep(function (param) {
                        return /* SelectReasons */1;
                      });
                }),
              password: password,
              setPassword: setPassword
            });
        break;
    case /* SelectReasons */1 :
        tmp = React.createElement(Account_Signout_Reason_Buyer.Mobile.make, {
              onClickNext: (function (param) {
                  setStep(function (param) {
                        return /* Signout */2;
                      });
                }),
              onClose: handleClose,
              selected: selected,
              setSelected: match$4[1],
              etc: etc,
              setEtc: match$5[1]
            });
        break;
    case /* Signout */2 :
        tmp = React.createElement(Account_Signout_Buyer_Mobile$Signout, {
              onClose: handleClose,
              sinsunCashDeposit: match$1.sinsunCashDeposit,
              onClickSignout: onClickSignout,
              loading: match$6[0],
              debtAmount: match$1.debtAmount
            });
        break;
    
  }
  return React.createElement(ReactDialog.Root, {
              children: null,
              open: isOpen,
              onOpenChange: reset
            }, React.createElement(ReactDialog.Overlay, {
                  className: "dialog-overlay"
                }), React.createElement(ReactDialog.Content, {
                  children: React.createElement(ReactRemoveScroll.RemoveScroll, {
                        children: React.createElement("div", {
                              className: "fixed top-0 left-0 h-full xl:static bg-white w-full max-w-3xl xl:min-h-fit xl:min-w-min xl:w-[90vh] xl:max-w-[480px] xl:max-h-[85vh] "
                            }, React.createElement("section", {
                                  className: "h-14 w-full xl:h-auto xl:w-auto xl:mt-10"
                                }, React.createElement("div", {
                                      className: "flex items-center justify-between px-5 w-full py-4 xl:h-14 xl:w-full xl:pb-10"
                                    }, React.createElement("div", {
                                          className: "w-6"
                                        }), React.createElement("div", {
                                          className: "xl:hidden"
                                        }, React.createElement("span", {
                                              className: "font-bold"
                                            }, "회원탈퇴")), React.createElement(ReactDialog.Close, {
                                          onClick: (function (param) {
                                              Curry._1(onClose, undefined);
                                            }),
                                          children: React.createElement(IconClose.make, {
                                                height: "24",
                                                width: "24",
                                                fill: "#262626"
                                              }),
                                          className: "focus:outline-none"
                                        }))), tmp)
                      }),
                  className: "dialog-content-plain bottom-0 left-0 xl:bottom-auto xl:left-auto xl:rounded-2xl xl:state-open:top-1/2 xl:state-open:left-1/2 xl:state-open:-translate-x-1/2 xl:state-open:-translate-y-1/2"
                }));
}

var make = Account_Signout_Buyer_Mobile;

export {
  Fragment ,
  Signout ,
  make ,
}
/* Env Not a pure module */

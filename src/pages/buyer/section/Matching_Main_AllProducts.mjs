// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../utils/CustomHooks.mjs";
import * as Router from "next/router";
import * as ReactRelay from "react-relay";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as MatchingSortSelect from "./MatchingSortSelect.mjs";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as MatchingProductListItem from "./MatchingProductListItem.mjs";
import * as ShopProductListItem_Buyer from "../../../components/ShopProductListItem_Buyer.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";
import * as MatchingMainAllProductsQuery_graphql from "../../../__generated__/MatchingMainAllProductsQuery_graphql.mjs";
import * as MatchingMainAllProductsFragment_graphql from "../../../__generated__/MatchingMainAllProductsFragment_graphql.mjs";
import * as MatchingMainAllProductsRefetchQuery_graphql from "../../../__generated__/MatchingMainAllProductsRefetchQuery_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(MatchingMainAllProductsQuery_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(MatchingMainAllProductsQuery_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsQuery_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(MatchingMainAllProductsQuery_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, MatchingMainAllProductsQuery_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, MatchingMainAllProductsQuery_graphql.node, MatchingMainAllProductsQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: MatchingMainAllProductsQuery_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, MatchingMainAllProductsQuery_graphql.node, MatchingMainAllProductsQuery_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(MatchingMainAllProductsQuery_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(MatchingMainAllProductsQuery_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsQuery_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(MatchingMainAllProductsQuery_graphql.node, MatchingMainAllProductsQuery_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query_productsQueryInputSort_decode = MatchingMainAllProductsQuery_graphql.Utils.productsQueryInputSort_decode;

var Query_productsQueryInputSort_fromString = MatchingMainAllProductsQuery_graphql.Utils.productsQueryInputSort_fromString;

var Query = {
  productsQueryInputSort_decode: Query_productsQueryInputSort_decode,
  productsQueryInputSort_fromString: Query_productsQueryInputSort_fromString,
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function internal_makeRefetchableFnOpts(fetchPolicy, onComplete, param) {
  var tmp = {};
  var tmp$1 = RescriptRelay.mapFetchPolicy(fetchPolicy);
  if (tmp$1 !== undefined) {
    tmp.fetchPolicy = Caml_option.valFromOption(tmp$1);
  }
  var tmp$2 = RescriptRelay_Internal.internal_nullableToOptionalExnHandler(onComplete);
  if (tmp$2 !== undefined) {
    tmp.onComplete = Caml_option.valFromOption(tmp$2);
  }
  return tmp;
}

function useRefetchable(fRef) {
  var match = ReactRelay.useRefetchableFragment(MatchingMainAllProductsFragment_graphql.node, fRef);
  var refetchFn = match[1];
  var data = RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsFragment_graphql.Internal.convertFragment, match[0]);
  return [
          data,
          React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return Curry._2(refetchFn, RescriptRelay_Internal.internal_removeUndefinedAndConvertNullsRaw(MatchingMainAllProductsRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [refetchFn])
        ];
}

function use$1(fRef) {
  var data = ReactRelay.useFragment(MatchingMainAllProductsFragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsFragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(MatchingMainAllProductsFragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return MatchingMainAllProductsFragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

function usePagination(fr) {
  var p = ReactRelay.usePaginationFragment(MatchingMainAllProductsFragment_graphql.node, fr);
  var data = RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsFragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          isLoadingNext: p.isLoadingNext,
          isLoadingPrevious: p.isLoadingPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(MatchingMainAllProductsRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

function useBlockingPagination(fRef) {
  var p = ReactRelay.useBlockingPaginationFragment(MatchingMainAllProductsFragment_graphql.node, fRef);
  var data = RescriptRelay_Internal.internal_useConvertedValue(MatchingMainAllProductsFragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(MatchingMainAllProductsRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

var makeRefetchVariables = MatchingMainAllProductsRefetchQuery_graphql.Types.makeRefetchVariables;

var Fragment_getConnectionNodes = MatchingMainAllProductsFragment_graphql.Utils.getConnectionNodes;

var Fragment = {
  getConnectionNodes: Fragment_getConnectionNodes,
  Types: undefined,
  internal_makeRefetchableFnOpts: internal_makeRefetchableFnOpts,
  useRefetchable: useRefetchable,
  Operation: undefined,
  use: use$1,
  useOpt: useOpt,
  usePagination: usePagination,
  useBlockingPagination: useBlockingPagination,
  makeRefetchVariables: makeRefetchVariables
};

function Matching_Main_AllProducts$PC$Skeleton(Props) {
  return React.createElement("div", {
              className: "w-[1280px] pt-20 px-5 pb-16 mx-auto"
            }, React.createElement("div", {
                  className: "w-[160px] h-[44px] rounded-lg animate-pulse bg-gray-150"
                }), React.createElement("section", {
                  className: "w-full mt-[88px]"
                }, React.createElement("ol", {
                      className: "grid grid-cols-4 gap-x-10 gap-y-16"
                    }, Belt_Array.map(Belt_Array.range(1, 300), (function (number) {
                            return React.createElement(ShopProductListItem_Buyer.PC.Placeholder.make, {
                                        key: "box-" + String(number) + ""
                                      });
                          })))));
}

var Skeleton = {
  make: Matching_Main_AllProducts$PC$Skeleton
};

function Matching_Main_AllProducts$PC$Empty(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-[1280px] pt-20 pb-16 mx-auto min-h-full"
                }, React.createElement("div", {
                      className: "font-bold text-2xl text-gray-800"
                    }, "전체 상품"), React.createElement("div", {
                      className: "mt-20 flex flex-col items-center justify-center text-gray-800"
                    }, React.createElement("h1", {
                          className: "text-3xl"
                        }, "상품이 존재하지 않습니다"), React.createElement("span", {
                          className: "mt-7"
                        }, "해당 카테고리에 상품이 존재하지 않습니다."), React.createElement("span", undefined, "다른 카테고리를 선택해 주세요."))));
}

var Empty = {
  make: Matching_Main_AllProducts$PC$Empty
};

function Matching_Main_AllProducts$PC$View(Props) {
  var query = Props.query;
  var match = usePagination(query);
  var hasNext = match.hasNext;
  var loadNext = match.loadNext;
  var loadMoreRef = React.useRef(null);
  var isIntersecting = CustomHooks.$$IntersectionObserver.use(undefined, loadMoreRef, 0.1, "50px", undefined);
  React.useEffect((function () {
          if (hasNext && isIntersecting) {
            Curry._3(loadNext, 20, undefined, undefined);
          }
          
        }), [
        hasNext,
        isIntersecting
      ]);
  return React.createElement("div", {
              className: "w-[1280px] pt-20 pb-16 mx-auto min-h-full"
            }, React.createElement("div", {
                  className: "flex justify-between"
                }, React.createElement("div", {
                      className: "font-bold text-2xl text-gray-800"
                    }, "전체 상품"), React.createElement("div", {
                      className: "mb-12 flex-1 flex items-center justify-end"
                    }, React.createElement(MatchingSortSelect.make, {}))), React.createElement("ol", {
                  className: "grid grid-cols-4 gap-x-10 gap-y-16"
                }, Belt_Array.map(match.data.products.edges, (function (param) {
                        return React.createElement(MatchingProductListItem.PC.make, {
                                    query: param.node.fragmentRefs,
                                    key: param.cursor
                                  });
                      }))), React.createElement("div", {
                  ref: loadMoreRef,
                  className: "h-20 w-full"
                }));
}

var View = {
  make: Matching_Main_AllProducts$PC$View
};

function Matching_Main_AllProducts$PC$Container(Props) {
  var router = Router.useRouter();
  var sort = Belt_Option.getWithDefault(Belt_Option.flatMap(Js_dict.get(router.query, "sort"), MatchingSortSelect.decodeSort), "UPDATED_DESC");
  var match = use({
        count: 20,
        onlyBuyable: true,
        sort: sort
      }, /* StoreOrNetwork */1, undefined, undefined, undefined);
  return React.createElement(Matching_Main_AllProducts$PC$View, {
              query: match.fragmentRefs
            });
}

var Container = {
  make: Matching_Main_AllProducts$PC$Container
};

function Matching_Main_AllProducts$PC(Props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsCsr = match[1];
  React.useEffect((function () {
          setIsCsr(function (param) {
                return true;
              });
        }), []);
  return React.createElement(RescriptReactErrorBoundary.make, {
              children: React.createElement(React.Suspense, {
                    children: React.createElement(Matching_Main_AllProducts$PC$Container, {}),
                    fallback: React.createElement(Matching_Main_AllProducts$PC$Skeleton, {})
                  }),
              fallback: (function (param) {
                  return React.createElement(Matching_Main_AllProducts$PC$Skeleton, {});
                })
            });
}

var PC = {
  Skeleton: Skeleton,
  Empty: Empty,
  View: View,
  Container: Container,
  make: Matching_Main_AllProducts$PC
};

function Matching_Main_AllProducts$MO$Skeleton(Props) {
  return React.createElement("div", {
              className: "w-full py-4 px-5"
            }, React.createElement("div", {
                  className: "mb-4 w-full flex items-center justify-end"
                }, React.createElement("div", {
                      className: "w-12 h-5 bg-gray-150 rounded-lg animate-pulse"
                    })), React.createElement("ol", {
                  className: "grid grid-cols-2 gap-x-4 gap-y-8"
                }, Belt_Array.map(Belt_Array.range(1, 300), (function (num) {
                        return React.createElement(ShopProductListItem_Buyer.MO.Placeholder.make, {
                                    key: "list-item-skeleton-" + String(num) + ""
                                  });
                      }))));
}

var Skeleton$1 = {
  make: Matching_Main_AllProducts$MO$Skeleton
};

function Matching_Main_AllProducts$MO$Empty(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "mt-[126px] flex flex-col items-center justify-center text-gray-800 px-5"
                }, React.createElement("h1", {
                      className: "text-xl"
                    }, "상품이 존재하지 않습니다"), React.createElement("span", {
                      className: "mt-2 text-sm text-gray-600 text-center"
                    }, "해당 카테고리에 상품이 존재하지 않습니다."), React.createElement("span", {
                      className: "mt-2 text-sm text-gray-600 text-center"
                    }, "다른 카테고리를 선택해 주세요.")));
}

var Empty$1 = {
  make: Matching_Main_AllProducts$MO$Empty
};

function Matching_Main_AllProducts$MO$View(Props) {
  var query = Props.query;
  var match = usePagination(query);
  var hasNext = match.hasNext;
  var loadNext = match.loadNext;
  var products = match.data.products;
  var loadMoreRef = React.useRef(null);
  var isIntersecting = CustomHooks.$$IntersectionObserver.use(undefined, loadMoreRef, 0.1, "50px", undefined);
  React.useEffect((function () {
          if (hasNext && isIntersecting) {
            Curry._3(loadNext, 20, undefined, undefined);
          }
          
        }), [
        hasNext,
        isIntersecting
      ]);
  if (products.edges.length === 0) {
    return React.createElement(Matching_Main_AllProducts$MO$Empty, {});
  } else {
    return React.createElement("div", {
                className: "w-full pt-1 px-5"
              }, React.createElement("div", {
                    className: "mb-4 w-full flex items-center justify-between text-gray-800"
                  }, React.createElement("span", {
                        className: "font-bold"
                      }, "전체 신선매칭 상품"), React.createElement(MatchingSortSelect.MO.make, {})), React.createElement("ol", {
                    className: "grid grid-cols-2 gap-x-4 gap-y-8"
                  }, Belt_Array.map(products.edges, (function (param) {
                          return React.createElement(MatchingProductListItem.MO.make, {
                                      query: param.node.fragmentRefs,
                                      key: param.cursor
                                    });
                        }))), React.createElement("div", {
                    ref: loadMoreRef,
                    className: "h-20 w-full"
                  }));
  }
}

var View$1 = {
  make: Matching_Main_AllProducts$MO$View
};

function Matching_Main_AllProducts$MO$Container(Props) {
  var router = Router.useRouter();
  var sort = Belt_Option.getWithDefault(Belt_Option.flatMap(Js_dict.get(router.query, "sort"), MatchingSortSelect.decodeSort), "UPDATED_DESC");
  var match = use({
        count: 20,
        onlyBuyable: true,
        sort: sort
      }, /* StoreOrNetwork */1, undefined, undefined, undefined);
  return React.createElement(Matching_Main_AllProducts$MO$View, {
              query: match.fragmentRefs
            });
}

var Container$1 = {
  make: Matching_Main_AllProducts$MO$Container
};

function Matching_Main_AllProducts$MO(Props) {
  var match = React.useState(function () {
        return false;
      });
  var setIsCsr = match[1];
  React.useEffect((function () {
          setIsCsr(function (param) {
                return true;
              });
        }), []);
  return React.createElement(RescriptReactErrorBoundary.make, {
              children: React.createElement(React.Suspense, {
                    children: React.createElement(Matching_Main_AllProducts$MO$Container, {}),
                    fallback: React.createElement(Matching_Main_AllProducts$MO$Skeleton, {})
                  }),
              fallback: (function (param) {
                  return React.createElement(Matching_Main_AllProducts$MO$Skeleton, {});
                })
            });
}

var MO = {
  Skeleton: Skeleton$1,
  Empty: Empty$1,
  View: View$1,
  Container: Container$1,
  make: Matching_Main_AllProducts$MO
};

export {
  Query ,
  Fragment ,
  PC ,
  MO ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Divider from "../../../components/common/Divider.mjs";
import Head from "next/head";
import * as ChannelTalkHelper from "../../../utils/ChannelTalkHelper.mjs";
import * as SectionMain_PC_Title from "./SectionMain_PC_Title.mjs";
import * as Delivery_Main_Category from "./Delivery_Main_Category.mjs";
import * as Delivery_Main_InfoBanner from "./Delivery_Main_InfoBanner.mjs";
import * as Delivery_Main_AllProducts from "./Delivery_Main_AllProducts.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";

function SectionMain_Delivery$PC$View(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement(SectionMain_PC_Title.make, {
                  title: "신선배송"
                }), React.createElement(Delivery_Main_InfoBanner.PC.make, {}), React.createElement(Delivery_Main_Category.PC.make, {}), React.createElement(Delivery_Main_AllProducts.PC.make, {}));
}

var View = {
  make: SectionMain_Delivery$PC$View
};

function SectionMain_Delivery$PC$Skeleton(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement(SectionMain_PC_Title.Skeleton.make, {}), React.createElement(Delivery_Main_InfoBanner.PC.Skeleton.make, {}), React.createElement(Delivery_Main_Category.PC.Skeleton.make, {}), React.createElement(Delivery_Main_AllProducts.PC.Skeleton.make, {}));
}

var Skeleton = {
  make: SectionMain_Delivery$PC$Skeleton
};

function SectionMain_Delivery$PC(Props) {
  return React.createElement(SectionMain_Delivery$PC$View, {});
}

var PC = {
  View: View,
  Skeleton: Skeleton,
  make: SectionMain_Delivery$PC
};

function SectionMain_Delivery$MO$View(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement(Delivery_Main_InfoBanner.MO.make, {}), React.createElement(Delivery_Main_Category.MO.make, {}), React.createElement(Divider.make, {}), React.createElement(Delivery_Main_AllProducts.MO.make, {}));
}

var View$1 = {
  make: SectionMain_Delivery$MO$View
};

function SectionMain_Delivery$MO$Skeleton(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement(Delivery_Main_InfoBanner.MO.Skeleton.make, {}), React.createElement(Delivery_Main_Category.MO.Skeleton.make, {}), React.createElement(Divider.make, {}), React.createElement(Delivery_Main_Category.MO.Skeleton.make, {}), React.createElement(Delivery_Main_AllProducts.MO.Skeleton.make, {}));
}

var Skeleton$1 = {
  make: SectionMain_Delivery$MO$Skeleton
};

function SectionMain_Delivery$MO(Props) {
  return React.createElement(SectionMain_Delivery$MO$View, {});
}

var MO = {
  View: View$1,
  Skeleton: Skeleton$1,
  make: SectionMain_Delivery$MO
};

function SectionMain_Delivery$Skeleton(Props) {
  var deviceType = Props.deviceType;
  switch (deviceType) {
    case /* Unknown */0 :
        return null;
    case /* PC */1 :
        return React.createElement(SectionMain_Delivery$PC$Skeleton, {});
    case /* Mobile */2 :
        return React.createElement(SectionMain_Delivery$MO$Skeleton, {});
    
  }
}

var Skeleton$2 = {
  make: SectionMain_Delivery$Skeleton
};

function SectionMain_Delivery$Container(Props) {
  var deviceType = Props.deviceType;
  ChannelTalkHelper.Hook.use(undefined, undefined, undefined);
  switch (deviceType) {
    case /* Unknown */0 :
        return null;
    case /* PC */1 :
        return React.createElement(SectionMain_Delivery$PC, {});
    case /* Mobile */2 :
        return React.createElement(SectionMain_Delivery$MO, {});
    
  }
}

var Container = {
  make: SectionMain_Delivery$Container
};

function SectionMain_Delivery(Props) {
  var deviceType = Props.deviceType;
  var match = React.useState(function () {
        return false;
      });
  var setIsCsr = match[1];
  React.useEffect((function () {
          setIsCsr(function (param) {
                return true;
              });
        }), []);
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "신선하이 신선배송")
                }), React.createElement(RescriptReactErrorBoundary.make, {
                  children: React.createElement(React.Suspense, {
                        children: match[0] ? React.createElement(SectionMain_Delivery$Container, {
                                deviceType: deviceType
                              }) : React.createElement(SectionMain_Delivery$Skeleton, {
                                deviceType: deviceType
                              }),
                        fallback: React.createElement(SectionMain_Delivery$Skeleton, {
                              deviceType: deviceType
                            })
                      }),
                  fallback: (function (param) {
                      return React.createElement(SectionMain_Delivery$Skeleton, {
                                  deviceType: deviceType
                                });
                    })
                }));
}

var make = SectionMain_Delivery;

export {
  PC ,
  MO ,
  Skeleton$2 as Skeleton,
  Container ,
  make ,
}
/* react Not a pure module */

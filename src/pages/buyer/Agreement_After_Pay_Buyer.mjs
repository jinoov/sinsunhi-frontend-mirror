// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../../constants/Env.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";
import * as Checkbox from "../../components/common/Checkbox.mjs";
import * as IconArrow from "../../components/svgs/IconArrow.mjs";
import * as IconCheck from "../../components/svgs/IconCheck.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as CustomHooks from "../../utils/CustomHooks.mjs";
import * as FetchHelper from "../../utils/FetchHelper.mjs";
import * as Router from "next/router";
import * as Upload_Buyer from "./Upload_Buyer.mjs";
import * as Authorization from "../../utils/Authorization.mjs";
import * as Belt_SetString from "rescript/lib/es6/belt_SetString.js";
import * as ReactHookForm from "react-hook-form";
import * as Guide_Upload_Buyer from "../../components/Guide_Upload_Buyer.mjs";
import * as Upload_After_Pay_Form from "./Upload_After_Pay_Form.mjs";

function Agreement_After_Pay_Buyer$Info(Props) {
  return React.createElement("div", {
              className: "px-3 pt-16 pb-5"
            }, React.createElement("div", {
                  className: "text-xl py-1"
                }, "상품 먼저 받고 나중에 결제하세요"), React.createElement("div", {
                  className: "text-[2.25rem] font-bold text-green-500 py-1"
                }, "신선하이 나중결제"), React.createElement("div", {
                  className: "flex flex-col gap-2 py-9"
                }, React.createElement("div", {
                      className: "pb-1"
                    }, "당장 상품이 필요한데 자금이 부족한가요? "), React.createElement("div", {
                      className: "flex items-center"
                    }, React.createElement("div", {
                          className: "m-[2px]"
                        }, React.createElement(IconCheck.make, {
                              height: "20",
                              width: "20",
                              fill: "#12B564"
                            })), React.createElement("span", undefined, React.createElement("b", undefined, "수수료 0원"))), React.createElement("div", {
                      className: "flex items-center"
                    }, React.createElement("div", {
                          className: "m-[2px]"
                        }, React.createElement(IconCheck.make, {
                              height: "20",
                              width: "20",
                              fill: "#12B564"
                            })), React.createElement("span", undefined, "최대 ", React.createElement("b", undefined, "4백 만원"), "까지")), React.createElement("div", {
                      className: "flex items-center"
                    }, React.createElement("div", {
                          className: "m-[2px]"
                        }, React.createElement(IconCheck.make, {
                              height: "20",
                              width: "20",
                              fill: "#12B564"
                            })), React.createElement("span", undefined, React.createElement("b", undefined, "최대 2개월 뒤 "), "결제하는 나중결제로 주문하세요!"))), React.createElement("div", {
                  className: "text-sm text-gray-600"
                }, "*고객별 한도 및 세부조건은 상이할 수 있습니다."));
}

var Info = {
  make: Agreement_After_Pay_Buyer$Info
};

function Agreement_After_Pay_Buyer$AgreementItem(Props) {
  var children = Props.children;
  var id = Props.id;
  var register = Props.register;
  var onChange = Props.onChange;
  var href = Props.href;
  var r = register(id, undefined);
  return React.createElement("div", {
              className: "flex items-center gap-2"
            }, React.createElement("div", undefined, React.createElement(Checkbox.Uncontrolled.make, {
                      id: id,
                      name: r.name,
                      defaultChecked: false,
                      onBlur: r.onBlur,
                      onChange: (function (e) {
                          Curry._1(r.onChange, e);
                          Belt_Option.forEach(onChange, (function (f) {
                                  Curry._1(f, e);
                                }));
                        }),
                      disabled: false,
                      inputRef: r.ref
                    })), React.createElement("div", undefined, React.createElement("label", {
                      htmlFor: id
                    }, children)), Belt_Option.mapWithDefault(href, null, (function (href) {
                    return React.createElement("div", {
                                className: "ml-auto"
                              }, React.createElement("a", {
                                    href: href
                                  }, React.createElement(IconArrow.make, {
                                        height: "20",
                                        width: "20",
                                        stroke: "#B2B2B2"
                                      })));
                  })));
}

var AgreementItem = {
  make: Agreement_After_Pay_Buyer$AgreementItem
};

var agree1 = "AFTER_PAY_USAGE";

var agree2 = "AFTER_PAY_COMPANY_CREDIT_INFO_COLLECT";

var agree3 = "AFTER_PAY_COMPANY_CREDIT_INFO_INQUIRY";

var agree4 = "AFTER_PAY_COMPANY_CREDIT_INFO_OFFER";

function Agreement_After_Pay_Buyer$Agreement(Props) {
  var user = Curry._1(CustomHooks.User.Buyer.use, undefined);
  var userId = typeof user === "number" ? undefined : user._0.id;
  var router = Router.useRouter();
  var match = ReactHookForm.useForm({
        mode: "onChange"
      }, undefined);
  var register = match.register;
  var setValue = match.setValue;
  var getValues = match.getValues;
  var didAllCheck = function (arr) {
    return Belt_Array.every(Belt_Array.map(Belt_Option.getWithDefault(Js_json.decodeArray(arr), [false]), Js_json.decodeBoolean), (function (x) {
                  return Caml_obj.equal(x, true);
                }));
  };
  var onSubmit = function (param, param$1) {
    var names = [
      "agreeAll",
      agree1,
      agree2,
      agree3,
      agree4
    ];
    var data = getValues(names);
    var body = JSON.stringify(Belt_Array.map([
              agree1,
              agree2,
              agree3,
              agree4
            ], (function (key) {
                return {
                        agreement: key
                      };
              })));
    if (didAllCheck(data)) {
      if (userId !== undefined && body !== undefined) {
        FetchHelper.requestWithRetry(FetchHelper.postWithToken, "" + Env.afterPayApiUrl + "/buyers/" + String(userId) + "/terms", body, 3, (function (param) {
                router.replace("/buyer/after-pay/upload");
              }), (function (err) {
                console.error("fail", err);
              }));
        return ;
      } else {
        return ;
      }
    } else {
      window.alert("서비스 이용을 위해 약관을 모두 동의해주세요.");
      return ;
    }
  };
  var handleAllChange = function (e) {
    var value = e.target.checked;
    setValue(agree1, value);
    setValue(agree2, value);
    setValue(agree3, value);
    setValue(agree4, value);
  };
  var handleAgreementChange = function (param) {
    var names = [
      agree1,
      agree2,
      agree3,
      agree4
    ];
    var agreeAll = didAllCheck(getValues(names));
    setValue("agreeAll", agreeAll);
  };
  return React.createElement("div", {
              className: "pt-7 pb-9"
            }, React.createElement("form", {
                  onSubmit: match.handleSubmit(onSubmit)
                }, React.createElement("div", {
                      className: "px-3"
                    }, React.createElement(Agreement_After_Pay_Buyer$AgreementItem, {
                          children: React.createElement("div", {
                                className: "font-bold"
                              }, "전체 내용에 동의합니다."),
                          id: "agreeAll",
                          register: register,
                          onChange: handleAllChange
                        })), React.createElement("div", {
                      className: "flex flex-col gap-4 px-3 pt-5 pb-8"
                    }, React.createElement(Agreement_After_Pay_Buyer$AgreementItem, {
                          children: React.createElement("div", {
                                className: "text-sm"
                              }, "(필수) 나중결제 이용약관"),
                          id: agree1,
                          register: register,
                          onChange: handleAgreementChange,
                          href: "https://afterpay-terms.oopy.io/695e9bce-bc97-40d8-8f2a-c88b4611e057"
                        }), React.createElement(Agreement_After_Pay_Buyer$AgreementItem, {
                          children: React.createElement("div", {
                                className: "text-sm"
                              }, "(필수) 나중결제 기업신용정보 수집 및 이용"),
                          id: agree2,
                          register: register,
                          onChange: handleAgreementChange,
                          href: "https://afterpay-terms.oopy.io/347fb6de-ff87-4761-8eae-94b5559cc15e"
                        }), React.createElement(Agreement_After_Pay_Buyer$AgreementItem, {
                          children: React.createElement("div", {
                                className: "text-sm"
                              }, "(필수) 나중결제 기업신용정보 조회"),
                          id: agree3,
                          register: register,
                          onChange: handleAgreementChange,
                          href: "https://afterpay-terms.oopy.io/126328c8-2f5d-4dc5-8ed0-363c07daadb2"
                        }), React.createElement(Agreement_After_Pay_Buyer$AgreementItem, {
                          children: React.createElement("div", {
                                className: "text-sm"
                              }, "(필수) 나중결제 기업신용정보 제공"),
                          id: agree4,
                          register: register,
                          onChange: handleAgreementChange,
                          href: "https://afterpay-terms.oopy.io/d69202a2-0ad3-4221-b40a-0059c0f5f835"
                        })), React.createElement("div", undefined, React.createElement("button", {
                          className: "btn-level1 py-3 px-5",
                          type: "submit"
                        }, "나중결제로 상품 주문하기"))));
}

var Agreement = {
  agree1: agree1,
  agree2: agree2,
  agree3: agree3,
  agree4: agree4,
  make: Agreement_After_Pay_Buyer$Agreement
};

function Agreement_After_Pay_Buyer(Props) {
  var agreements = CustomHooks.AfterPayAgreement.use(undefined);
  var router = Router.useRouter();
  React.useEffect((function () {
          if (typeof agreements === "number") {
            if (agreements !== /* Loading */0) {
              router.replace("/buyer/upload");
            }
            
          } else if (agreements.TAG === /* Loaded */0) {
            var didAgreements = Belt_SetString.fromArray(Belt_Array.map(agreements._0.terms, (function (param) {
                        return param.agreement;
                      })));
            var reuquiredAgreements = Belt_SetString.fromArray([
                  agree1,
                  agree2,
                  agree3,
                  agree4
                ]);
            if (true === Belt_SetString.eq(didAgreements, reuquiredAgreements)) {
              router.replace("/buyer/after-pay/upload");
            }
            
          } else {
            router.replace("/buyer/upload");
          }
        }), [agreements]);
  return React.createElement(Authorization.Buyer.make, {
              children: null,
              title: "주문서 업로드"
            }, React.createElement(Upload_Buyer.Tab.AfterPay.make, {}), React.createElement("div", {
                  className: "container max-w-lg mx-auto sm:shadow-gl px-7 divide-y"
                }, React.createElement(Agreement_After_Pay_Buyer$Info, {}), React.createElement(Agreement_After_Pay_Buyer$Agreement, {})), React.createElement(Upload_After_Pay_Form.UploadForm.make, {}), React.createElement(Guide_Upload_Buyer.make, {}));
}

var make = Agreement_After_Pay_Buyer;

export {
  Info ,
  AgreementItem ,
  Agreement ,
  make ,
}
/* Env Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ReactRelay from "react-relay";
import * as Authorization from "../../../utils/Authorization.mjs";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as Tradematch_Header_Buyer from "./Tradematch_Header_Buyer.mjs";
import * as Tradematch_NotFound_Buyer from "./Tradematch_NotFound_Buyer.mjs";
import * as Tradematch_Skeleton_Buyer from "./Tradematch_Skeleton_Buyer.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";
import * as Tradematch_Buy_Aqua_Product_Apply_Buyer from "./Tradematch_Buy_Aqua_Product_Apply_Buyer.mjs";
import * as Tradematch_Buy_Farm_Product_Apply_Buyer from "./Tradematch_Buy_Farm_Product_Apply_Buyer.mjs";
import * as TradematchBuyProductApplyBuyer_Query_graphql from "../../../__generated__/TradematchBuyProductApplyBuyer_Query_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(TradematchBuyProductApplyBuyer_Query_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(TradematchBuyProductApplyBuyer_Query_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, TradematchBuyProductApplyBuyer_Query_graphql.node, TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, TradematchBuyProductApplyBuyer_Query_graphql.node, TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(TradematchBuyProductApplyBuyer_Query_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(TradematchBuyProductApplyBuyer_Query_graphql.node, TradematchBuyProductApplyBuyer_Query_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var Query_productSalesType_decode = TradematchBuyProductApplyBuyer_Query_graphql.Utils.productSalesType_decode;

var Query_productSalesType_fromString = TradematchBuyProductApplyBuyer_Query_graphql.Utils.productSalesType_fromString;

var Query = {
  productSalesType_decode: Query_productSalesType_decode,
  productSalesType_fromString: Query_productSalesType_fromString,
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function Tradematch_Buy_Product_Apply_Buyer$Content(props) {
  var pNumber = props.pNumber;
  var match = use({
        productNumber: pNumber
      }, undefined, undefined, undefined, undefined);
  var product = match.product;
  var tmp;
  var exit = 0;
  if (product !== undefined) {
    var variant = product.NAME;
    if (variant === "UnselectedUnionMember") {
      exit = 1;
    } else {
      tmp = variant === "MatchingProduct" ? React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer.make, {
              pNumber: pNumber
            }) : React.createElement(Tradematch_Buy_Aqua_Product_Apply_Buyer.make, {
              pNumber: pNumber
            });
    }
  } else {
    exit = 1;
  }
  if (exit === 1) {
    tmp = React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Header_Buyer.make, {
              title: ""
            }), React.createElement(Tradematch_Skeleton_Buyer.make, {}), React.createElement(Tradematch_NotFound_Buyer.make, {}));
  }
  return React.createElement("div", {
              className: "bg-gray-100"
            }, React.createElement("div", {
                  className: "relative container bg-white max-w-3xl mx-auto min-h-screen"
                }, React.createElement(RescriptReactErrorBoundary.make, {
                      children: React.createElement(React.Suspense, {
                            children: Caml_option.some(tmp),
                            fallback: Caml_option.some(React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Header_Buyer.make, {}), React.createElement(Tradematch_Skeleton_Buyer.make, {})))
                          }),
                      fallback: (function (param) {
                          return React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Header_Buyer.make, {}), React.createElement(Tradematch_Skeleton_Buyer.make, {}), React.createElement(Tradematch_NotFound_Buyer.make, {}));
                        })
                    })));
}

var Content = {
  make: Tradematch_Buy_Product_Apply_Buyer$Content
};

function Tradematch_Buy_Product_Apply_Buyer(props) {
  var pNumber = Belt_Int.fromString(props.pid);
  return React.createElement(Authorization.Buyer.make, {
              children: pNumber !== undefined ? React.createElement(Tradematch_Buy_Product_Apply_Buyer$Content, {
                      pNumber: pNumber
                    }) : React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Header_Buyer.make, {}), React.createElement(Tradematch_Skeleton_Buyer.make, {}), React.createElement(Tradematch_NotFound_Buyer.make, {})),
              title: "견적 신청"
            });
}

var make = Tradematch_Buy_Product_Apply_Buyer;

export {
  Query ,
  Content ,
  make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as DS_Toast from "../../../components/common/container/DS_Toast.mjs";
import * as Skeleton from "../../../components/Skeleton.mjs";
import * as DS_Button from "../../../components/common/element/DS_Button.mjs";
import * as DS_Dialog from "../../../components/common/container/DS_Dialog.mjs";
import * as IconArrow from "../../../components/svgs/IconArrow.mjs";
import * as IconError from "../../../components/svgs/IconError.mjs";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "../../../utils/CustomHooks.mjs";
import * as ReactRelay from "react-relay";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Js_null_undefined from "rescript/lib/es6/js_null_undefined.js";
import * as RescriptRelay_Internal from "rescript-relay/src/RescriptRelay_Internal.mjs";
import * as ReactToastNotifications from "react-toast-notifications";
import * as Tradematch_Buy_Farm_Apply_Steps_Buyer from "../../../components/Tradematch_Buy_Farm_Apply_Steps_Buyer.mjs";
import * as TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql from "../../../__generated__/TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql.mjs";
import * as TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql from "../../../__generated__/TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.mjs";
import * as TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql from "../../../__generated__/TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.mjs";
import * as TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql from "../../../__generated__/TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.mjs";
import * as TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql from "../../../__generated__/TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.mjs";

function use(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertResponse, data);
}

function useLoader(param) {
  var match = ReactRelay.useQueryLoader(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertResponse, data);
}

function retain(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_MatchingProduct_Query_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var MatchingProduct = {
  Operation: undefined,
  Types: undefined,
  use: use,
  useLoader: useLoader,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  usePreloaded: usePreloaded,
  retain: retain
};

function use$1(variables, fetchPolicy, fetchKey, networkCacheConfig, param) {
  var data = ReactRelay.useLazyLoadQuery(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node, RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertVariables(variables)), {
        fetchKey: fetchKey,
        fetchPolicy: RescriptRelay.mapFetchPolicy(fetchPolicy),
        networkCacheConfig: networkCacheConfig
      });
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertResponse, data);
}

function useLoader$1(param) {
  var match = ReactRelay.useQueryLoader(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node);
  var loadQueryFn = match[1];
  var loadQuery = React.useMemo((function () {
          return function (param, param$1, param$2, param$3) {
            return Curry._2(loadQueryFn, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertVariables(param), {
                        fetchPolicy: param$1,
                        networkCacheConfig: param$2
                      });
          };
        }), [loadQueryFn]);
  return [
          Caml_option.nullable_to_opt(match[0]),
          loadQuery,
          match[2]
        ];
}

function $$fetch$1(environment, variables, onResult, networkCacheConfig, fetchPolicy, param) {
  ReactRelay.fetchQuery(environment, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).subscribe({
        next: (function (res) {
            Curry._1(onResult, {
                  TAG: /* Ok */0,
                  _0: TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertResponse(res)
                });
          }),
        error: (function (err) {
            Curry._1(onResult, {
                  TAG: /* Error */1,
                  _0: err
                });
          })
      });
}

function fetchPromised$1(environment, variables, networkCacheConfig, fetchPolicy, param) {
  var __x = ReactRelay.fetchQuery(environment, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertVariables(variables), {
          networkCacheConfig: networkCacheConfig,
          fetchPolicy: RescriptRelay.mapFetchQueryFetchPolicy(fetchPolicy)
        }).toPromise();
  return Js_promise.then_((function (res) {
                return Promise.resolve(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertResponse(res));
              }), __x);
}

function usePreloaded$1(queryRef, param) {
  var data = ReactRelay.usePreloadedQuery(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node, queryRef);
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertResponse, data);
}

function retain$1(environment, variables) {
  var operationDescriptor = RelayRuntime.createOperationDescriptor(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.node, TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Internal.convertVariables(variables));
  return environment.retain(operationDescriptor);
}

var TradematchDemands_orderDirection_decode = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.orderDirection_decode;

var TradematchDemands_orderDirection_fromString = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.orderDirection_fromString;

var TradematchDemands_tradematchDemandOrderBy_decode = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchDemandOrderBy_decode;

var TradematchDemands_tradematchDemandOrderBy_fromString = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchDemandOrderBy_fromString;

var TradematchDemands_tradematchDemandStatus_decode = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchDemandStatus_decode;

var TradematchDemands_tradematchDemandStatus_fromString = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchDemandStatus_fromString;

var TradematchDemands_tradematchProductType_decode = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchProductType_decode;

var TradematchDemands_tradematchProductType_fromString = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Query_graphql.Utils.tradematchProductType_fromString;

var TradematchDemands = {
  orderDirection_decode: TradematchDemands_orderDirection_decode,
  orderDirection_fromString: TradematchDemands_orderDirection_fromString,
  tradematchDemandOrderBy_decode: TradematchDemands_tradematchDemandOrderBy_decode,
  tradematchDemandOrderBy_fromString: TradematchDemands_tradematchDemandOrderBy_fromString,
  tradematchDemandStatus_decode: TradematchDemands_tradematchDemandStatus_decode,
  tradematchDemandStatus_fromString: TradematchDemands_tradematchDemandStatus_fromString,
  tradematchProductType_decode: TradematchDemands_tradematchProductType_decode,
  tradematchProductType_fromString: TradematchDemands_tradematchProductType_fromString,
  Operation: undefined,
  Types: undefined,
  use: use$1,
  useLoader: useLoader$1,
  $$fetch: $$fetch$1,
  fetchPromised: fetchPromised$1,
  usePreloaded: usePreloaded$1,
  retain: retain$1
};

var Query = {
  MatchingProduct: MatchingProduct,
  TradematchDemands: TradematchDemands
};

var getConnectionNodes = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Utils.getConnectionNodes;

function internal_makeRefetchableFnOpts(fetchPolicy, onComplete, param) {
  var tmp = {};
  var tmp$1 = RescriptRelay.mapFetchPolicy(fetchPolicy);
  if (tmp$1 !== undefined) {
    tmp.fetchPolicy = Caml_option.valFromOption(tmp$1);
  }
  var tmp$2 = RescriptRelay_Internal.internal_nullableToOptionalExnHandler(onComplete);
  if (tmp$2 !== undefined) {
    tmp.onComplete = Caml_option.valFromOption(tmp$2);
  }
  return tmp;
}

function useRefetchable(fRef) {
  var match = ReactRelay.useRefetchableFragment(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.node, fRef);
  var refetchFn = match[1];
  var data = RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Internal.convertFragment, match[0]);
  return [
          data,
          React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return Curry._2(refetchFn, RescriptRelay_Internal.internal_removeUndefinedAndConvertNullsRaw(TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [refetchFn])
        ];
}

function use$2(fRef) {
  var data = ReactRelay.useFragment(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.node, fRef);
  return RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Internal.convertFragment, data);
}

function useOpt(opt_fRef) {
  var fr = opt_fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(opt_fRef)) : undefined;
  var nullableFragmentData = ReactRelay.useFragment(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.node, fr !== undefined ? Js_null_undefined.fromOption(Caml_option.some(Caml_option.valFromOption(fr))) : null);
  var data = (nullableFragmentData == null) ? undefined : Caml_option.some(nullableFragmentData);
  return RescriptRelay_Internal.internal_useConvertedValue((function (rawFragment) {
                if (rawFragment !== undefined) {
                  return TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Internal.convertFragment(rawFragment);
                }
                
              }), data);
}

function usePagination(fr) {
  var p = ReactRelay.usePaginationFragment(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.node, fr);
  var data = RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          isLoadingNext: p.isLoadingNext,
          isLoadingPrevious: p.isLoadingPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

function useBlockingPagination(fRef) {
  var p = ReactRelay.useBlockingPaginationFragment(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.node, fRef);
  var data = RescriptRelay_Internal.internal_useConvertedValue(TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Internal.convertFragment, p.data);
  return {
          data: data,
          loadNext: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadNext(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadNext]),
          loadPrevious: React.useMemo((function () {
                  return function (param, param$1, param$2) {
                    return p.loadPrevious(param, {
                                onComplete: RescriptRelay_Internal.internal_nullableToOptionalExnHandler(param$1)
                              });
                  };
                }), [p.loadPrevious]),
          hasNext: p.hasNext,
          hasPrevious: p.hasPrevious,
          refetch: React.useMemo((function () {
                  return function (param, param$1, param$2, param$3) {
                    return p.refetch(RescriptRelay_Internal.internal_cleanObjectFromUndefinedRaw(TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql.Internal.convertVariables(param)), internal_makeRefetchableFnOpts(param$1, param$2, undefined));
                  };
                }), [p.refetch])
        };
}

var makeRefetchVariables = TradematchBuyFarmProductApplyBuyerRefetchQuery_graphql.Types.makeRefetchVariables;

var TradematchDemands_tradematchDemandStatus_decode$1 = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Utils.tradematchDemandStatus_decode;

var TradematchDemands_tradematchDemandStatus_fromString$1 = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Utils.tradematchDemandStatus_fromString;

var TradematchDemands_tradematchPackageQuantityUnit_decode = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Utils.tradematchPackageQuantityUnit_decode;

var TradematchDemands_tradematchPackageQuantityUnit_fromString = TradematchBuyFarmProductApplyBuyer_TradematchDemands_Fragment_graphql.Utils.tradematchPackageQuantityUnit_fromString;

var TradematchDemands$1 = {
  tradematchDemandStatus_decode: TradematchDemands_tradematchDemandStatus_decode$1,
  tradematchDemandStatus_fromString: TradematchDemands_tradematchDemandStatus_fromString$1,
  tradematchPackageQuantityUnit_decode: TradematchDemands_tradematchPackageQuantityUnit_decode,
  tradematchPackageQuantityUnit_fromString: TradematchDemands_tradematchPackageQuantityUnit_fromString,
  getConnectionNodes: getConnectionNodes,
  Types: undefined,
  internal_makeRefetchableFnOpts: internal_makeRefetchableFnOpts,
  useRefetchable: useRefetchable,
  Operation: undefined,
  use: use$2,
  useOpt: useOpt,
  usePagination: usePagination,
  useBlockingPagination: useBlockingPagination,
  makeRefetchVariables: makeRefetchVariables
};

var Fragment = {
  TradematchDemands: TradematchDemands$1
};

function commitMutation(environment, variables, optimisticUpdater, optimisticResponse, updater, onCompleted, onError, uploadables, param) {
  return RelayRuntime.commitMutation(environment, {
              mutation: TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.node,
              variables: TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertVariables(variables),
              onCompleted: (function (res, err) {
                  if (onCompleted !== undefined) {
                    return Curry._2(onCompleted, TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertResponse(res), (err == null) ? undefined : Caml_option.some(err));
                  }
                  
                }),
              onError: (function (err) {
                  if (onError !== undefined) {
                    return Curry._1(onError, (err == null) ? undefined : Caml_option.some(err));
                  }
                  
                }),
              optimisticResponse: optimisticResponse !== undefined ? TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertWrapRawResponse(optimisticResponse) : undefined,
              optimisticUpdater: optimisticUpdater,
              updater: updater !== undefined ? (function (store, r) {
                    Curry._2(updater, store, TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertResponse(r));
                  }) : undefined,
              uploadables: uploadables
            });
}

function use$3(param) {
  var match = ReactRelay.useMutation(TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.node);
  var mutate = match[0];
  return [
          React.useMemo((function () {
                  return function (param, param$1, param$2, param$3, param$4, param$5, param$6, param$7, param$8) {
                    return Curry._1(mutate, {
                                onError: param,
                                onCompleted: param$1 !== undefined ? (function (r, errors) {
                                      Curry._2(param$1, TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertResponse(r), (errors == null) ? undefined : Caml_option.some(errors));
                                    }) : undefined,
                                onUnsubscribe: param$2,
                                optimisticResponse: param$3 !== undefined ? TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertWrapRawResponse(param$3) : undefined,
                                optimisticUpdater: param$4,
                                updater: param$5 !== undefined ? (function (store, r) {
                                      Curry._2(param$5, store, TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertResponse(r));
                                    }) : undefined,
                                variables: TradematchBuyFarmProductApplyBuyer_DeleteTradematchDemand_Mutation_graphql.Internal.convertVariables(param$6),
                                uploadables: param$7
                              });
                  };
                }), [mutate]),
          match[1]
        ];
}

var DeleteTradematchDemand = {
  Operation: undefined,
  Types: undefined,
  commitMutation: commitMutation,
  use: use$3
};

var Mutation = {
  DeleteTradematchDemand: DeleteTradematchDemand
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$Layout(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: "bg-gray-100"
            }, React.createElement("div", {
                  className: "relative container bg-white max-w-3xl mx-auto min-h-screen"
                }, children));
}

var Layout = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$Layout
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$Header(Props) {
  var title = Props.title;
  var handleClickLeftButtonOpt = Props.handleClickLeftButton;
  var handleClickLeftButton = handleClickLeftButtonOpt !== undefined ? handleClickLeftButtonOpt : (function (prim) {
        window.history.back();
      });
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "w-full fixed top-0 left-0 z-10"
                }, React.createElement("header", {
                      className: "w-full max-w-3xl mx-auto h-14 bg-white"
                    }, React.createElement("div", {
                          className: "px-5 py-4 flex justify-between"
                        }, React.createElement("button", {
                              onClick: (function (param) {
                                  Curry._1(handleClickLeftButton, undefined);
                                })
                            }, React.createElement(IconArrow.make, {
                                  height: "24",
                                  width: "24",
                                  className: "rotate-180"
                                })), React.createElement("div", undefined, React.createElement("span", {
                                  className: "font-bold text-base"
                                }, Belt_Option.mapWithDefault(title, "", (function (x) {
                                        return x;
                                      })))), React.createElement("div", undefined)))), React.createElement("div", {
                  className: "w-full h-14"
                }));
}

var Header = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$Header
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$ProgressBar(Props) {
  var match = CustomHooks.FarmTradematchStep.use(undefined);
  var percentage = (match.currentIndex + 1 | 0) / (match.length + 1 | 0) * 100;
  var style = {
    width: "" + String(percentage) + "%"
  };
  return React.createElement("div", {
              className: "max-w-3xl fixed h-1 w-full bg-surface z-[10]"
            }, React.createElement("div", {
                  className: "absolute left-0 top-0 bg-primary z-30 h-full transition-all",
                  style: style
                }));
}

var ProgressBar = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$ProgressBar
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$Skeleton(Props) {
  return React.createElement(React.Fragment, undefined, React.createElement("div", {
                  className: "px-5 py-9"
                }, React.createElement(Skeleton.Box.make, {
                      className: "h-18"
                    })), React.createElement("div", {
                  className: "space-y-8"
                }, React.createElement("div", {
                      className: "px-5 space-y-1"
                    }, React.createElement(Skeleton.Box.make, {
                          className: "h-7 w-1/5"
                        }), React.createElement(Skeleton.Box.make, {
                          className: "h-5 w-1/3"
                        }), React.createElement(Skeleton.Box.make, {
                          className: "h-5 w-1/2"
                        })), React.createElement("div", {
                      className: "px-5 space-y-1"
                    }, React.createElement(Skeleton.Box.make, {
                          className: "h-7 w-1/5"
                        }), React.createElement(Skeleton.Box.make, {
                          className: "h-5 w-1/3"
                        }), React.createElement(Skeleton.Box.make, {
                          className: "h-5 w-1/2"
                        }))), React.createElement("div", {
                  className: "fixed bottom-0 max-w-3xl w-full px-4 py-5"
                }, React.createElement(Skeleton.Box.make, {
                      className: "w-full rounded-xl h-[52px]"
                    })), React.createElement("div", {
                  className: "h-24"
                }));
}

var Skeleton$1 = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$Skeleton
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$NotFoundProductOrDemand(Props) {
  return React.createElement(DS_Dialog.Popup.Root.make, {
              children: React.createElement(DS_Dialog.Popup.Portal.make, {
                    children: null
                  }, React.createElement(DS_Dialog.Popup.Overlay.make, {}), React.createElement(DS_Dialog.Popup.Content.make, {
                        children: null
                      }, React.createElement(DS_Dialog.Popup.Title.make, {
                            children: "상품 정보를 찾을 수 없습니다."
                          }), React.createElement(DS_Dialog.Popup.Description.make, {
                            children: "해당 상품을 찾을 수 없습니다."
                          }), React.createElement(DS_Dialog.Popup.Buttons.make, {
                            children: React.createElement(DS_Dialog.Popup.Close.make, {
                                  children: React.createElement(DS_Button.Normal.Large1.make, {
                                        label: "돌아가기",
                                        onClick: (function (param) {
                                            window.history.back();
                                          })
                                      }),
                                  asChild: true
                                })
                          }))),
              open: true
            });
}

var NotFoundProductOrDemand = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$NotFoundProductOrDemand
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$StatusChecker(Props) {
  var currentDemand = Props.currentDemand;
  var connectionId = Props.connectionId;
  var children = Props.children;
  var match = CustomHooks.FarmTradematchStep.use(undefined);
  var match$1 = match.router;
  var replace = match$1.replace;
  var toFirst = match$1.toFirst;
  var match$2 = ReactToastNotifications.useToasts();
  var addToast = match$2.addToast;
  var match$3 = use$3(undefined);
  var deleteMutate = match$3[0];
  var match$4 = Belt_Option.isSome(currentDemand);
  if (match.isFirst || match$4) {
    
  } else {
    Curry._1(toFirst, undefined);
  }
  var hasDraftDemand = Belt_Option.isSome(currentDemand);
  var match$5 = React.useState(function () {
        return hasDraftDemand;
      });
  var setIsOpenCheckDraftDemand = match$5[1];
  var isOpenCheckDraftDemand = match$5[0];
  return React.createElement(React.Fragment, undefined, isOpenCheckDraftDemand ? React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Header, {}), React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Skeleton, {})) : children, React.createElement(DS_Dialog.Popup.Root.make, {
                  children: React.createElement(DS_Dialog.Popup.Portal.make, {
                        children: null
                      }, React.createElement(DS_Dialog.Popup.Overlay.make, {}), React.createElement(DS_Dialog.Popup.Content.make, {
                            children: null
                          }, React.createElement(DS_Dialog.Popup.Title.make, {
                                children: "작성중인 견적서가 있습니다."
                              }), React.createElement(DS_Dialog.Popup.Description.make, {
                                children: "이어서 작성하시겠어요?"
                              }), React.createElement(DS_Dialog.Popup.Buttons.make, {
                                children: null
                              }, React.createElement(DS_Dialog.Popup.Close.make, {
                                    children: React.createElement(DS_Button.Normal.Large1.make, {
                                          label: "새로 작성하기",
                                          onClick: (function (param) {
                                              if (currentDemand === undefined) {
                                                return ;
                                              }
                                              var variables = {
                                                connections: [connectionId],
                                                id: currentDemand.id
                                              };
                                              Curry.app(deleteMutate, [
                                                    (function (err) {
                                                        addToast(React.createElement("div", {
                                                                  className: "flex items-center"
                                                                }, React.createElement(IconError.make, {
                                                                      width: "24",
                                                                      height: "24",
                                                                      className: "mr-2"
                                                                    }), err.message), {
                                                              appearance: "error"
                                                            });
                                                      }),
                                                    (function (param, param$1) {
                                                        var variant = param.deleteTradematchDemand.NAME;
                                                        if (variant === "UnselectedUnionMember" || variant === "Error") {
                                                          return addToast(DS_Toast.getToastComponent("요청 중 요류가 발생했습니다. 잠시 후 다시 시도해주세요.", "error"), {
                                                                      appearance: "error"
                                                                    });
                                                        } else {
                                                          setIsOpenCheckDraftDemand(function (param) {
                                                                return false;
                                                              });
                                                          return Curry._1(toFirst, undefined);
                                                        }
                                                      }),
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    undefined,
                                                    variables,
                                                    undefined,
                                                    undefined
                                                  ]);
                                            }),
                                          buttonType: "white"
                                        }),
                                    asChild: true
                                  }), React.createElement(DS_Dialog.Popup.Close.make, {
                                    children: React.createElement(DS_Button.Normal.Large1.make, {
                                          label: "이어서 작성하기",
                                          onClick: (function (param) {
                                              setIsOpenCheckDraftDemand(function (param) {
                                                    return false;
                                                  });
                                              if (currentDemand === undefined) {
                                                return Curry._1(toFirst, undefined);
                                              }
                                              var match = Belt_Option.isSome(currentDemand.priceGroup);
                                              var match$1 = currentDemand.productCategoryCode.length > 0;
                                              var match$2 = Belt_Option.isSome(currentDemand.numberOfPackagesPerTrade);
                                              var match$3 = Belt_Option.isSome(currentDemand.packageQuantityUnit);
                                              var match$4 = Belt_Option.isSome(currentDemand.quantityPerPackage);
                                              var match$5 = Belt_Option.isSome(currentDemand.wantedPricePerPackage);
                                              var match$6 = currentDemand.tradeCycle.length > 0;
                                              var match$7 = currentDemand.productProcess.length > 0;
                                              var match$8 = currentDemand.productSize.length > 0;
                                              var match$9 = currentDemand.productRequirements.length > 0;
                                              Curry._1(replace, match && match$1 ? (
                                                      match$2 && match$3 && match$4 ? (
                                                          match$5 ? (
                                                              match$6 ? (
                                                                  match$7 && match$8 && match$9 ? /* Shipping */5 : /* Requirement */4
                                                                ) : /* Cycle */3
                                                            ) : /* Price */2
                                                        ) : /* Count */1
                                                    ) : /* Grade */0);
                                            })
                                        }),
                                    asChild: true
                                  })))),
                  open: isOpenCheckDraftDemand
                }));
}

var StatusChecker = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$StatusChecker
};

function Tradematch_Buy_Farm_Product_Apply_Buyer$Content(Props) {
  var matchingProduct = Props.matchingProduct;
  var match = CustomHooks.FarmTradematchStep.use(undefined);
  var draftStatusTradematchDemands = use$1({
        first: 100,
        orderBy: "DRAFTED_AT",
        orderDirection: "DESC",
        productIds: [matchingProduct.id],
        productTypes: ["AGRICULTURAL"],
        statuses: ["DRAFT"]
      }, /* NetworkOnly */3, undefined, undefined, undefined);
  var match$1 = usePagination(draftStatusTradematchDemands.fragmentRefs);
  var data = match$1.data;
  var tradematchDemands = Curry._1(getConnectionNodes, data.tradematchDemands);
  var connectionId = data.tradematchDemands.__id;
  var currentDemand = Garter_Array.first(tradematchDemands);
  var tmp;
  switch (match.current) {
    case /* Grade */0 :
        tmp = React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Grade.make, {
              pid: matchingProduct.id,
              currentDemand: currentDemand,
              product: matchingProduct,
              connectionId: connectionId
            });
        break;
    case /* Count */1 :
        tmp = React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Count.make, {
              product: matchingProduct,
              currentDemand: currentDemand
            });
        break;
    case /* Price */2 :
        tmp = React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Price.make, {
              product: matchingProduct,
              currentDemand: currentDemand
            });
        break;
    case /* Cycle */3 :
        tmp = React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Cycle.make, {
              currentDemand: currentDemand
            });
        break;
    case /* Requirement */4 :
        tmp = React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Requirement.make, {
              currentDemand: currentDemand
            });
        break;
    case /* Shipping */5 :
        tmp = React.createElement(React.Suspense, {
              children: React.createElement(Tradematch_Buy_Farm_Apply_Steps_Buyer.Shipping.make, {
                    currentDemand: currentDemand
                  }),
              fallback: React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Skeleton, {})
            });
        break;
    
  }
  return React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$StatusChecker, {
              currentDemand: currentDemand,
              connectionId: connectionId,
              children: null
            }, React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Header, {
                  title: "" + matchingProduct.category.name + " 견적 신청"
                }), React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$ProgressBar, {}), tmp);
}

var Content = {
  make: Tradematch_Buy_Farm_Product_Apply_Buyer$Content
};

function Tradematch_Buy_Farm_Product_Apply_Buyer(Props) {
  var pNumber = Props.pNumber;
  var match = use({
        productNumber: pNumber
      }, undefined, undefined, undefined, undefined);
  var product = match.product;
  if (product !== undefined && product.NAME === "MatchingProduct") {
    return React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Content, {
                matchingProduct: product.VAL
              });
  }
  return React.createElement(React.Fragment, undefined, React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Header, {}), React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$Skeleton, {}), React.createElement(Tradematch_Buy_Farm_Product_Apply_Buyer$NotFoundProductOrDemand, {}));
}

var make = Tradematch_Buy_Farm_Product_Apply_Buyer;

export {
  Query ,
  Fragment ,
  Mutation ,
  Layout ,
  Header ,
  ProgressBar ,
  Skeleton$1 as Skeleton,
  NotFoundProductOrDemand ,
  StatusChecker ,
  Content ,
  make ,
}
/* react Not a pure module */

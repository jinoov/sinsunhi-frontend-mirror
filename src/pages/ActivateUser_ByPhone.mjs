// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Input from "../components/common/Input.mjs";
import * as React from "react";
import * as ReForm from "@rescriptbr/reform/src/ReForm.mjs";
import * as Skeleton from "../components/Skeleton.mjs";
import * as IconError from "../components/svgs/IconError.mjs";
import Head from "next/head";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as FetchHelper from "../utils/FetchHelper.mjs";
import * as ReactEvents from "../utils/ReactEvents.mjs";
import * as Router from "next/router";
import * as ReactToastNotifications from "react-toast-notifications";
import * as ActivateUser_ByPhone_VerificationCode from "./ActivateUser_ByPhone_VerificationCode.mjs";

function get(values, field) {
  return values.phoneNumber;
}

function set(values, field, value) {
  return {
          phoneNumber: value
        };
}

var VerifyPhoneNumberFormFields = {
  get: get,
  set: set
};

var VerifyPhoneNumberForm = ReForm.Make({
      set: set,
      get: get
    });

var initialStateVerifyPhoneNumber = {
  phoneNumber: ""
};

var sendBtnStyle = "w-full bg-primary rounded-xl text-white font-bold whitespace-nowrap focus:outline-none focus:ring-2 focus:ring-gray-700 focus:ring-offset-1 h-14";

var resendBtnStyle = "w-full bg-gray-50 rounded-xl whitespace-nowrap focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-offset-1 h-14";

function ActivateUser_ByPhone$SendPhoneNumber(Props) {
  var uid = Props.uid;
  var role = Props.role;
  var match = ReactToastNotifications.useToasts();
  var addToast = match.addToast;
  var router = Router.useRouter();
  var match$1 = React.useState(function () {
        return /* BeforeSendSMS */0;
      });
  var setSMS = match$1[1];
  var sms = match$1[0];
  var onSubmitVerifyPhoneNumber = function (param) {
    setSMS(function (param) {
          return /* SendingSMS */1;
        });
    var phoneNumber = param.state.values.phoneNumber.replace(new RegExp("\-", "g"), "");
    Belt_Option.map(JSON.stringify({
              "recipient-no": phoneNumber,
              uid: uid,
              "cert-type": "reset-dormant"
            }), (function (body) {
            return FetchHelper.post("" + Env.restApiUrl + "/user/sms", body, (function (param) {
                          var query = new URLSearchParams(router.query).toString();
                          var role$1 = role === "farmer" ? "seller" : role;
                          router.push("/" + role$1 + "/activate-user?" + query + "&phone=" + phoneNumber + "");
                        }), (function (err) {
                          setSMS(function (param) {
                                return /* FailureToSendSMS */3;
                              });
                          addToast(React.createElement("div", {
                                    className: "flex items-center"
                                  }, React.createElement(IconError.make, {
                                        width: "24",
                                        height: "24",
                                        className: "mr-2"
                                      }), "휴대폰 번호가 일치하지 않아요"), {
                                appearance: "error"
                              });
                        }));
          }));
  };
  var verifyPhoneNumberForm = Curry._7(VerifyPhoneNumberForm.use, initialStateVerifyPhoneNumber, /* Schema */{
        _0: Belt_Array.concatMany([Curry._4(VerifyPhoneNumberForm.ReSchema.Validation.regExp, "휴대전화 번호를 다시 확인해주세요.", "^\\d{3}-\\d{3,4}-\\d{4}$", undefined, /* PhoneNumber */0)])
      }, onSubmitVerifyPhoneNumber, undefined, undefined, /* OnChange */0, undefined);
  var handleOnSubmit = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  Curry._1(verifyPhoneNumberForm.submit, undefined);
                }), param);
  };
  var handleOnChangePhoneNumber = function (e) {
    var newValue = e.currentTarget.value.replace(/[^0-9]/g, "").replace(/(^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3").replace("--", "-");
    console.log(newValue);
    Curry._4(verifyPhoneNumberForm.setFieldValue, /* PhoneNumber */0, newValue, true, undefined);
  };
  var handleOnSubmitPhoneNumber = function (param) {
    return ReactEvents.interceptingHandler((function (param) {
                  if (sms === 0) {
                    return Curry._1(verifyPhoneNumberForm.submit, undefined);
                  }
                  switch (sms) {
                    case /* SendingSMS */1 :
                        return ;
                    case /* SuccessToSendSMS */2 :
                        setSMS(function (param) {
                              return /* BeforeSendSMS */0;
                            });
                        return Curry._4(verifyPhoneNumberForm.setFieldValue, /* PhoneNumber */0, "", false, undefined);
                    case /* FailureToSendSMS */3 :
                        return Curry._1(verifyPhoneNumberForm.submit, undefined);
                    
                  }
                }), param);
  };
  var isDisabledVerifyPhoneNumberForm = sms === 2 || sms === 1;
  var isDisabledVerifyPhoneNumberButton = sms === 1;
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "휴대폰으로 휴면계정 해제")
                }), React.createElement("div", {
                  className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center pb-20"
                }, React.createElement("div", {
                      className: "flex-auto flex flex-col xl:justify-center items-center"
                    }, React.createElement("div", {
                          className: "w-full p-5 xl:py-12 text-text-L1"
                        }, React.createElement("h2", {
                              className: "text-xl font-bold whitespace-pre"
                            }, "휴면 상태를 해제하시려면\n휴대폰 번호 인증이 필요해요"), React.createElement("div", {
                              className: "mt-12 mb-1"
                            }, React.createElement("span", {
                                  className: "text-sm text-text-L2"
                                }, "휴대폰 번호")), React.createElement("form", {
                              onSubmit: handleOnSubmit
                            }, React.createElement(Input.make, {
                                  type_: "text",
                                  name: "phone-number",
                                  placeholder: "휴대폰 번호를 입력해주세요",
                                  className: "flex-1",
                                  value: verifyPhoneNumberForm.values.phoneNumber,
                                  onChange: handleOnChangePhoneNumber,
                                  size: /* Large */0,
                                  error: Curry._1(verifyPhoneNumberForm.getFieldError, /* Field */{
                                        _0: /* PhoneNumber */0
                                      }),
                                  disabled: isDisabledVerifyPhoneNumberForm
                                }))), React.createElement("div", {
                          className: "w-full px-5"
                        }, React.createElement("button", {
                              className: sms === 2 || sms === 1 ? resendBtnStyle : sendBtnStyle,
                              disabled: isDisabledVerifyPhoneNumberButton,
                              type: "button",
                              onClick: handleOnSubmitPhoneNumber
                            }, "확인")))));
}

var SendPhoneNumber = {
  make: ActivateUser_ByPhone$SendPhoneNumber
};

function ActivateUser_ByPhone$Error(Props) {
  var message = Props.message;
  React.useEffect((function () {
          window.alert(message);
        }), []);
  return React.createElement("div", {
              className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center"
            }, React.createElement(Skeleton.Box.make, {
                  className: "h-10"
                }));
}

var $$Error = {
  make: ActivateUser_ByPhone$Error
};

function ActivateUser_ByPhone(Props) {
  var skipEmail = Props.skipEmail;
  var phone = Props.phone;
  var uid = Props.uid;
  var role = Props.role;
  if (phone !== undefined) {
    if (role !== undefined && uid !== undefined) {
      return React.createElement(ActivateUser_ByPhone_VerificationCode.make, {
                  phone: Caml_option.valFromOption(phone),
                  skipEmail: skipEmail,
                  uid: Caml_option.valFromOption(uid),
                  role: role
                });
    }
    
  } else if (role !== undefined && uid !== undefined) {
    return React.createElement(ActivateUser_ByPhone$SendPhoneNumber, {
                uid: Caml_option.valFromOption(uid),
                role: role
              });
  }
  return React.createElement(ActivateUser_ByPhone$Error, {
              message: "잘못된 접근 입니다."
            });
}

var make = ActivateUser_ByPhone;

export {
  VerifyPhoneNumberFormFields ,
  VerifyPhoneNumberForm ,
  initialStateVerifyPhoneNumber ,
  sendBtnStyle ,
  resendBtnStyle ,
  SendPhoneNumber ,
  $$Error ,
  make ,
}
/* VerifyPhoneNumberForm Not a pure module */

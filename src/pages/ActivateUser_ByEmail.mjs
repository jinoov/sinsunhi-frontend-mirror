// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Skeleton from "../components/Skeleton.mjs";
import * as IconArrow from "../components/svgs/IconArrow.mjs";
import * as IconCheck from "../components/svgs/IconCheck.mjs";
import * as IconError from "../components/svgs/IconError.mjs";
import Head from "next/head";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ChannelTalk from "../bindings/ChannelTalk.mjs";
import * as FetchHelper from "../utils/FetchHelper.mjs";
import * as Router from "next/router";
import * as ReactToastNotifications from "react-toast-notifications";
import ChatContainerSvg from "../../public/assets/chat-container.svg";
import EmailContainerSvg from "../../public/assets/email-container.svg";

function submitEmail(uid, role, onSuccess, addToast) {
  Belt_Option.map(JSON.stringify({
            uid: uid,
            role: role
          }), (function (body) {
          return FetchHelper.post("" + Env.restApiUrl + "/user/dormant/send-email", body, (function (param) {
                        Curry._1(onSuccess, undefined);
                      }), (function (err) {
                        addToast(React.createElement("div", {
                                  className: "flex items-center"
                                }, React.createElement(IconError.make, {
                                      width: "24",
                                      height: "24",
                                      className: "mr-2"
                                    }), "다시 시도해주세요"), {
                              appearance: "error"
                            });
                      }));
        }));
}

var iconEmail = EmailContainerSvg;

var iconChat = ChatContainerSvg;

function ActivateUser_ByEmail$SentEmail(props) {
  var role = props.role;
  var uid = props.uid;
  var match = ReactToastNotifications.useToasts();
  var addToast = match.addToast;
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "이메일로 휴면계정 해제")
                }), React.createElement("div", {
                  className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center pb-20"
                }, React.createElement("div", {
                      className: "flex-auto flex flex-col xl:justify-center items-center"
                    }, React.createElement("div", {
                          className: "w-full p-5 xl:py-12 sm:px-20"
                        }, React.createElement("h2", {
                              className: "text-xl font-bold whitespace-pre"
                            }, "" + props.email + "로\n인증메일이 발송됐어요\n이메일을 확인해주세요"), React.createElement("div", {
                              className: "mt-10"
                            }, React.createElement("button", {
                                  className: "w-full flex justify-between items-center",
                                  onClick: (function (param) {
                                      submitEmail(uid, role, (function (param) {
                                              addToast(React.createElement("div", {
                                                        className: "flex items-center"
                                                      }, React.createElement(IconCheck.make, {
                                                            height: "24",
                                                            width: "24",
                                                            fill: "#12B564",
                                                            className: "mr-2"
                                                          }), "이메일을 다시 전송하였습니다"), {
                                                    appearance: "success"
                                                  });
                                            }), addToast);
                                    })
                                }, React.createElement("span", {
                                      className: "flex items-center"
                                    }, React.createElement("img", {
                                          src: iconEmail
                                        }), React.createElement("span", {
                                          className: "ml-3"
                                        }, "이메일 다시 보내기")), React.createElement(IconArrow.make, {
                                      height: "16",
                                      width: "16",
                                      fill: "#414347"
                                    }))), React.createElement("div", {
                              className: "mt-8"
                            }, React.createElement("button", {
                                  className: "w-full flex justify-between items-center",
                                  onClick: (function (param) {
                                      ChannelTalk.showMessenger(undefined);
                                    })
                                }, React.createElement("span", {
                                      className: "flex items-center"
                                    }, React.createElement("img", {
                                          src: iconChat
                                        }), React.createElement("span", {
                                          className: "ml-3"
                                        }, "고객센터로 1:1 문의하기")), React.createElement(IconArrow.make, {
                                      height: "16",
                                      width: "16",
                                      fill: "#414347"
                                    })))))));
}

var SentEmail = {
  make: ActivateUser_ByEmail$SentEmail
};

function ActivateUser_ByEmail$SendEmail(props) {
  var role = props.role;
  var uid = props.uid;
  var match = ReactToastNotifications.useToasts();
  var addToast = match.addToast;
  var router = Router.useRouter();
  return React.createElement(React.Fragment, undefined, React.createElement(Head, {
                  children: React.createElement("title", undefined, "이메일로 휴면계정 해제")
                }), React.createElement("div", {
                  className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center pb-20"
                }, React.createElement("div", {
                      className: "flex-auto flex flex-col xl:justify-center items-center"
                    }, React.createElement("div", {
                          className: "w-full p-5 xl:py-12 text-text-L1"
                        }, React.createElement("h2", {
                              className: "text-xl font-bold whitespace-pre"
                            }, "휴면 상태를 해제하시려면\n이메일 인증이 필요해요"), React.createElement("div", {
                              className: "mt-12"
                            }, React.createElement("span", {
                                  className: "text-sm text-text-L2"
                                }, "가입한 이메일")), React.createElement("div", {
                              className: "mt-2"
                            }, React.createElement("span", {
                                  className: "text-lg font-bold"
                                }, props.email)), React.createElement("div", {
                              className: "mt-10"
                            }, React.createElement("button", {
                                  className: "w-full bg-primary rounded-xl text-white font-bold whitespace-nowrap focus:outline-none focus:ring-2 focus:ring-gray-700 focus:ring-offset-1 h-14",
                                  type: "button",
                                  onClick: (function (param) {
                                      submitEmail(uid, role, (function (param) {
                                              router.push(router.asPath + "&sent-email=true");
                                            }), addToast);
                                    })
                                }, "인증 메일 보내기"))))));
}

var SendEmail = {
  make: ActivateUser_ByEmail$SendEmail
};

function ActivateUser_ByEmail$Error(props) {
  var message = props.message;
  React.useEffect((function () {
          window.alert(message);
        }), []);
  return React.createElement("div", {
              className: "container mx-auto max-w-lg min-h-buyer relative flex flex-col justify-center"
            }, React.createElement(Skeleton.Box.make, {
                  className: "h-10"
                }));
}

var $$Error = {
  make: ActivateUser_ByEmail$Error
};

function ActivateUser_ByEmail(props) {
  var role = props.role;
  var email = props.email;
  var uid = props.uid;
  if (email === undefined) {
    return React.createElement(ActivateUser_ByEmail$Error, {
                message: "잘못된 접근 입니다."
              });
  }
  if (uid === undefined) {
    return React.createElement(ActivateUser_ByEmail$Error, {
                message: "잘못된 접근 입니다."
              });
  }
  if (role === undefined) {
    return React.createElement(ActivateUser_ByEmail$Error, {
                message: "잘못된 접근 입니다."
              });
  }
  var role$1 = Caml_option.valFromOption(role);
  var uid$1 = Caml_option.valFromOption(uid);
  if (props.sentEmail !== undefined) {
    return React.createElement(ActivateUser_ByEmail$SentEmail, {
                email: email,
                uid: uid$1,
                role: role$1
              });
  } else {
    return React.createElement(ActivateUser_ByEmail$SendEmail, {
                email: email,
                uid: uid$1,
                role: role$1
              });
  }
}

var make = ActivateUser_ByEmail;

export {
  submitEmail ,
  iconEmail ,
  iconChat ,
  SentEmail ,
  SendEmail ,
  $$Error ,
  make ,
}
/* iconEmail Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function getFromLS(k) {
  return Belt_Option.flatMap(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function (param) {
                return Caml_option.null_to_opt(localStorage.getItem(k));
              }));
}

function setToLS(k, v) {
  Belt_Option.map(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function (param) {
          localStorage.setItem(k, v);
        }));
}

function Make(funarg) {
  var get = function (param) {
    return Belt_Option.map(getFromLS(funarg.key), funarg.fromString);
  };
  var set = function (value) {
    setToLS(funarg.key, Curry._1(funarg.toString, value));
  };
  var remove = function (param) {
    var k = funarg.key;
    Belt_Option.map(Caml_option.undefined_to_opt(typeof window === "undefined" ? undefined : window), (function (param) {
            localStorage.removeItem(k);
          }));
  };
  var useLocalStorage = function (param) {
    var match = React.useState(function () {
          
        });
    var setState = match[1];
    React.useEffect((function () {
            setState(function (param) {
                  return Belt_Option.map(getFromLS(funarg.key), funarg.fromString);
                });
          }), []);
    var setValue = function (value) {
      setToLS(funarg.key, Curry._1(funarg.toString, value));
      setState(function (param) {
            return Caml_option.some(value);
          });
    };
    return [
            match[0],
            setValue
          ];
  };
  return {
          useLocalStorage: useLocalStorage,
          get: get,
          set: set,
          remove: remove
        };
}

export {
  Make ,
}
/* react Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "../constants/Env.mjs";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function use(param) {
  var match = React.useState(function () {
        
      });
  var setBraze = match[1];
  var braze = match[0];
  React.useEffect((function () {
          var match = window.ReactNativeWebView;
          if (match == null) {
            import("@braze/web-sdk").then(function (sdk) {
                    setBraze(function (param) {
                          if (sdk == null) {
                            return ;
                          } else {
                            return Caml_option.some(sdk);
                          }
                        });
                    return Promise.resolve(undefined);
                  }).catch(function (err) {
                  console.log("braze init error: ", err);
                  return Promise.resolve(undefined);
                });
          }
          
        }), []);
  React.useEffect((function () {
          var match = window.ReactNativeWebView;
          if (match == null) {
            window.navigator.serviceWorker.register("/service-worker.js").then(function (param) {
                    if (braze !== undefined) {
                      braze.openSession();
                    }
                    return Promise.resolve(undefined);
                  }).catch(function (err) {
                  console.log("Failed to register service worker : ", err);
                  return Promise.resolve(undefined);
                });
            if (braze !== undefined) {
              braze.initialize(Env.brazeWebApiKey, {
                    baseUrl: "sdk.iad-06.braze.com",
                    enableLogging: false,
                    manageServiceWorkerExternally: true,
                    safariWebsitePushId: "web.com.sinsunhi.app"
                  });
            }
            
          }
          
        }), [braze]);
  return braze;
}

function changeUser(user, braze) {
  var match = user.role;
  if (match >= 2) {
    return ;
  } else {
    return braze.changeUser(String(user.id));
  }
}

export {
  use ,
  changeUser ,
  
}
/* Env Not a pure module */

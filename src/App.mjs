// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "./constants/Env.mjs";
import * as Braze from "./utils/Braze.mjs";
import * as React from "react";
import * as Global from "./components/Global.mjs";
import * as RelayEnv from "./constants/RelayEnv.mjs";
import * as ErrorPage from "./pages/ErrorPage.mjs";
import * as ReactUtil from "./utils/ReactUtil.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Js_promise from "rescript/lib/es6/js_promise.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "./utils/CustomHooks.mjs";
import * as FeatureFlag from "./components/common/FeatureFlag.mjs";
import * as Maintenance from "./pages/Maintenance.mjs";
import * as Router from "next/router";
import Dynamic from "next/dynamic";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as RelayRuntime from "relay-runtime";
import * as Nextjs from "@sentry/nextjs";
import * as ChannelTalkHelper from "./utils/ChannelTalkHelper.mjs";
import * as BuyerInformation_Buyer from "./components/BuyerInformation_Buyer.mjs";
import * as ReactToastNotifications from "./bindings/ReactToastNotifications.mjs";
import * as RescriptReactErrorBoundary from "@rescript/react/src/RescriptReactErrorBoundary.mjs";

function useService(param) {
  var router = Router.useRouter();
  var firstPathname = Belt_Array.getBy(router.pathname.split("/"), (function (x) {
          return x !== "";
        }));
  if (firstPathname === undefined) {
    return /* Buyer */2;
  }
  switch (firstPathname) {
    case "admin" :
        return /* Admin */1;
    case "buyer" :
    case "delivery" :
    case "matching" :
    case "products" :
        return /* Buyer */2;
    case "browser-guide" :
    case "privacy" :
    case "seller" :
    case "terms" :
        return /* Seller */0;
    default:
      return ;
  }
}

var dynamicSeller = Dynamic((function (param) {
        return Js_promise.then_((function (mode) {
                      return mode.make;
                    }), import("src/pages/seller/Seller.mjs"));
      }), {
      ssr: true
    });

var dynamicAdmin = Dynamic((function (param) {
        return Js_promise.then_((function (mode) {
                      return mode.make;
                    }), import("src/pages/admin/Admin.mjs"));
      }), {
      ssr: true
    });

var dynamicBuyer = Dynamic((function (param) {
        return Js_promise.then_((function (mode) {
                      return mode.make;
                    }), import("src/pages/buyer/Buyer.mjs"));
      }), {
      ssr: true
    });

function App$Container(Props) {
  var service = Props.service;
  var content = Props.content;
  var features = FeatureFlag.Query.use(undefined, undefined, undefined, undefined, undefined).features;
  var tmp;
  if (service !== undefined) {
    switch (service) {
      case /* Seller */0 :
          tmp = React.createElement(ReactUtil.Component.make, {
                as_: dynamicSeller,
                children: content
              });
          break;
      case /* Admin */1 :
          tmp = React.createElement(ReactUtil.Component.make, {
                as_: dynamicAdmin,
                children: content
              });
          break;
      case /* Buyer */2 :
          tmp = React.createElement(ReactUtil.Component.make, {
                as_: dynamicBuyer,
                children: content
              });
          break;
      
    }
  } else {
    tmp = content;
  }
  return React.createElement(FeatureFlag.Context.Provider.make, {
              value: features,
              children: tmp
            });
}

var Container = {
  make: App$Container
};

function $$default(props) {
  var pageProps = props.pageProps;
  var router = Router.useRouter();
  var service = useService(undefined);
  var content = React.createElement(props.Component, pageProps);
  CustomHooks.NoIE.use(router);
  CustomHooks.CRMUser.use(undefined);
  ChannelTalkHelper.Hook.useBoot(undefined);
  React.useEffect((function () {
          if (Global.$$window !== undefined) {
            Caml_option.valFromOption(Global.$$window).nextRouterPush = (function (url) {
                router.push(url);
              });
            var appboy = window.appboy;
            if (!(appboy == null)) {
              appboy.setLogger(function (prim) {
                    
                  });
            }
            
          }
          
        }), [router]);
  var dehydrateStoreData = pageProps.dehydrateStoreData;
  var environment = React.useMemo((function () {
          return RelayEnv.environment({
                      TAG: /* SinsunMarket */0,
                      _0: Env.graphqlApiUrl
                    });
        }), []);
  React.useMemo((function () {
          return Belt_Option.forEach(dehydrateStoreData, (function (records) {
                        environment.getStore().publish(new RelayRuntime.RecordSource(records));
                      }));
        }), [dehydrateStoreData]);
  return React.createElement(RescriptReactErrorBoundary.make, {
              children: React.createElement(Nextjs.ErrorBoundary, {
                    fallback: React.createElement(ErrorPage.make, {}),
                    children: React.createElement(RescriptRelay.Context.Provider.make, {
                          environment: environment,
                          children: null
                        }, React.createElement(Braze.PushNotificationRequestDialog.make, {}), React.createElement(ReactToastNotifications.ToastProvider.make, {
                              children: null
                            }, React.createElement(React.Suspense, {
                                  children: React.createElement(App$Container, {
                                        service: service,
                                        content: content
                                      })
                                }), React.createElement(BuyerInformation_Buyer.make, {}), React.createElement(Maintenance.make, {})))
                  }),
              fallback: (function (param) {
                  return React.createElement(ErrorPage.make, {});
                })
            });
}

export {
  useService ,
  dynamicSeller ,
  dynamicAdmin ,
  dynamicBuyer ,
  Container ,
  $$default ,
  $$default as default,
}
/* dynamicSeller Not a pure module */

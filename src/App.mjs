// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Braze from "./utils/Braze.mjs";
import * as React from "react";
import * as Global from "./components/Global.mjs";
import * as RelayEnv from "./constants/RelayEnv.mjs";
import * as ErrorPage from "./pages/ErrorPage.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CustomHooks from "./utils/CustomHooks.mjs";
import * as Maintenance from "./pages/Maintenance.mjs";
import * as Router from "next/router";
import * as Garter_Array from "@greenlabs/garter/src/Garter_Array.mjs";
import * as Layout_Admin from "./layouts/Layout_Admin.mjs";
import * as Layout_Buyer from "./layouts/Layout_Buyer.mjs";
import * as Layout_Seller from "./layouts/Layout_Seller.mjs";
import * as RescriptRelay from "rescript-relay/src/RescriptRelay.mjs";
import * as Nextjs from "@sentry/nextjs";
import * as ChannelTalkHelper from "./utils/ChannelTalkHelper.mjs";
import * as BuyerInformation_Buyer from "./components/BuyerInformation_Buyer.mjs";
import * as ReactToastNotifications from "./bindings/ReactToastNotifications.mjs";
import * as Layout_Estimation_Services_Buyer from "./layouts/Layout_Estimation_Services_Buyer.mjs";

var PageComponent = {};

function $$default(props) {
  var router = Router.useRouter();
  var firstPathname = Belt_Array.getBy(router.pathname.split("/"), (function (x) {
          return x !== "";
        }));
  var secondPathname = Garter_Array.get(Belt_Array.keep(router.pathname.split("/"), (function (x) {
              return x !== "";
            })), 1);
  var content = React.createElement(props.Component, props.pageProps);
  CustomHooks.NoIE.use(router);
  CustomHooks.CRMUser.use(undefined);
  ChannelTalkHelper.Hook.useBoot(undefined);
  var braze = Braze.use(undefined);
  var user = CustomHooks.Auth.use(undefined);
  React.useEffect((function () {
          var match = window.ReactNativeWebView;
          if (!(match == null) || !(braze !== undefined && typeof user !== "number")) {
            
          } else {
            Braze.changeUser(user._0, braze);
            braze.requestPushPermission();
          }
          
        }), [
        braze,
        user,
        router.asPath
      ]);
  var router$1 = Router.useRouter();
  React.useEffect((function () {
          if (Global.$$window !== undefined) {
            Caml_option.valFromOption(Global.$$window).nextRouterPush = (function (url) {
                router$1.push(url);
                
              });
          }
          
        }), [router$1]);
  var tmp;
  if (firstPathname !== undefined) {
    switch (firstPathname) {
      case "admin" :
          tmp = secondPathname !== undefined ? (
              secondPathname === "signin" ? content : React.createElement(Layout_Admin.make, {
                      children: content
                    })
            ) : React.createElement(Layout_Admin.make, {
                  children: content
                });
          break;
      case "buyer" :
          if (secondPathname !== undefined) {
            switch (secondPathname) {
              case "search" :
                  tmp = content;
                  break;
              case "rfq" :
              case "tradematch" :
                  tmp = React.createElement(Layout_Estimation_Services_Buyer.make, {
                        children: content
                      });
                  break;
              default:
                tmp = React.createElement(Layout_Buyer.make, {
                      children: content
                    });
            }
          } else {
            tmp = content;
          }
          break;
      case "seller" :
          if (secondPathname !== undefined) {
            switch (secondPathname) {
              case "reset-password" :
              case "rfq" :
              case "signin" :
              case "signup" :
                  tmp = content;
                  break;
              default:
                tmp = React.createElement(Layout_Seller.make, {
                      children: content
                    });
            }
          } else {
            tmp = React.createElement(Layout_Seller.make, {
                  children: content
                });
          }
          break;
      case "browser-guide" :
      case "privacy" :
      case "terms" :
          tmp = content;
          break;
      default:
        tmp = content;
    }
  } else {
    tmp = content;
  }
  return React.createElement(Nextjs.ErrorBoundary, {
              fallback: React.createElement(ErrorPage.make, {}),
              children: React.createElement(RescriptRelay.Context.Provider.make, {
                    environment: RelayEnv.envSinsunMarket,
                    children: React.createElement(ReactToastNotifications.ToastProvider.make, {
                          children: null
                        }, tmp, React.createElement(BuyerInformation_Buyer.make, {}), React.createElement(Maintenance.make, {}))
                  })
            });
}

export {
  PageComponent ,
  $$default ,
  $$default as default,
  
}
/* Braze Not a pure module */
